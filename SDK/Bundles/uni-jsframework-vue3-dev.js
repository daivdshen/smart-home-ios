//{"version":"4.57","encode":"base64"}
var __UniServiceStartTime__ = Date.now();var global=this; var process={env:{}}; var setTimeout=global.setTimeout;
(()=>{var Gm=Object.defineProperty;var qm=Object.getOwnPropertySymbols;var Ak=Object.prototype.hasOwnProperty,Ok=Object.prototype.propertyIsEnumerable;var Ym=(u,a,p)=>a in u?Gm(u,a,{enumerable:!0,configurable:!0,writable:!0,value:p}):u[a]=p,Jm=(u,a)=>{for(var p in a||(a={}))Ak.call(a,p)&&Ym(u,p,a[p]);if(qm)for(var p of qm(a))Ok.call(a,p)&&Ym(u,p,a[p]);return u};var Tk=(u,a)=>{for(var p in a)Gm(u,p,{get:a[p],enumerable:!0})};var Vs=Object.freeze;function af({getCurrentPages:u,uni:a,UniShared:p,Vue:b,VueShared:O}){var y=function(h,v,k,Oe){"use strict";function gt(ze){return ze.$page}function Ot(){let ze=u(),ot=ze.length;if(ot)return ze[ot-1]}function ue(){let ze=Ot();if(ze)return ze.$vm}function P(ze,ot,Dt){if(k.isString(ze))Dt=ot,ot=ze,ze=ue();else if(typeof ze=="number"){let nn=u().find(an=>gt(an).id===ze);nn?ze=nn.$vm:ze=ue()}if(!ze)return;if(ze.__call_hook)return ze.__call_hook(ot,Dt);let cn=ze.$[ot];return cn&&v.invokeArrayFns(cn,Dt)}function Nt(ze,ot,Dt,cn){k.isFunction(ot)&&Oe.injectHook(ze,ot.bind(Dt),cn)}function Mr(ze,ot,Dt){let cn=ze.mpType||Dt.$mpType;if(!(!cn||cn==="component")&&(Object.keys(ze).forEach(nn=>{if(v.isUniLifecycleHook(nn,ze[nn],!1)){let an=ze[nn];k.isArray(an)?an.forEach(zn=>Nt(nn,zn,Dt,ot)):Nt(nn,an,Dt,ot)}}),cn==="page")){ot.__isVisible=!0;try{let nn=ot.attrs.__pageQuery;P(Dt,v.ON_LOAD,nn),delete ot.attrs.__pageQuery;let an=Dt.$page;(an==null?void 0:an.openType)!=="preloadPage"&&P(Dt,v.ON_SHOW)}catch(nn){console.error(nn.message+v.LINEFEED+nn.stack)}}}function St(ze,ot){Z(ot,ze.$renderjs,ze["$"+v.RENDERJS_MODULES])}function Z(ze,ot,Dt={}){if(!k.isArray(ot))return;let cn=ze.uid,nn=ze.$wxsModules||(ze.$wxsModules=[]),an=ze.ctx;ot.forEach(zn=>{Dt[zn]&&(an[zn]=se(cn,Dt[zn],zn),nn.push(zn))})}function se(ze,ot,Dt){let cn={};return new Proxy(cn,{get(nn,an){return cn[an]||(cn[an]=dn(ze,ot,Dt,an))}})}function dn(ze,ot,Dt,cn){let nn=()=>{},an=()=>v.WXS_PROTOCOL+JSON.stringify([ze,ot,Dt+"."+cn]);return new Proxy(nn,{get(zn,Fr){return Fr==="toJSON"?an:nn[Fr]||(nn[Fr]=dn(ze,ot,Dt+"."+cn,Fr))},apply(zn,Fr,nr){return v.WXS_PROTOCOL+JSON.stringify([ze,ot,Dt+"."+cn,[...nr]])}})}function Br(ze,ot){Z(ot,ze.$wxs,ze["$"+v.WXS_MODULES])}function Jn(ze,ot,Dt){Br(ze,ot),St(ze,ot),Mr(ze,ot,Dt)}function sn(ze,ot,Dt){return ze[ot]=Dt}function In(ze,...ot){let Dt=this[ze];return Dt?Dt(...ot):(console.error(`method ${ze} not found`),null)}function Lr(ze){let ot=ze.config.errorHandler;return function(cn,nn,an){ot&&ot(cn,nn,an);let zn=ze._instance;if(!zn||!zn.proxy)throw cn;zn[v.ON_ERROR]?P(zn.proxy,v.ON_ERROR,cn):Oe.logError(cn,an,nn?nn.$.vnode:null,!1)}}function Or(ze,ot){return ze?[...new Set([].concat(ze,ot))]:ot}function er(ze){v.UniLifecycleHooks.forEach(ot=>{ze[ot]=Or})}let pn,en="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",kn=/^(?:[A-Za-z\d+/]{4})*?(?:[A-Za-z\d+/]{2}(?:==)?|[A-Za-z\d+/]{3}=?)?$/;typeof atob!="function"?pn=function(ze){if(ze=String(ze).replace(/[\t\n\f\r ]+/g,""),!kn.test(ze))throw new Error("Failed to execute 'atob' on 'Window': The string to be decoded is not correctly encoded.");ze+="==".slice(2-(ze.length&3));for(var ot,Dt="",cn,nn,an=0;an<ze.length;)ot=en.indexOf(ze.charAt(an++))<<18|en.indexOf(ze.charAt(an++))<<12|(cn=en.indexOf(ze.charAt(an++)))<<6|(nn=en.indexOf(ze.charAt(an++))),Dt+=cn===64?String.fromCharCode(ot>>16&255):nn===64?String.fromCharCode(ot>>16&255,ot>>8&255):String.fromCharCode(ot>>16&255,ot>>8&255,ot&255);return Dt}:pn=atob;function tr(ze){return decodeURIComponent(pn(ze).split("").map(function(ot){return"%"+("00"+ot.charCodeAt(0).toString(16)).slice(-2)}).join(""))}function xn(){let ze=a.getStorageSync("uni_id_token")||"",ot=ze.split(".");if(!ze||ot.length!==3)return{uid:null,role:[],permission:[],tokenExpired:0};let Dt;try{Dt=JSON.parse(tr(ot[1]))}catch(cn){throw new Error("\u83B7\u53D6\u5F53\u524D\u7528\u6237\u4FE1\u606F\u51FA\u9519\uFF0C\u8BE6\u7EC6\u9519\u8BEF\u4FE1\u606F\u4E3A\uFF1A"+cn.message)}return Dt.tokenExpired=Dt.exp*1e3,delete Dt.exp,delete Dt.iat,Dt}function jn(ze){ze.uniIDHasRole=function(ot){let{role:Dt}=xn();return Dt.indexOf(ot)>-1},ze.uniIDHasPermission=function(ot){let{permission:Dt}=xn();return this.uniIDHasRole("admin")||Dt.indexOf(ot)>-1},ze.uniIDTokenValid=function(){let{tokenExpired:ot}=xn();return ot>Date.now()}}function hi(ze){let ot=ze.config;ot.errorHandler=v.invokeCreateErrorHandler(ze,Lr),er(ot.optionMergeStrategies);let Dt=ot.globalProperties;jn(Dt),Dt.$set=sn,Dt.$applyOptions=Jn,Dt.$callMethod=In,v.invokeCreateVueAppHook(ze)}return h.initApp=hi,h}({},p,O,b);return y}function Jf(u,{nvue:a,UniShared:p,VueShared:b,VueReactivity:O}){let y={platform:a.config.env.platform,UniShared:p,VueShared:b,VueReactivity:O};return u(y,a.document)}function Pk({setTimeout:u,clearTimeout:a,uni:p,getCurrentPages:b,Vue:O,weex:y,plus:h,BroadcastChannel:v,UniViewJSBridge:k,VueShared:Oe,UniShared:gt,__uniConfig:Ot}){var ue=function(P,Nt,Mr){"use strict";let St=["navigate","redirect","switchTab","reLaunch","navigateBack"],Z=["slide-in-right","slide-in-left","slide-in-top","slide-in-bottom","fade-in","zoom-out","zoom-fade-out","pop-in","none"],se=["slide-out-right","slide-out-left","slide-out-top","slide-out-bottom","fade-out","zoom-in","zoom-fade-in","pop-out","none"],dn={hoverClass:{type:String,default:"navigator-hover"},url:{type:String,default:""},openType:{type:String,default:"navigate",validator(S){return Boolean(~St.indexOf(S))}},delta:{type:Number,default:1},hoverStartTime:{type:[Number,String],default:50},hoverStayTime:{type:[Number,String],default:600},exists:{type:String,default:""},hoverStopPropagation:{type:Boolean,default:!1},animationType:{type:String,default:"",validator(S){return!S||Z.concat(se).includes(S)}},animationDuration:{type:[String,Number],default:300}};function Br(S){return()=>{if(S.openType!=="navigateBack"&&!S.url){console.error("<navigator/> should have url attribute when using navigateTo, redirectTo, reLaunch or switchTab");return}let F=parseInt(S.animationDuration);switch(S.openType){case"navigate":p.navigateTo({url:S.url,animationType:S.animationType||"pop-in",animationDuration:F});break;case"redirect":p.redirectTo({url:S.url,exists:S.exists});break;case"switchTab":p.switchTab({url:S.url});break;case"reLaunch":p.reLaunch({url:S.url});break;case"navigateBack":p.navigateBack({delta:S.delta,animationType:S.animationType||"pop-out",animationDuration:F});break}}}function Jn(S){if(S.hoverClass&&S.hoverClass!=="none"){let F={hoverClass:S.hoverClass};return Nt.hasOwn(S,"hoverStartTime")&&(F.hoverStartTime=S.hoverStartTime),Nt.hasOwn(S,"hoverStayTime")&&(F.hoverStayTime=S.hoverStayTime),Nt.hasOwn(S,"hoverStopPropagation")&&(F.hoverStopPropagation=S.hoverStopPropagation),F}return{}}function sn(S,F){return P.createElementVNode("u-text",Nt.extend({appendAsTree:!0},F),S)}let In=[{"navigator-hover":{"":{backgroundColor:"rgba(0,0,0,0.1)",opacity:.7}}}],Lr=P.defineComponent({name:"Navigator",props:dn,styles:In,setup(S,{slots:F}){let W=Br(S);return()=>P.createVNode("view",P.mergeProps(Jn(S),{onClick:W}),[F.default&&F.default()])}});function Or(S){return Symbol(S)}function er(){let S;try{S=P.getCurrentInstance().root.proxy.$page.id}catch(F){let W=h.webview.currentWebview().id;S=isNaN(Number(W))?W:Number(W)}return S}let pn,en,kn;function tr(){return typeof window=="object"&&typeof navigator=="object"&&typeof document=="object"?"webview":"v8"}function xn(){return pn.webview.currentWebview().id}let jn,hi,ze={};function ot(S){let F=S.data&&S.data.__message;if(!F||!F.__page)return;let W=F.__page,H=ze[W];H&&H(F),F.keep||delete ze[W]}function Dt(S,F){tr()==="v8"?kn?(jn&&jn.close(),jn=new kn(xn()),jn.onmessage=ot):hi||(hi=en.requireModule("globalEvent"),hi.addEventListener("plusMessage",ot)):window.__plusMessage=ot,ze[S]=F}class cn{constructor(F){this.webview=F}sendMessage(F){let W=JSON.parse(JSON.stringify({__message:{data:F}})),H=this.webview.id;kn?new kn(H).postMessage(W):pn.webview.postMessageToUniNView&&pn.webview.postMessageToUniNView(W,H)}close(){this.webview.close()}}function nn({context:S={},url:F,data:W={},style:H={},onMessage:ne,onClose:ie}){let ge=Ot.darkmode;pn=S.plus||h,en=S.weex||(typeof y=="object"?y:null),kn=S.BroadcastChannel||(typeof v=="object"?v:null);let we={autoBackButton:!0,titleSize:"17px"},Me=`page${Date.now()}`;H=Nt.extend({},H),H.titleNView!==!1&&H.titleNView!=="none"&&(H.titleNView=Nt.extend(we,H.titleNView));let $e={top:0,bottom:0,usingComponents:{},popGesture:"close",scrollIndicator:"none",animationType:"pop-in",animationDuration:200,uniNView:{path:`/${F}.js`,defaultFontSize:16,viewport:pn.screen.resolutionWidth}};H=Nt.extend($e,H);let Ee=pn.webview.create("",Me,H,{extras:{from:xn(),runtime:tr(),data:Nt.extend({},W,{darkmode:ge}),useGlobalEvent:!kn}});return Ee.addEventListener("close",ie),Dt(Me,De=>{Nt.isFunction(ne)&&ne(De.data),De.keep||Ee.close("auto")}),Ee.show(H.animationType,H.animationDuration),new cn(Ee)}let an={for:{type:String,default:""}},zn=Or("ul");function Fr(){let S=[];return P.provide(zn,{addHandler(F){S.push(F)},removeHandler(F){S.splice(S.indexOf(F),1)}}),S}let nr=P.defineComponent({name:"Label",props:an,styles:[],setup(S,{slots:F}){let W=er(),H=Fr(),ne=ie=>{S.for?k.emit(`uni-label-click-${W}-${S.for}`,ie,!0):H.length&&H[0](ie,!0)};return()=>P.createVNode("view",{onClick:ne},[F.default&&F.default()])}});function qr(S,F){Vr(S.id,F),P.watch(()=>S.id,(W,H)=>{Ci(H,F,!0),Vr(W,F,!0)}),P.onUnmounted(()=>{Ci(S.id,F)})}function Vr(S,F,W){let H=er();W&&!S||!Nt.isPlainObject(F)||Object.keys(F).forEach(ne=>{W?ne.indexOf("@")!==0&&ne.indexOf("uni-")!==0&&k.on(`uni-${ne}-${H}-${S}`,F[ne]):ne.indexOf("uni-")===0?k.on(ne,F[ne]):S&&k.on(`uni-${ne}-${H}-${S}`,F[ne])})}function Ci(S,F,W){let H=er();W&&!S||!Nt.isPlainObject(F)||Object.keys(F).forEach(ne=>{W?ne.indexOf("@")!==0&&ne.indexOf("uni-")!==0&&k.off(`uni-${ne}-${H}-${S}`,F[ne]):ne.indexOf("uni-")===0?k.off(ne,F[ne]):S&&k.off(`uni-${ne}-${H}-${S}`,F[ne])})}function $a(S){return Object.keys(S).map(F=>[F,S[F]])}let qo=["class","style"],gi=/^on[A-Z]+/,Tr=(S={})=>{let{excludeListeners:F=!1,excludeKeys:W=[]}=S,H=P.getCurrentInstance(),ne=P.shallowRef({}),ie=P.shallowRef({}),ge=P.shallowRef({}),we=W.concat(qo);return H.attrs=P.reactive(H.attrs),P.watchEffect(()=>{let Me=$a(H.attrs).reduce(($e,[Ee,De])=>(we.includes(Ee)?$e.exclude[Ee]=De:gi.test(Ee)?(F||($e.attrs[Ee]=De),$e.listeners[Ee]=De):$e.attrs[Ee]=De,$e),{exclude:{},attrs:{},listeners:{}});ne.value=Me.attrs,ie.value=Me.listeners,ge.value=Me.exclude}),{$attrs:ne,$listeners:ie,$excludeAttrs:ge}},Pr={id:{type:String,default:""},hoverClass:{type:String,default:"button-hover"},hoverStartTime:{type:[Number,String],default:20},hoverStayTime:{type:[Number,String],default:70},hoverStopPropagation:{type:Boolean,default:!1},disabled:{type:[Boolean,String],default:!1},formType:{type:String,default:""},openType:{type:String,default:""},loading:{type:[Boolean,String],default:!1},plain:{type:[Boolean,String],default:!1}},ur=Or("uf"),xo=[{ub:{"":{flexDirection:"row",alignItems:"center",justifyContent:"center",position:"relative",paddingLeft:"5",paddingRight:"5",overflow:"hidden",color:"#000000",backgroundColor:"#f8f8f8",borderRadius:"5",borderStyle:"solid",borderWidth:"1",borderColor:"#dbdbdb"}},"ub-t":{"":{color:"#000000",fontSize:"18",textDecoration:"none",lineHeight:"46"}},"ub-d":{"":{backgroundColor:"#f8f8f8"}},"ub-p":{"":{backgroundColor:"#007aff",borderColor:"#0062cc"}},"ub-w":{"":{backgroundColor:"#e64340",borderColor:"#b83633"}},"ub-d-t":{"":{color:"#000000"}},"ub-p-t":{"":{color:"#ffffff"}},"ub-w-t":{"":{color:"#ffffff"}},"ub-d-d":{"":{backgroundColor:"#f7f7f7"}},"ub-p-d":{"":{backgroundColor:"#63acfc",borderColor:"#4f8aca"}},"ub-w-d":{"":{backgroundColor:"#ec8b89",borderColor:"#bd6f6e"}},"ub-d-t-d":{"":{color:"#cccccc"}},"ub-p-t-d":{"":{color:"rgba(255,255,255,0.6)"}},"ub-w-t-d":{"":{color:"rgba(255,255,255,0.6)"}},"ub-d-plain":{"":{borderColor:"#353535",backgroundColor:"rgba(0,0,0,0)"}},"ub-p-plain":{"":{borderColor:"#007aff",backgroundColor:"rgba(0,0,0,0)"}},"ub-w-plain":{"":{borderColor:"#e64340",backgroundColor:"rgba(0,0,0,0)"}},"ub-d-t-plain":{"":{color:"#353535"}},"ub-p-t-plain":{"":{color:"#007aff"}},"ub-w-t-plain":{"":{color:"#e64340"}},"ub-d-d-plain":{"":{borderColor:"#c6c6c6",backgroundColor:"rgba(0,0,0,0)"}},"ub-p-d-plain":{"":{borderColor:"#c6c6c6",backgroundColor:"rgba(0,0,0,0)"}},"ub-w-d-plain":{"":{borderColor:"#c6c6c6",backgroundColor:"rgba(0,0,0,0)"}},"ub-d-t-d-plain":{"":{color:"rgba(0,0,0,0.2)"}},"ub-p-t-d-plain":{"":{color:"rgba(0,0,0,0.2)"}},"ub-w-t-d-plain":{"":{color:"rgba(0,0,0,0.2)"}},"ub-mini":{"":{lineHeight:"30",fontSize:"13",paddingTop:0,paddingRight:"17.5",paddingBottom:0,paddingLeft:"17.5"}},"ub-loading":{"":{width:"18",height:"18",marginRight:"10"}},"ub-d-loading":{"":{color:"rgba(255,255,255,0.6)",backgroundColor:"rgba(0,0,0,0)"}},"ub-p-loading":{"":{color:"rgba(255,255,255,0.6)",backgroundColor:"rgba(0,0,0,0)"}},"ub-w-loading":{"":{color:"rgba(255,255,255,0.6)",backgroundColor:"rgba(0,0,0,0)"}},"ub-d-loading-plain":{"":{color:"#353535"}},"ub-p-loading-plain":{"":{color:"#007aff",backgroundColor:"#0062cc"}},"ub-w-loading-plain":{"":{color:"#e64340",backgroundColor:"rgba(0,0,0,0)"}},"ub-d-hover":{"":{opacity:.8,backgroundColor:"#dedede"}},"ub-p-hover":{"":{opacity:.8,backgroundColor:"#0062cc"}},"ub-w-hover":{"":{opacity:.8,backgroundColor:"#ce3c39"}},"ub-d-t-hover":{"":{color:"rgba(0,0,0,0.6)"}},"ub-p-t-hover":{"":{color:"rgba(255,255,255,0.6)"}},"ub-w-t-hover":{"":{color:"rgba(255,255,255,0.6)"}},"ub-d-hover-plain":{"":{color:"rgba(53,53,53,0.6)",borderColor:"rgba(53,53,53,0.6)",backgroundColor:"rgba(0,0,0,0)"}},"ub-p-hover-plain":{"":{color:"rgba(26,173,25,0.6)",borderColor:"rgba(0,122,255,0.6)",backgroundColor:"rgba(0,0,0,0)"}},"ub-w-hover-plain":{"":{color:"rgba(230,67,64,0.6)",borderColor:"rgba(230,67,64,0.6)",backgroundColor:"rgba(0,0,0,0)"}}}],Ji={default:"d",primary:"p",warn:"w"},Ki=P.defineComponent({inheritAttrs:!1,name:"Button",props:Nt.extend(Pr,{type:{type:String,default:"default"},size:{type:String,default:"default"}}),styles:xo,setup(S,{slots:F,attrs:W}){let{$attrs:H,$excludeAttrs:ne,$listeners:ie}=Tr({excludeListeners:!0}),ge=S.type,we=P.ref(null),Me=P.inject(ur,!1),$e=(yt,vt)=>{let Ut=ie.value.onClick||(()=>{});if(S.disabled)return;Ut(yt);let _n=S.formType;if(_n){if(!Me)return;_n==="submit"?Me.submit(yt):_n==="reset"&&Me.reset(yt)}},Ee=yt=>{let vt="ub-"+Ji[ge]+yt;return S.disabled&&(vt+="-d"),S.plain&&(vt+="-plain"),S.size==="mini"&&yt==="-t"&&(vt+=" ub-mini"),vt},De=yt=>{if(S.disabled)return"";let vt="ub-"+Ji[ge]+yt+"-hover";return S.plain&&(vt+="-plain"),vt},ht=P.inject(zn,!1);ht&&(ht.addHandler($e),P.onBeforeUnmount(()=>{ht.removeHandler($e)})),qr(S,{"label-click":$e});let Tt=P.computed(()=>{let yt={};for(let vt in ie.value){let Ut=ie.value[vt];vt!=="onClick"&&(yt[vt]=Ut)}return yt}),Rt=()=>{if(!F.default)return[];let yt=F.default();return yt.length===1&&yt[0].type===P.Text?[sn(yt[0].children,{class:"ub-t "+Ee("-t")})]:yt};return()=>{let yt=Nt.extend({},Jn(S),{hoverClass:De("")},H.value,ne.value,Tt.value);return P.createVNode("view",P.mergeProps({ref:we,class:["ub",Ee("")],onClick:$e},yt),[S.loading?P.createVNode("loading-indicator",P.mergeProps({class:["ub-loading",`ub-${Ji[ge]}-loading`]},{arrow:"false",animating:"true"}),null):null,...Rt()])}}}),ho={scaleArea:{type:Boolean,default:!1}};function Zi(S){let F=[];return Nt.isArray(S)&&S.forEach(W=>{P.isVNode(W)?W.type===P.Fragment?F.push(...Zi(W.children)):F.push(W):Nt.isArray(W)&&F.push(...Zi(W))}),F}function Ca(S){let F=Object.create(null);return function(H){return F[H]||(F[H]=S(H))}}let Mi=Ca(function(S){let F={},W=/;(?![^(]*\))/g,H=/:(.+)/;return S.split(W).forEach(function(ne){if(ne){let ie=ne.split(H);ie.length>1&&(F[ie[0].trim()]=ie[1].trim())}}),F}),mn=S=>new Promise((F,W)=>{if(!S)return F({width:0,height:0,top:0,left:0});y.requireModule("dom").getComponentRect(S,({size:ne})=>{F(ne)})}),Cn=P.defineComponent({name:"MovableArea",props:ho,styles:[{"uni-movable-area":{"":{overflow:"hidden",width:"10px",height:"10px"}}}],setup(S,{slots:F}){let W=P.ref(0),H=P.ref(0),ne=P.ref(0),ie=P.ref(0),ge=P.ref(!1),we=P.ref(null),Me=[],$e=null,Ee=vt=>{$e=vt},De=()=>mn(we.value).then(({width:vt,height:Ut,top:_n,left:Rn})=>{W.value=vt,H.value=Ut,ne.value=_n,ie.value=Rn}),ht=()=>{De().then(()=>{Me.forEach(function(vt){vt.setParent()})})};P.onMounted(()=>{u(()=>{ge.value=!0,ht()},200)});let Tt={onPanstart(vt){$e&&$e.touchstart(vt)},onPanmove(vt){vt.stopPropagation(),$e&&$e.touchmove(vt)},onPanend(vt){$e&&$e.touchend(vt),$e=null}},Rt=vt=>{Me.push(vt)},yt=vt=>{let Ut=Me.indexOf(vt);Ut>=0&&Me.splice(Ut,1)};return P.provide("_isMounted",ge),P.provide("parentSize",{width:W,height:H,top:ne,left:ie}),P.provide("addMovableViewContext",Rt),P.provide("removeMovableViewContext",yt),P.provide("setTouchMovableViewContext",Ee),()=>{let vt=F.default&&F.default(),Ut=Zi(vt);return P.createVNode("view",P.mergeProps({ref:we,class:"uni-movable-area"},Tt),[Ut])}}});function Bi(S){let F={};function W(Ee,De){F[Ee]&&F[Ee](De)}function H(Ee,De){F[Ee]=function(ht){Nt.isFunction(De)&&(ht.touches=ht.changedTouches,De(ht)===!1&&ht.stopPropagation())}}let ne=0,ie=0,ge=0,we=0,Me=function(Ee,De,ht,Tt){if(S({target:Ee.target,currentTarget:Ee.currentTarget,stopPropagation:Ee.stopPropagation.bind(Ee),touches:Ee.touches,changedTouches:Ee.changedTouches,detail:{state:De,x:ht,y:Tt,dx:ht-ne,dy:Tt-ie,ddx:ht-ge,ddy:Tt-we,timeStamp:Ee.timeStamp||Date.now()}})===!1)return!1},$e=null;return H("touchstart",function(Ee){if(!$e)return $e=Ee,ne=ge=Ee.touches[0].pageX,ie=we=Ee.touches[0].pageY,Me(Ee,"start",ne,ie)}),H("touchmove",function(Ee){if($e){let De=Me(Ee,"move",Ee.touches[0].pageX,Ee.touches[0].pageY);return ge=Ee.touches[0].pageX,we=Ee.touches[0].pageY,De}}),H("touchend",function(Ee){if($e)return $e=null,Me(Ee,"end",Ee.changedTouches[0].pageX,Ee.changedTouches[0].pageY)}),{touchstart:function(Ee){W("touchstart",Ee)},touchmove:function(Ee){W("touchmove",Ee)},touchend:function(Ee){W("touchend",Ee)}}}function or(S,F){return(W,H)=>{S.value&&F(W,mi(W,S.value,H||{}))}}function mi(S,F,W={}){return F=Jo(F),{type:S,timeStamp:Date.now(),target:F,currentTarget:F,detail:W}}let Yo=Mr.cacheStringFunction(S=>S.charAt(0).toLowerCase()+S.slice(1));function Jo(S){let{offsetLeft:F,offsetTop:W}=S,H=S.attr,ne={};return Object.keys(H||{}).forEach(ie=>{ie.indexOf("data")===0&&(ne[Yo(ie.replace("data",""))]=H[ie])}),{id:H&&H.id||"",dataset:ne,offsetLeft:F||0,offsetTop:W||0}}function vi(S,F,W){return S>F-W&&S<F+W}function Yr(S,F){return vi(S,0,F)}function Aa(){}Aa.prototype.x=function(S){return Math.sqrt(S)};function ri(S,F){this._m=S,this._f=1e3*F,this._startTime=0,this._v=0}ri.prototype.setV=function(S,F){let W=Math.pow(Math.pow(S,2)+Math.pow(F,2),.5);this._x_v=S,this._y_v=F,this._x_a=-this._f*this._x_v/W,this._y_a=-this._f*this._y_v/W,this._t=Math.abs(S/this._x_a)||Math.abs(F/this._y_a),this._lastDt=null,this._startTime=new Date().getTime()},ri.prototype.setS=function(S,F){this._x_s=S,this._y_s=F},ri.prototype.s=function(S){S===void 0&&(S=(new Date().getTime()-this._startTime)/1e3),S>this._t&&(S=this._t,this._lastDt=S);let F=this._x_v*S+.5*this._x_a*Math.pow(S,2)+this._x_s,W=this._y_v*S+.5*this._y_a*Math.pow(S,2)+this._y_s;return(this._x_a>0&&F<this._endPositionX||this._x_a<0&&F>this._endPositionX)&&(F=this._endPositionX),(this._y_a>0&&W<this._endPositionY||this._y_a<0&&W>this._endPositionY)&&(W=this._endPositionY),{x:F,y:W}},ri.prototype.ds=function(S){return S===void 0&&(S=(new Date().getTime()-this._startTime)/1e3),S>this._t&&(S=this._t),{dx:this._x_v+this._x_a*S,dy:this._y_v+this._y_a*S}},ri.prototype.delta=function(){return{x:-1.5*Math.pow(this._x_v,2)/this._x_a||0,y:-1.5*Math.pow(this._y_v,2)/this._y_a||0}},ri.prototype.dt=function(){return-this._x_v/this._x_a},ri.prototype.done=function(){let S=vi(this.s().x,this._endPositionX)||vi(this.s().y,this._endPositionY)||this._lastDt===this._t;return this._lastDt=null,S},ri.prototype.setEnd=function(S,F){this._endPositionX=S,this._endPositionY=F},ri.prototype.reconfigure=function(S,F){this._m=S,this._f=1e3*F};function _r(S,F,W){this._m=S,this._k=F,this._c=W,this._solution=null,this._endPosition=0,this._startTime=0}_r.prototype._solve=function(S,F){let W=this._c,H=this._m,ne=this._k,ie=W*W-4*H*ne;if(ie===0){let Ee=-W/(2*H),De=S,ht=F/(Ee*S);return{x:function(Tt){return(De+ht*Tt)*Math.pow(Math.E,Ee*Tt)},dx:function(Tt){let Rt=Math.pow(Math.E,Ee*Tt);return Ee*(De+ht*Tt)*Rt+ht*Rt}}}if(ie>0){let Ee=(-W-Math.sqrt(ie))/(2*H),De=(-W+Math.sqrt(ie))/(2*H),ht=(F-Ee*S)/(De-Ee),Tt=S-ht;return{x:function(Rt){let yt,vt;return Rt===this._t&&(yt=this._powER1T,vt=this._powER2T),this._t=Rt,yt||(yt=this._powER1T=Math.pow(Math.E,Ee*Rt)),vt||(vt=this._powER2T=Math.pow(Math.E,De*Rt)),Tt*yt+ht*vt},dx:function(Rt){let yt,vt;return Rt===this._t&&(yt=this._powER1T,vt=this._powER2T),this._t=Rt,yt||(yt=this._powER1T=Math.pow(Math.E,Ee*Rt)),vt||(vt=this._powER2T=Math.pow(Math.E,De*Rt)),Tt*Ee*yt+ht*De*vt}}}let ge=Math.sqrt(4*H*ne-W*W)/(2*H),we=-W/2*H,Me=S,$e=(F-we*S)/ge;return{x:function(Ee){return Math.pow(Math.E,we*Ee)*(Me*Math.cos(ge*Ee)+$e*Math.sin(ge*Ee))},dx:function(Ee){let De=Math.pow(Math.E,we*Ee),ht=Math.cos(ge*Ee),Tt=Math.sin(ge*Ee);return De*($e*ge*ht-Me*ge*Tt)+we*De*($e*Tt+Me*ht)}}},_r.prototype.x=function(S){return S===void 0&&(S=(new Date().getTime()-this._startTime)/1e3),this._solution?this._endPosition+this._solution.x(S):0},_r.prototype.dx=function(S){return S===void 0&&(S=(new Date().getTime()-this._startTime)/1e3),this._solution?this._solution.dx(S):0},_r.prototype.setEnd=function(S,F,W){if(W||(W=new Date().getTime()),S!==this._endPosition||!Yr(F,.1)){F=F||0;let H=this._endPosition;this._solution&&(Yr(F,.1)&&(F=this._solution.dx((W-this._startTime)/1e3)),H=this._solution.x((W-this._startTime)/1e3),Yr(F,.1)&&(F=0),Yr(H,.1)&&(H=0),H+=this._endPosition),this._solution&&Yr(H-S,.1)&&Yr(F,.1)||(this._endPosition=S,this._solution=this._solve(H-this._endPosition,F),this._startTime=W)}},_r.prototype.snap=function(S){this._startTime=new Date().getTime(),this._endPosition=S,this._solution={x:function(){return 0},dx:function(){return 0}}},_r.prototype.done=function(S){return S||(S=new Date().getTime()),vi(this.x(),this._endPosition,.1)&&Yr(this.dx(),.1)},_r.prototype.reconfigure=function(S,F,W){this._m=S,this._k=F,this._c=W,this.done()||(this._solution=this._solve(this.x()-this._endPosition,this.dx()),this._startTime=new Date().getTime())},_r.prototype.springConstant=function(){return this._k},_r.prototype.damping=function(){return this._c},_r.prototype.configuration=function(){function S(W,H){W.reconfigure(1,H,W.damping())}function F(W,H){W.reconfigure(1,W.springConstant(),H)}return[{label:"Spring Constant",read:this.springConstant.bind(this),write:S.bind(this,this),min:100,max:1e3},{label:"Damping",read:this.damping.bind(this),write:F.bind(this,this),min:1,max:500}]};function go(S,F,W){this._springX=new _r(S,F,W),this._springY=new _r(S,F,W),this._springScale=new _r(S,F,W),this._startTime=0}go.prototype.setEnd=function(S,F,W,H){let ne=new Date().getTime();this._springX.setEnd(S,H,ne),this._springY.setEnd(F,H,ne),this._springScale.setEnd(W,H,ne),this._startTime=ne},go.prototype.x=function(){let S=(new Date().getTime()-this._startTime)/1e3;return{x:this._springX.x(S),y:this._springY.x(S),scale:this._springScale.x(S)}},go.prototype.done=function(){let S=new Date().getTime();return this._springX.done(S)&&this._springY.done(S)&&this._springScale.done(S)},go.prototype.reconfigure=function(S,F,W){this._springX.reconfigure(S,F,W),this._springY.reconfigure(S,F,W),this._springScale.reconfigure(S,F,W)};let Oa={direction:{type:String,default:"none"},inertia:{type:[Boolean,String],default:!1},outOfBounds:{type:[Boolean,String],default:!1},x:{type:[Number,String],default:0},y:{type:[Number,String],default:0},damping:{type:[Number,String],default:20},friction:{type:[Number,String],default:2},disabled:{type:[Boolean,String],default:!1},scale:{type:[Boolean,String],default:!1},scaleMin:{type:[Number,String],default:.5},scaleMax:{type:[Number,String],default:10},scaleValue:{type:[Number,String],default:1},animation:{type:[Boolean,String],default:!0}};function Li(S,F){return+((1e3*S-1e3*F)/1e3).toFixed(1)}function Ai(S,F,W){let H={id:0,cancelled:!1},ne=function(ge){ge&&ge.id&&hn(ge.id),ge&&(ge.cancelled=!0)};function ie(ge,we,Me,$e){if(!ge||!ge.cancelled){Me(we);let Ee=we.done();Ee||ge.cancelled||(ge.id=mo(ie.bind(null,ge,we,Me,$e))),Ee&&$e&&$e(we)}}return ie(H,S,F,W),{cancel:ne.bind(null,H),model:S}}let Ro=!1;function Ko(S){Ro||(Ro=!0,mo(function(){S(),Ro=!1}))}function mo(S){return u(S,16)}function hn(S){a(S)}let An=y.requireModule("animation"),Jr=P.defineComponent({name:"MovableView",props:Oa,emits:["change","scale"],styles:[{"uni-movable-view":{"":{position:"absolute",top:"0px",left:"0px",width:"10px",height:"10px"}}}],setup(S,{emit:F,slots:W}){let H=P.ref(null),ne=or(H,F),ie=P.inject("setTouchMovableViewContext",()=>{}),ge=Dn(S,ne,H,ie);return()=>{let we={preventGesture:!0};return P.createVNode("view",P.mergeProps({ref:H,onTouchstart:ge,class:"uni-movable-view",style:"transform-origin: center;"},we),[W.default&&W.default()])}}});function Dn(S,F,W,H){let ne=P.inject("_isMounted",P.ref(!1)),ie=P.inject("parentSize",{width:P.ref(0),height:P.ref(0),top:P.ref(0),left:P.ref(0)}),ge=P.inject("addMovableViewContext",()=>{}),we=P.inject("removeMovableViewContext",()=>{}),Me={touchstart:()=>{},touchmove:()=>{},touchend:()=>{}};function $e(Ge){return Number(Ge)||0}function Ee(Ge){return Ge=Number(Ge),isNaN(Ge)?1:Ge}let De=P.ref($e(S.x)),ht=P.ref($e(S.y)),Tt=P.ref(Ee(Number(S.scaleValue))),Rt=P.ref(0),yt=P.ref(0),vt=P.ref(0),Ut=P.ref(0),_n=P.ref(0),Rn=P.ref(0),At=null,ln=null,Vn={x:0,y:0},ir={x:0,y:0},On=1,$n=0,Cr=0,Ya=!1,_s,Ur,Gt=null,Ho=null,Ja={top:0,left:0,width:0,height:0},bs=new Aa,ys=new Aa,Zr={historyX:[0,0],historyY:[0,0],historyT:[0,0]},jo=P.computed(()=>{let Ge=Number(S.damping);return isNaN(Ge)?20:Ge}),Mn=P.computed(()=>{let Ge=Number(S.friction);return isNaN(Ge)||Ge<=0?2:Ge}),Gn=P.computed(()=>{let Ge=Number(S.scaleMin);return isNaN(Ge)?.5:Ge}),oa=P.computed(()=>{let Ge=Number(S.scaleMax);return isNaN(Ge)?10:Ge}),Ka=P.computed(()=>S.direction==="all"||S.direction==="horizontal"),Za=P.computed(()=>S.direction==="all"||S.direction==="vertical"),io=new go(1,9*Math.pow(jo.value,2)/40,jo.value),zo=new ri(1,Mn.value);P.watch(()=>S.x,Ge=>{De.value=$e(Ge)}),P.watch(()=>S.y,Ge=>{ht.value=$e(Ge)}),P.watch(()=>S.scaleValue,Ge=>{Tt.value=Ee(Number(Ge))}),P.watch(De,js),P.watch(ht,_l),P.watch(Tt,zs),P.watch(Gn,Xa),P.watch(oa,Xa);function Xr(){ln&&ln.cancel(),At&&At.cancel()}function js(Ge){if(Ka.value){if(Ge+ir.x===$n)return $n;At&&At.cancel(),Es(Ge+ir.x,ht.value+ir.y,On)}return Ge}function _l(Ge){if(Za.value){if(Ge+ir.y===Cr)return Cr;At&&At.cancel(),Es(De.value+ir.x,Ge+ir.y,On)}return Ge}function Xa(){if(!S.scale)return!1;bi(On,!0)}function zs(Ge){return S.scale?(Ge=Qa(Ge),bi(Ge,!0),Ge):!1}function bl(){S.disabled||(Xr(),Zr.historyX=[0,0],Zr.historyY=[0,0],Zr.historyT=[0,0],Ka.value&&(_s=$n),Za.value&&(Ur=Cr),Gt=null,Ho=null,Ya=!0)}function Ws(Ge){if(!S.disabled&&Ya){let $t=$n,It=Cr;if(Ho===null&&(Ho=Math.abs(Ge.detail.dx/Ge.detail.dy)>1?"htouchmove":"vtouchmove"),Ka.value&&($t=Ge.detail.dx+_s,Zr.historyX.shift(),Zr.historyX.push($t),!Za.value&&Gt===null&&(Gt=Math.abs(Ge.detail.dx/Ge.detail.dy)<1)),Za.value&&(It=Ge.detail.dy+Ur,Zr.historyY.shift(),Zr.historyY.push(It),!Ka.value&&Gt===null&&(Gt=Math.abs(Ge.detail.dy/Ge.detail.dx)<1)),Zr.historyT.shift(),Zr.historyT.push(Ge.detail.timeStamp),!Gt){let gn="touch";$t<vt.value?S.outOfBounds?(gn="touch-out-of-bounds",$t=vt.value-bs.x(vt.value-$t)):$t=vt.value:$t>_n.value&&(S.outOfBounds?(gn="touch-out-of-bounds",$t=_n.value+bs.x($t-_n.value)):$t=_n.value),It<Ut.value?S.outOfBounds?(gn="touch-out-of-bounds",It=Ut.value-ys.x(Ut.value-It)):It=Ut.value:It>Rn.value&&(S.outOfBounds?(gn="touch-out-of-bounds",It=Rn.value+ys.x(It-Rn.value)):It=Rn.value),Ko(function(){Ui($t,It,On,gn)})}}}function Ul(){if(!S.disabled&&Ya&&(Ya=!1,!Gt&&!Ss("out-of-bounds")&&S.inertia)){let Ge=1e3*(Zr.historyX[1]-Zr.historyX[0])/(Zr.historyT[1]-Zr.historyT[0]),$t=1e3*(Zr.historyY[1]-Zr.historyY[0])/(Zr.historyT[1]-Zr.historyT[0]);zo.setV(Ge,$t),zo.setS($n,Cr);let It=zo.delta().x,gn=zo.delta().y,qn=It+$n,Nr=gn+Cr;qn<vt.value?(qn=vt.value,Nr=Cr+(vt.value-$n)*gn/It):qn>_n.value&&(qn=_n.value,Nr=Cr+(_n.value-$n)*gn/It),Nr<Ut.value?(Nr=Ut.value,qn=$n+(Ut.value-Cr)*It/gn):Nr>Rn.value&&(Nr=Rn.value,qn=$n+(Rn.value-Cr)*It/gn),zo.setEnd(qn,Nr),ln=Ai(zo,function(){let ar=zo.s(),yi=ar.x,yl=ar.y;Ui(yi,yl,On,"friction")},function(){ln.cancel()})}}function Gs(Ge,$t){let It=!1;return Ge>_n.value?(Ge=_n.value,It=!0):Ge<vt.value&&(Ge=vt.value,It=!0),$t>Rn.value?($t=Rn.value,It=!0):$t<Ut.value&&($t=Ut.value,It=!0),{x:Ge,y:$t,outOfBounds:It}}function qs(){Vn.x=Ja.left-ie.left.value,Vn.y=Ja.top-ie.top.value}function Vl(Ge){Ge=Ge||On,Ge=Qa(Ge),yt.value=Ja.height/On,Rt.value=Ja.width/On;let $t=yt.value*Ge,It=Rt.value*Ge;ir.x=(It-Rt.value)/2,ir.y=($t-yt.value)/2}function Ys(){let Ge=0-Vn.x+ir.x,$t=ie.width.value-Rt.value-Vn.x-ir.x;vt.value=Math.min(Ge,$t),_n.value=Math.max(Ge,$t);let It=0-Vn.y+ir.y,gn=ie.height.value-yt.value-Vn.y-ir.y;Ut.value=Math.min(It,gn),Rn.value=Math.max(It,gn)}function bi(Ge,$t){if(S.scale){Ge=Qa(Ge),Vl(Ge),Ys();let It=Gs($n,Cr),gn=It.x,qn=It.y;$t?Es(gn,qn,Ge,"",!0,!0):Ko(function(){Ui(gn,qn,Ge,"",!0,!0)})}}function Qa(Ge){return Ge=Math.max(.5,Gn.value,Ge),Ge=Math.min(10,oa.value,Ge),Ge}function Es(Ge,$t,It,gn,qn,Nr){Xr(),Ka.value||(Ge=$n),Za.value||($t=Cr),S.scale||(It=On);let ar=Gs(Ge,$t);if(Ge=ar.x,$t=ar.y,!S.animation){Ui(Ge,$t,It,gn,qn,Nr);return}io._springX._solution=null,io._springY._solution=null,io._springScale._solution=null,io._springX._endPosition=$n,io._springY._endPosition=Cr,io._springScale._endPosition=On,io.setEnd(Ge,$t,It,1),At=Ai(io,function(){let yi=io.x(),yl=yi.x,$l=yi.y,El=yi.scale;Ui(yl,$l,El,gn,qn,Nr)},function(){At.cancel()})}function Ss(Ge){let $t=Gs($n,Cr),It=$t.x,gn=$t.y,qn=$t.outOfBounds;return qn&&Es(It,gn,On,Ge),qn}function Ui(Ge,$t,It,gn="",qn,Nr){Ge!==null&&Ge.toString()!=="NaN"&&typeof Ge=="number"||(Ge=$n||0),$t!==null&&$t.toString()!=="NaN"&&typeof $t=="number"||($t=Cr||0),Ge=Number(Ge.toFixed(1)),$t=Number($t.toFixed(1)),It=Number(It.toFixed(1)),$n===Ge&&Cr===$t||qn||F("change",{x:Li(Ge,ir.x),y:Li($t,ir.y),source:gn}),S.scale||(It=On),It=Qa(It),It=+It.toFixed(3),Nr&&It!==On&&F("scale",{x:Ge,y:$t,scale:It});let ar=`translate(${Ge}px, ${$t}px) scale(${It})`;An.transition(W.value,{styles:{transform:ar},duration:0,delay:0}),$n=Ge,Cr=$t,On=It}function ws(){return mn(W.value).then(Ge=>{Ja=Ge})}function es(){if(!ne.value)return;Xr();let Ge=S.scale?Tt.value:1;qs(),Vl(Ge),Ys(),$n=De.value+ir.x,Cr=ht.value+ir.y;let $t=Gs($n,Cr),It=$t.x,gn=$t.y;Ui(It,gn,Ge,"",!0)}return P.onMounted(()=>{Me=Bi($t=>{switch($t.detail.state){case"start":bl();break;case"move":Ws($t);break;case"end":Ul()}}),u(()=>{ws().then(()=>{es()})},100),zo.reconfigure(1,Mn.value),io.reconfigure(1,9*Math.pow(jo.value,2)/40,jo.value);let Ge={setParent:es};ge(Ge),P.onUnmounted(()=>{we(Ge)})}),P.onUnmounted(()=>{Xr()}),()=>{H(Me)}}let ii=16,Dr={activeColor:Mr.PRIMARY_COLOR,backgroundColor:"#EBEBEB",activeMode:"backwards"},Ht={percent:{type:[Number,String],default:0,validator(S){return!isNaN(parseFloat(S))}},fontSize:{type:[String,Number],default:ii},showInfo:{type:[Boolean,String],default:!1},strokeWidth:{type:[Number,String],default:6,validator(S){return!isNaN(parseFloat(S))}},color:{type:String,default:Dr.activeColor},activeColor:{type:String,default:Dr.activeColor},backgroundColor:{type:String,default:Dr.backgroundColor},active:{type:[Boolean,String],default:!1},activeMode:{type:String,default:Dr.activeMode},duration:{type:[Number,String],default:30,validator(S){return!isNaN(parseFloat(S))}},borderRadius:{type:[Number,String],default:0}},xe=[{"uni-progress":{"":{flex:1,flexDirection:"row",alignItems:"center"}},"uni-progress-bar":{"":{flex:1}},"uni-progress-inner-bar":{"":{position:"absolute"}},"uni-progress-info":{"":{marginLeft:"15px"}}}],Xi=P.defineComponent({name:"Progress",props:Ht,styles:xe,emits:["activeend"],setup(S,{emit:F}){let W=P.ref(null),H=P.ref(null),ne=or(W,F),ie=tn(S);return P.watch(()=>ie.realPercent,(ge,we)=>{ie.lastPercent=we||0,vo(ie,S,ne)}),P.onMounted(()=>{u(()=>{mn(H.value).then(({width:ge})=>{ie.progressWidth=ge||0,vo(ie,S,ne)})},50)}),()=>{let{showInfo:ge,fontSize:we}=S,{outerBarStyle:Me,innerBarStyle:$e,currentPercent:Ee}=ie;return P.createVNode("div",{ref:W,class:"uni-progress"},[P.createVNode("div",{ref:H,style:Me,class:"uni-progress-bar"},[P.createVNode("div",{style:$e,class:"uni-progress-inner-bar"},null)]),ge?sn(Ee+"%",{class:"uni-progress-info",style:{fontSize:we}}):null])}}});function tn(S){let F=P.ref(0),W=P.ref(0),H=P.computed(()=>({backgroundColor:S.backgroundColor,borderRadius:S.borderRadius,height:S.strokeWidth})),ne=P.computed(()=>{let we=S.color!==Dr.activeColor&&S.activeColor===Dr.activeColor?S.color:S.activeColor;return{width:F.value*W.value/100,height:S.strokeWidth,backgroundColor:we,borderRadius:S.borderRadius}}),ie=P.computed(()=>{let we=parseFloat(S.percent);return we<0&&(we=0),we>100&&(we=100),we});return P.reactive({outerBarStyle:H,innerBarStyle:ne,realPercent:ie,currentPercent:F,strokeTimer:0,lastPercent:0,progressWidth:W})}function vo(S,F,W){S.strokeTimer&&clearInterval(S.strokeTimer),F.active?(S.currentPercent=F.activeMode===Dr.activeMode?0:S.lastPercent,S.strokeTimer=setInterval(()=>{S.currentPercent+1>S.realPercent?(S.currentPercent=S.realPercent,S.strokeTimer&&clearInterval(S.strokeTimer),W("activeend",{})):S.currentPercent+=1},parseFloat(F.duration))):S.currentPercent=S.realPercent}let oi={value:{type:Array,default(){return[]},validator:function(S){return Nt.isArray(S)&&S.filter(F=>typeof F=="number").length===S.length}},indicatorStyle:{type:String,default:""},indicatorClass:{type:String,default:""},maskStyle:{type:String,default:""},maskClass:{type:String,default:""}},Oi=Nt.extend({},oi,{height:{type:[Number,String],default:0},maskTopStyle:{type:String,default:""},maskBottomStyle:{type:String,default:""}}),Zo=P.defineComponent({name:"PickerView",props:Oi,emits:["change","update:value"],setup(S,{slots:F,emit:W}){let H=P.ref(null),ne=Xo(S),ie=or(H,W),ge=[],we=$e=>Array.prototype.indexOf.call(ge.filter(Ee=>Ee.type!==P.Comment),$e),Me=$e=>P.computed({get(){let Ee=we($e.vnode);return ne.value[Ee]||0},set(Ee){if(!$e.data._isMounted)return;let De=we($e.vnode);if(De<0)return;if(ne.value[De]!==Ee){ne.value[De]=Ee;let Tt=ne.value.map(Rt=>Rt);W("update:value",Tt),ie("change",{value:Tt})}}});return P.provide("getPickerViewColumn",Me),P.provide("pickerViewProps",S),()=>{let $e=F.default&&F.default();ge=Zi($e);let Ee=S.height?{height:`${parseFloat(S.height)}px`}:{};return P.createVNode("view",P.mergeProps({ref:H,class:"uni-picker-view",style:Ee},{preventGesture:!0}),[P.createVNode("view",{class:"uni-picker-view-wrapper"},[ge])])}},styles:[{"uni-picker-view":{"":{position:"relative"}},"uni-picker-view-wrapper":{"":{display:"flex",flexDirection:"row",position:"absolute",top:0,left:0,right:0,bottom:0,overflow:"hidden"}}}]});function Xo(S){let F=P.reactive([...S.value]),W=P.reactive({value:F});return P.watch(()=>S.value,H=>{W.value.length=H.length,P.nextTick(()=>{H.forEach((ne,ie)=>{ne!==W.value[ie]&&W.value.splice(ie,1,ne)})})}),W}let Ta=y.requireModule("dom"),Fi=y.config.env.platform.toLowerCase()==="android";function ai(S){return Nt.extend({},Nt.isString(S)?Mi(S):S)}let br={length:{type:[Number,String],default:0}},_o=P.defineComponent({name:"PickerViewColumn",props:br,data:()=>({_isMounted:!1}),setup(S,{slots:F}){let W=P.getCurrentInstance(),H=P.ref(null),ne=P.ref(null),ie=P.ref(null),ge=P.ref(null),we=P.inject("pickerViewProps"),$e=P.inject("getPickerViewColumn")(W),Ee=P.computed(()=>ai(we.indicatorStyle)),De=P.computed(()=>ai(we.maskTopStyle)),ht=P.computed(()=>ai(we.maskBottomStyle)),Tt=P.ref(0);Tt.value=ds(Ee.value);let Rt=P.ref(0);Rt.value=parseFloat(we.height);let{setCurrent:yt,onScrollend:vt}=Qo(S,$e,ne,Tt),Ut=()=>{let Rn,At;u(()=>{Promise.all([mn(H.value).then(({height:ln})=>{Rn=Rt.value=ln}),Fi&&S.length?mn(ie.value).then(({height:ln})=>{At=Tt.value=ln/parseFloat(S.length)}):mn(ge.value).then(({height:ln})=>{At=Tt.value=ln})]).then(()=>{Rn&&At?u(()=>{W.data._isMounted=!0,yt($e.value,!1,!0)},50):Ut()})},50)};P.onMounted(Ut);let _n=Rn=>Rn?Fi?P.createVNode("div",{ref:ie,style:"flex-direction:column;"},[Rn]):Rn:null;return()=>{let Rn=F.default&&F.default(),At=(Rt.value-Tt.value)/2,ln=`${Rt.value-At}px`,Vn={showScrollbar:!1,scrollToBegin:!1,decelerationRate:.3,scrollY:!0};return Fi||(Vn.scrollTop=$e.value*Tt.value),P.createVNode("view",{ref:H,class:"uni-picker-view-column"},[P.createVNode("scroll-view",P.mergeProps({class:"uni-picker-view-group",style:"flex-direction:column;",onScrollend:vt},Vn),[P.createVNode("view",{ref:ne,class:"uni-picker-view-content",style:{paddingTop:`${At}px`,paddingBottom:`${At}px`}},[_n(Rn)])]),P.createVNode("u-scalable",{class:"uni-picker-view-mask"},[P.createVNode("u-scalable",{class:"uni-picker-view-mask uni-picker-view-mask-top",style:Nt.extend({},De.value,{bottom:ln})},null),P.createVNode("u-scalable",{class:"uni-picker-view-mask uni-picker-view-mask-bottom",style:Nt.extend({},ht.value,{top:ln})},null)]),P.createVNode("u-scalable",{ref:ge,class:"uni-picker-view-indicator",style:Nt.extend({},Ee.value,{top:`${At}px`})},null)])}},styles:[{"uni-picker-view-column":{"":{flex:1,position:"relative",alignItems:"stretch",overflow:"hidden"}},"uni-picker-view-mask":{"":{position:"absolute",top:0,left:0,right:0,bottom:0,pointerEvents:"none"}},"uni-picker-view-mask-top":{"":{bottom:0,backgroundImage:"linear-gradient(to bottom,rgba(255, 255, 255, 0.95),rgba(255, 255, 255, 0.6))"}},"uni-picker-view-mask-bottom":{"":{top:0,backgroundImage:"linear-gradient(to top,rgba(255, 255, 255, 0.95),rgba(255, 255, 255, 0.6))"}},"uni-picker-view-group":{"":{position:"absolute",top:0,left:0,right:0,bottom:0}},"uni-picker-view-content":{"":{flexDirection:"column",paddingTop:0,paddingRight:0,paddingBottom:0,paddingLeft:0}},"uni-picker-view-indicator":{"":{position:"absolute",left:0,right:0,top:0,height:"34px",pointerEvents:"none",borderColor:"#e5e5e5",borderTopWidth:"1px",borderBottomWidth:"1px"}}}]});function ds(S){let W=(S.height||S.lineHeight||"").match(/(-?[\d\.]+)px/),H=0;return W&&(H=parseFloat(W[1])),H}function Qo(S,F,W,H){let ne;function ie(Me,$e=!0){Ta.scrollToElement(W.value,{offset:Me*H.value,animated:$e}),$e&&(ne=Date.now())}P.watch(()=>S.length,()=>{u(()=>{ge(F.value,!0,!0)},150)}),P.watch(F,Me=>ie(Me));let ge=(Me,$e=!0,Ee)=>{F.value===Me&&!Ee||(F.value=Me,Fi&&ie(Me,$e))};return{setCurrent:ge,onScrollend:Me=>{if(Date.now()-ne<340)return;let $e=Me.detail.contentOffset.y,Ee=Math.round($e/H.value);$e%H.value?ge(Ee,!0,!0):F.value=Ee}}}let rn={SELECTOR:"selector",MULTISELECTOR:"multiSelector",TIME:"time",DATE:"date"},yr={YEAR:"year",MONTH:"month",DAY:"day"};function Wn(S){return S>9?S:`0${S}`}function Er(S,F){S=String(S||"");let W=new Date;if(F===rn.TIME){let H=S.split(":");H.length===2&&W.setHours(parseInt(H[0]),parseInt(H[1]))}else{let H=S.split("-");H.length===3&&W.setFullYear(parseInt(H[0]),parseInt(String(parseFloat(H[1])-1)),parseInt(H[2]))}return W}function Kr(S){if(S.mode===rn.TIME)return"00:00";if(S.mode===rn.DATE){let F=new Date().getFullYear()-100;switch(S.fields){case yr.YEAR:return F;case yr.MONTH:return F+"-01";default:return F+"-01-01"}}return""}function ea(S){if(S.mode===rn.TIME)return"23:59";if(S.mode===rn.DATE){let F=new Date().getFullYear()+100;switch(S.fields){case yr.YEAR:return F;case yr.MONTH:return F+"-12";default:return F+"-12-31"}}return""}let ta={name:{type:String,default:""},range:{type:Array,default(){return[]}},rangeKey:{type:String,default:""},value:{type:[Number,String,Array],default:0},mode:{type:String,default:rn.SELECTOR,validator(S){return Object.values(rn).indexOf(S)>=0}},fields:{type:String,default:""},start:{type:String,default:Kr},end:{type:String,default:ea},disabled:{type:[Boolean,String],default:!1}},ps=P.defineComponent({name:"Picker",props:ta,emits:["change","cancel","columnchange"],setup(S,{slots:F,emit:W}){let H=P.ref(null),ne=or(H,W),ie=P.ref(null),ge=P.ref(null),we=()=>{let yt=S.value;switch(S.mode){case rn.MULTISELECTOR:{Nt.isArray(yt)||(yt=[]),Nt.isArray(ie.value)||(ie.value=[]);let vt=ie.value.length=Math.max(yt.length,S.range.length);for(let Ut=0;Ut<vt;Ut++){let _n=Number(yt[Ut]),Rn=Number(ie.value[Ut]),At=isNaN(_n)?isNaN(Rn)?0:Rn:_n;ie.value.splice(Ut,1,At<0?0:At)}}break;case rn.TIME:case rn.DATE:ie.value=String(yt);break;default:{let vt=Number(yt);ie.value=vt<0?0:vt;break}}},Me=yt=>{ge.value&&ge.value.sendMessage(yt)},$e=yt=>{let vt={event:"cancel"};ge.value=nn({url:"__uniapppicker",data:yt,style:{titleNView:!1,animationType:"none",animationDuration:0,background:"rgba(0,0,0,0)",popGesture:"none"},onMessage:Ut=>{let _n=Ut.event;if(_n==="created"){Me(yt);return}if(_n==="columnchange"){delete Ut.event,ne(_n,Ut);return}vt=Ut},onClose:()=>{ge.value=null;let Ut=vt.event;delete vt.event,Ut&&ne(Ut,vt)}})},Ee=yt=>{h.nativeUI[S.mode===rn.TIME?"pickTime":"pickDate"](vt=>{let Ut=vt.date;ne("change",{value:S.mode===rn.TIME?`${Wn(Ut.getHours())}:${Wn(Ut.getMinutes())}`:`${Ut.getFullYear()}-${Wn(Ut.getMonth()+1)}-${Wn(Ut.getDate())}`})},()=>{ne("cancel",{})},S.mode===rn.TIME?{time:Er(S.value,rn.TIME)}:{date:Er(S.value,rn.DATE),minDate:Er(S.start,rn.DATE),maxDate:Er(S.end,rn.DATE)})},De=yt=>{(yt.mode===rn.TIME||yt.mode===rn.DATE)&&!yt.fields?Ee():(yt.fields=Object.values(yr).includes(yt.fields)?yt.fields:yr.DAY,$e(yt))},ht=yt=>{S.disabled||De(Nt.extend({},S,{value:ie.value,locale:p.getLocale()}))},Tt=P.inject(ur,!1),Rt={submit:()=>[S.name,ie.value],reset:()=>{switch(S.mode){case rn.SELECTOR:ie.value=0;break;case rn.MULTISELECTOR:Nt.isArray(S.value)&&(ie.value=S.value.map(yt=>0));break;case rn.DATE:case rn.TIME:ie.value="";break}}};return Tt&&(Tt.addField(Rt),P.onBeforeUnmount(()=>Tt.removeField(Rt))),Object.keys(S).forEach(yt=>{P.watch(()=>S[yt],vt=>{let Ut={};Ut[yt]=vt,Me(Ut)},{deep:!0})}),P.watch(()=>S.value,we,{deep:!0}),we(),()=>P.createVNode("view",{ref:H,onClick:ht},[F.default&&F.default()])}}),Mo={name:{type:String,default:""},min:{type:[Number,String],default:0},max:{type:[Number,String],default:100},value:{type:[Number,String],default:0},step:{type:[Number,String],default:1},disabled:{type:[Boolean,String],default:!1},color:{type:String,default:"#e9e9e9"},backgroundColor:{type:String,default:"#e9e9e9"},activeColor:{type:String,default:"#007aff"},selectedColor:{type:String,default:"#007aff"},blockColor:{type:String,default:"#ffffff"},blockSize:{type:[Number,String],default:28},showValue:{type:[Boolean,String],default:!1}},Bo=[{"uni-slider":{"":{flex:1,flexDirection:"column"}},"uni-slider-wrapper":{"":{flexDirection:"row",justifyContent:"center",alignItems:"center"}},"uni-slider-tap-area":{"":{position:"relative",flex:1,flexDirection:"row",alignItems:"center",paddingTop:"14",paddingBottom:"14"}},"uni-slider-handle-wrapper":{"":{position:"relative",flex:1,backgroundColor:"#e9e9e9",height:"2",borderRadius:"5",marginRight:"14",marginLeft:"14"}},"uni-slider-track":{"":{height:"2",borderRadius:"6",backgroundColor:"#007aff"}},"uni-slider-thumb":{"":{position:"absolute",top:"1",width:"28",height:"28",borderRadius:50,boxShadow:"0 0 4px #ebebeb"}},"uni-slider-value":{"":{color:"#888888",fontSize:"16",width:"30"}}}],Ha=P.defineComponent({name:"USlider",props:Mo,styles:Bo,setup(S,{emit:F}){let W=P.ref(null),H=P.ref(null),ne=or(W,F),ie=ja(S),ge=Lo(S,ie,ne);return Pa(S,ie),P.watch(()=>S.value,we=>{ie.sliderValue=Number(we)}),P.onMounted(()=>{u(()=>{mn(H.value).then(({width:we,left:Me})=>{ie.sliderLeft=Me,ie.sliderWidth=we||0,ie.sliderValue=Number(S.value)})},100)}),()=>{let{showValue:we}=S,{trackTapStyle:Me,trackStyle:$e,trackActiveStyle:Ee,thumbStyle:De,sliderValue:ht}=ie;return P.createVNode("div",{class:"uni-slider",ref:W},[P.createVNode("div",{class:"uni-slider-wrapper"},[P.createVNode("div",P.mergeProps({class:"uni-slider-tap-area",style:Me},ge),[P.createVNode("div",{class:"uni-slider-handle-wrapper",style:$e,ref:H},[P.createVNode("div",{class:"uni-slider-track",style:Ee},null)]),P.createVNode("div",{class:"uni-slider-thumb",style:De},null)]),we?sn(ht+"",{class:"uni-slider-value"}):null])])}}});function ja(S){let F=P.ref(0),W=P.ref(0),H=P.ref(0),ne=()=>S.backgroundColor!=="#e9e9e9"?S.backgroundColor:S.color!=="#007aff"?S.color:"#007aff",ie=()=>S.activeColor!=="#007aff"?S.activeColor:S.selectedColor!=="#e9e9e9"?S.selectedColor:"#e9e9e9",ge=()=>{let $e=Number(S.max),Ee=Number(S.min);return(H.value-Ee)/($e-Ee)*W.value},we=Number(S.blockSize)/2;return P.reactive({sliderLeft:F,sliderWidth:W,sliderValue:H,sliderThumbOffset:we,trackTapStyle:P.computed(()=>({paddingTop:we,paddingBottom:we})),trackStyle:P.computed(()=>({backgroundColor:ne(),marginLeft:we,marginRight:we})),trackActiveStyle:P.computed(()=>({backgroundColor:ie(),width:ge()})),thumbStyle:P.computed(()=>({width:S.blockSize,height:S.blockSize,backgroundColor:S.blockColor,left:ge()}))})}function Lo(S,F,W){let H=null;function ne(we,Me){S.disabled||(we==="move"?(ie(Me),W("changing",{value:F.sliderValue})):we==="end"&&(ie(Me),W("change",{value:F.sliderValue})))}function ie(we){we-=F.sliderThumbOffset,we<0&&(we=0),we>F.sliderWidth&&(we=F.sliderWidth);let Me=Number(S.max),$e=Number(S.min),Ee=Number(S.step),De=we/F.sliderWidth*(Me-$e);Ee>0&&De>Ee&&De%Ee/Ee!==0?De-=De%Ee:De=parseInt(De+""),F.sliderValue=De+$e}return{onTouchstart(we){we.changedTouches.length===1&&!H&&(H=we,ne("start",we.changedTouches[0].pageX))},onTouchmove(we){we.changedTouches.length===1&&H&&ne("move",we.changedTouches[0].pageX)},onTouchend(we){we.changedTouches.length===1&&H&&(H=null,ne("end",we.changedTouches[0].pageX))}}}function Pa(S,F){let W=P.inject(ur,!1),H={submit:()=>{let ne=["",null];return S.name&&(ne[0]=S.name,ne[1]=F.sliderValue),ne},reset:()=>{F.sliderValue=Number(S.value)}};W&&(W.addField(H),P.onUnmounted(()=>{W.removeField(H)}))}let hs={name:{type:String,default:""},checked:{type:[Boolean,String],default:!1},type:{type:String,default:"switch"},id:{type:String,default:""},disabled:{type:[Boolean,String],default:!1},color:{type:String,default:"#007aff"}},na={switch:"switch",checkbox:"checkbox"},Fo={width:52,height:32},U=P.defineComponent({name:"Switch",props:hs,emits:["change"],setup(S,{emit:F}){let W=P.ref(null),H=P.ref(S.checked),ne=q(S,H),ie=or(W,F);P.watch(()=>S.checked,we=>{H.value=we});let ge=(we,Me)=>{S.disabled||(H.value=we.detail?we.detail.value:!H.value,ie("change",{value:H.value}))};return ne&&(ne.addHandler(ge),P.onBeforeUnmount(()=>{ne.removeHandler(ge)})),qr(S,{"label-click":ge}),()=>{let{color:we,type:Me,disabled:$e}=S;return P.createVNode("div",{ref:W},[Me===na.switch?P.createVNode("dc-switch",P.mergeProps({dataUncType:"uni-switch"},{onChange:ge},{checked:H.value,color:we,disabled:$e},{style:Fo}),null):null,Me===na.checkbox?P.createVNode(P.resolveComponent("checkbox"),P.mergeProps({style:{color:we}},{checked:H.value,disabled:$e},{onClick:ge}),null):null])}}});function q(S,F){let W=P.inject(ur,!1),H=P.inject(zn,!1),ne={submit:()=>{let ie=["",null];return S.name&&(ie[0]=S.name,ie[1]=F.value),ie},reset:()=>{F.value=!1}};return W&&(W.addField(ne),P.onUnmounted(()=>{W.removeField(ne)})),H}let pe={checked:{type:[Boolean,String],default:!1},id:{type:String,default:""},disabled:{type:[Boolean,String],default:!1},color:{type:String,default:"#007aff"},value:{type:String,default:""}},Ze=Or("ucg"),Je={name:{type:String,default:""}},mt=[{"uni-checkbox":{"":{flexDirection:"row",alignItems:"center"}},"uni-checkbox-input":{"":{justifyContent:"center",alignItems:"center",position:"relative",borderWidth:"1",borderColor:"#d1d1d1",borderStyle:"solid",backgroundColor:"#ffffff",borderRadius:"3",width:"22",height:"22"}},"uni-icon":{"":{fontFamily:"unincomponents",fontSize:"16",marginLeft:"2",marginTop:"2",color:"#007aff"}},"uni-checkbox-input-disabled":{"":{backgroundColor:"#e1e1e1"}},"uni-checkbox-input-disabled-before":{"":{color:"#adadad"}},"uni-checkbox-slot":{"":{fontSize:"16",marginLeft:"5"}}}],et=P.defineComponent({name:"Checkbox",props:pe,styles:mt,setup(S,{slots:F}){let W=P.ref(null),H=P.ref(S.checked),ne=P.ref(S.value),ie=P.computed(()=>S.disabled?"#adadad":S.color),ge=()=>{H.value=!1},we=(De,ht)=>{S.disabled||(H.value=!H.value,Me&&Me.checkboxChange(De))},{uniCheckGroup:Me,uniLabel:$e}=st(H,ne,ge);$e&&($e.addHandler(we),P.onBeforeUnmount(()=>{$e.removeHandler(we)})),qr(S,{"label-click":we}),P.watch([()=>S.checked,()=>S.value],([De,ht])=>{H.value=De,ne.value=ht});let Ee=()=>{if(!F.default)return[];let De=F.default();return De.length===1&&De[0].type===Text?[sn(De[0].children,{class:"uni-checkbox-slot"})]:De};return()=>P.createVNode("div",P.mergeProps({ref:W},{dataUncType:"uni-checkbox"},{onClick:we,class:"uni-checkbox"}),[P.createVNode("div",{class:["uni-checkbox-input",{"uni-checkbox-input-disabled":S.disabled}]},[H.value?sn("\uEA08",{class:"uni-icon",style:{color:ie.value}}):null]),...Ee()])}});function st(S,F,W){let H=P.computed(()=>({checkboxChecked:Boolean(S.value),value:F.value})),ne={reset:W},ie=P.inject(Ze,!1);ie&&ie.addField(H);let ge=P.inject(ur,!1);ge&&ge.addField(ne);let we=P.inject(zn,!1);return P.onBeforeUnmount(()=>{ie&&ie.removeField(H),ge&&ge.removeField(ne)}),{uniCheckGroup:ie,uniForm:ge,uniLabel:we}}let fr=P.defineComponent({name:"CheckboxGroup",props:Je,emits:["change"],setup(S,{slots:F,emit:W}){let H=P.ref(null),ne=or(H,W);return $r(S,ne),()=>P.createVNode("div",{ref:H,class:"uni-checkbox-group"},[F.default&&F.default()])}});function $r(S,F){let W=[],H=()=>W.reduce((ie,ge)=>(ge.value.checkboxChecked&&ie.push(ge.value.value),ie),new Array);P.provide(Ze,{addField(ie){W.push(ie)},removeField(ie){W.splice(W.indexOf(ie),1)},checkboxChange(ie){F("change",{value:H()})}});let ne=P.inject(ur,!1);return ne&&ne.addField({submit:()=>{let ie=["",null];return S.name!==""&&(ie[0]=S.name,ie[1]=H()),ie}}),H}let Hr={checked:{type:[Boolean,String],default:!1},id:{type:String,default:""},disabled:{type:[Boolean,String],default:!1},color:{type:String,default:"#007aff"},value:{type:String,default:""}},Qi=Or("ucg"),_i={name:{type:String,default:""}},eo=[{"uni-radio":{"":{alignItems:"center",flexDirection:"row"}},"uni-radio-input":{"":{position:"relative",alignItems:"center",justifyContent:"center",marginRight:"5",borderStyle:"solid",borderWidth:"1",borderColor:"#d1d1d1",borderRadius:50,width:"22",height:"22",outline:0}},"uni-radio-input-icon":{"":{fontFamily:"unincomponents",fontSize:"14",color:"#ffffff"}},"uni-radio-input-disabled":{"":{backgroundColor:"#e1e1e1",borderColor:"#d1d1d1",color:"#adadad"}},"uni-radio-slot":{"":{fontSize:"16",marginLeft:"5"}}}],gs=P.defineComponent({name:"Radio",props:Hr,styles:eo,emits:["change"],setup(S,{slots:F}){let W=P.ref(null),H=P.ref(S.checked),ne=P.ref(S.value),ie=P.computed(()=>{let ht=S.disabled?"#adadad":S.color;return H.value?{backgroundColor:ht,borderColor:ht}:{borderColor:"#d1d1d1"}}),ge=()=>{H.value=!1},{uniCheckGroup:we,uniLabel:Me,field:$e}=Di(H,ne,ge),Ee=(ht,Tt)=>{S.disabled||H.value||(H.value=!H.value,we&&we.radioChange(ht,$e))};Me&&(Me.addHandler(Ee),P.onBeforeUnmount(()=>{Me.removeHandler(Ee)})),qr(S,{"label-click":Ee}),P.watch([()=>S.checked,()=>S.value],([ht,Tt])=>{H.value=ht,ne.value=Tt});let De=()=>{if(!F.default)return[];let ht=F.default();return ht.length===1&&ht[0].type===Text?[sn(ht[0].children,{class:"uni-radio-slot"})]:ht};return()=>{let{disabled:ht}=S;return P.createVNode("div",P.mergeProps({ref:W},{dataUncType:"uni-radio"},{onClick:Ee,class:"uni-radio"}),[P.createVNode("div",{style:ie.value,class:["uni-radio-input",{"uni-radio-input-disabled":ht}]},[H.value?sn("\uEA08",{class:"uni-radio-input-icon"}):null]),...De()])}}});function Di(S,F,W){let H=P.computed({get:()=>({radioChecked:Boolean(S.value),value:F.value}),set:({radioChecked:Me})=>{S.value=Me}}),ne={reset:W},ie=P.inject(Qi,!1);ie&&ie.addField(H);let ge=P.inject(ur,!1);ge&&ge.addField(ne);let we=P.inject(zn,!1);return P.onBeforeUnmount(()=>{ie&&ie.removeField(H),ge&&ge.removeField(ne)}),{uniCheckGroup:ie,uniForm:ge,uniLabel:we,field:H}}let Sr=P.defineComponent({name:"RadioGroup",props:_i,emits:["change"],setup(S,{slots:F,emit:W}){let H=P.ref(null),ne=or(H,W);return si(S,ne),()=>P.createVNode("div",{ref:H},[F.default&&F.default()])}});function si(S,F){let W=[];P.onMounted(()=>{we(W.length-1)});let H=()=>{var Me;return(Me=W.find($e=>$e.value.radioChecked))==null?void 0:Me.value.value};P.provide(Qi,{addField(Me){W.push(Me)},removeField(Me){W.splice(W.indexOf(Me),1)},radioChange(Me,$e){let Ee=W.indexOf($e);we(Ee,!0),F("change",{value:H()})}});let ne=P.inject(ur,!1),ie={submit:()=>{let Me=["",null];return S.name!==""&&(Me[0]=S.name,Me[1]=H()),Me}};ne&&(ne.addField(ie),P.onBeforeUnmount(()=>{ne.removeField(ie)}));function ge(Me,$e){Me.value={radioChecked:$e,value:Me.value.value}}function we(Me,$e){W.forEach((Ee,De)=>{De!==Me&&$e&&ge(W[De],!1)})}return W}let Na=["u-input","u-textarea"],le=P.defineComponent({name:"Form",emits:["submit","reset"],setup({},{slots:S,emit:F}){let W=P.ref(null),H=or(W,F),ne=[],ie;return P.provide(ur,{addField(ge){ne.push(ge)},removeField(ge){ne.splice(ne.indexOf(ge),1)},submit(ge){let we={};ie&&ie(we);let Me=ne.reduce(($e,Ee)=>{if(Ee.submit){let[De,ht]=Ee.submit();De&&($e[De]=ht)}return $e},Object.create(null));Object.assign(we,Me),H("submit",{value:we})},reset(ge){ie&&ie(),ne.forEach(we=>we.reset&&we.reset()),H("reset",ge)}}),()=>{let ge=S.default&&S.default();return ie=K(ge),P.createVNode("view",{ref:W},[ge])}}});function K(S){let F=y.requireModule("plus"),W=(H,ne)=>{(ne||S||[]).forEach(function(ie){Na.indexOf(String(ie.type))>=0&&ie.el&&ie.el.attr&&ie.el.attr.name&&(H?H[ie.el.attr.name]=F.getValue(ie.el.nodeId):ie.el.setValue("")),Nt.isArray(ie.children)&&ie.children&&ie.children.length&&W(H,ie.children)})};return W}let de={type:{type:String,default:""},size:{type:[String,Number],default:23},color:{type:String,default:""}},Ve={success:"#09bb07",info:"#10aeff",warn:"#f76260",waiting:"#10aeff",safe_success:"#09bb07",safe_warn:"#ffbe00",success_circle:"#09bb07",success_no_circle:"#09bb07",waiting_circle:"#10aeff",circle:"#c9c9c9",download:"#09bb07",info_circle:"#09bb07",cancel:"#f43530",search:"#b2b2b2",clear:"#b2b2b2"},ft={success:"\uEA06",info:"\uEA03",warn:"\uEA0B",waiting:"\uEA09",safe_success:"\uEA04",safe_warn:"\uEA05",success_circle:"\uEA07",success_no_circle:"\uEA08",waiting_circle:"\uEA0A",circle:"\uEA01",download:"\uEA02",info_circle:"\uEA0C",cancel:"\uEA0D",search:"\uEA0E",clear:"\uEA0F"},on=[{"uni-icon":{"":{fontFamily:"unincomponents"}}}],Kn=P.defineComponent({name:"Icon",props:de,styles:on,setup(S,{}){return()=>sn(ft[S.type],{class:"uni-icon",style:{color:S.color||Ve[S.type],fontSize:S.size}})}}),vn={indicatorDots:{type:[Boolean,String],default:!1},vertical:{type:[Boolean,String],default:!1},autoplay:{type:[Boolean,String],default:!1},circular:{type:[Boolean,String],default:!1},interval:{type:[Number,String],default:5e3},duration:{type:[Number,String],default:500},current:{type:[Number,String],default:0},indicatorColor:{type:String,default:"rgba(0,0,0,.3)"},indicatorActiveColor:{type:String,default:"#000000"},previousMargin:{type:String,default:""},nextMargin:{type:String,default:""},currentItemId:{type:String,default:""},skipHiddenItemLayout:{type:[Boolean,String],default:!1},displayMultipleItems:{type:[Number,String],default:1},disableTouch:{type:[Boolean,String],default:!1}},Un=y.config.env.platform.toLowerCase()==="android",dr=[{"uni-swiper":{"":{position:"relative",height:"150px"}},"uni-swiper-slider":{"":{position:"absolute",left:0,top:0,right:0,bottom:0}},"uni-swiper-dots":{"":{position:"absolute",left:0,right:0,bottom:"10",height:"10"}}}],to=P.defineComponent({name:"Swiper",props:vn,styles:dr,emits:["change","transition","animationfinish"],setup(S,{slots:F,emit:W}){let H=P.ref(null),ne=[],ie=or(H,W),ge=Zn(S),we=bo(ge,S,ne,ie);return P.watch([()=>S.current,()=>S.currentItemId],([Me,$e])=>{Ia(ge,S,ne)}),P.onMounted(()=>{u(()=>{mn(H.value).then(({width:Me,height:$e})=>{ge.swiperWidth=Me,ge.swiperHeight=$e})},50)}),()=>{let Me=F.default&&F.default(),{indicatorStyle:$e,currentSync:Ee}=ge;return ne=Zi(Me),P.createVNode("div",{ref:H,class:"uni-swiper"},[P.createVNode("slider",P.mergeProps({class:"uni-swiper-slider"},{autoPlay:S.autoplay,interval:S.interval,index:Ee,keepIndex:!0,showIndicators:S.indicatorDots,infinite:S.circular,vertical:S.vertical,scrollable:!S.disableTouch},we),[ne,P.createVNode("indicator",{class:"uni-swiper-dots",style:$e},null)])])}}});function Zn(S){let F=P.ref(0),W=P.ref(0),H=P.ref(S.current),ne=P.ref("autoplay"),ie=P.computed(()=>({itemColor:S.indicatorColor,itemSelectedColor:S.indicatorActiveColor,itemSize:8,opacity:S.indicatorDots?1:0}));return P.reactive({swiperWidth:F,swiperHeight:W,indicatorStyle:ie,currentSync:H,currentChangeSource:ne})}function bo(S,F,W,H){let ne=0,ie=Ee=>{let De=Ee.detail,ht=F.vertical,Tt=(ht?De.offsetYRatio:De.offsetXRatio)||0;if((Ee.drag||Ee.drag)&&(S.currentChangeSource="touch"),Tt===0){let Rt=Math.abs(ne);if(Rt===1)return;Rt>.5&&(Tt=1)}ne=Tt,H("transition",{dx:ht?0:-S.swiperWidth*Tt,dy:ht?-S.swiperHeight*Tt:0})},ge=Ee=>{let De=()=>{H("animationfinish",Me()),S.currentChangeSource="autoplay"};Un?De():u(De,50)},we=Ee=>{Nt.isString(Ee.detail.source)&&(S.currentChangeSource=Ee.detail.source),S.currentSync=Ee.detail.index,ne=0};function Me(){let Ee=Number(S.currentSync),De=W[Ee]||{},ht=De.componentInstance&&De.componentInstance.itemId||"";return{current:Ee,currentItemId:ht,source:S.currentChangeSource}}return P.watch(()=>S.currentSync,Ee=>{H("change",Me())}),{onScroll:ie,onScrollend:ge,onChange:we}}function Ia(S,F,W){let H=-1;if(F.currentItemId)for(let ne=0,ie=W;ne<ie.length;ne++){let ge=ie[ne].componentInstance;if(ge&&ge.itemId===F.currentItemId){H=ne;break}}H<0&&(H=Math.round(Number(F.current))||0),H=H<0?0:H,S.currentSync!==H&&(S.currentChangeSource="",S.currentSync=H)}let yo={itemId:{type:String,default:""}},Do=P.defineComponent({name:"SwiperItem",props:yo,setup(S,{slots:F}){return()=>P.createVNode("div",{class:"uni-swiper-item",style:{position:"absolute",left:0,top:0,right:0,bottom:0,overflow:"hidden"}},[F.default&&F.default()])}});var Bl=/^<([-A-Za-z0-9_]+)((?:\s+[a-zA-Z_:][-a-zA-Z0-9_:.]*(?:\s*=\s*(?:(?:"[^"]*")|(?:'[^']*')|[^>\s]+))?)*)\s*(\/?)>/,ra=/^<\/([-A-Za-z0-9_]+)[^>]*>/,ka=/([a-zA-Z_:][-a-zA-Z0-9_:.]*)(?:\s*=\s*(?:(?:"((?:\\.|[^"])*)")|(?:'((?:\\.|[^'])*)')|([^>\s]+)))?/g,gl=wr("area,base,basefont,br,col,frame,hr,img,input,link,meta,param,embed,command,keygen,source,track,wbr"),rr=wr("a,address,article,applet,aside,audio,blockquote,button,canvas,center,dd,del,dir,div,dl,dt,fieldset,figcaption,figure,footer,form,frameset,h1,h2,h3,h4,h5,h6,header,hgroup,hr,iframe,isindex,li,map,menu,noframes,noscript,object,ol,output,p,pre,section,script,table,tbody,td,tfoot,th,thead,tr,ul,video"),Ll=wr("abbr,acronym,applet,b,basefont,bdo,big,br,button,cite,code,del,dfn,em,font,i,iframe,img,input,ins,kbd,label,map,object,q,s,samp,script,select,small,span,strike,strong,sub,sup,textarea,tt,u,var"),za=wr("colgroup,dd,dt,li,options,p,td,tfoot,th,thead,tr"),Ti=wr("checked,compact,declare,defer,disabled,ismap,multiple,nohref,noresize,noshade,nowrap,readonly,selected"),ia=wr("script,style");function Pi(S,F){var W,H,ne,ie=[],ge=S;for(ie.last=function(){return this[this.length-1]};S;){if(H=!0,!ie.last()||!ia[ie.last()]){if(S.indexOf("<!--")==0?(W=S.indexOf("-->"),W>=0&&(F.comment&&F.comment(S.substring(4,W)),S=S.substring(W+3),H=!1)):S.indexOf("</")==0?(ne=S.match(ra),ne&&(S=S.substring(ne[0].length),ne[0].replace(ra,$e),H=!1)):S.indexOf("<")==0&&(ne=S.match(Bl),ne&&(S=S.substring(ne[0].length),ne[0].replace(Bl,Me),H=!1)),H){W=S.indexOf("<");var we=W<0?S:S.substring(0,W);S=W<0?"":S.substring(W),F.chars&&F.chars(we)}}else S=S.replace(new RegExp("([\\s\\S]*?)</"+ie.last()+"[^>]*>"),function(Ee,De){return De=De.replace(/<!--([\s\S]*?)-->|<!\[CDATA\[([\s\S]*?)]]>/g,"$1$2"),F.chars&&F.chars(De),""}),$e("",ie.last());if(S==ge)throw"Parse Error: "+S;ge=S}$e();function Me(Ee,De,ht,Tt){if(De=De.toLowerCase(),rr[De])for(;ie.last()&&Ll[ie.last()];)$e("",ie.last());if(za[De]&&ie.last()==De&&$e("",De),Tt=gl[De]||!!Tt,Tt||ie.push(De),F.start){var Rt=[];ht.replace(ka,function(yt,vt){var Ut=arguments[2]?arguments[2]:arguments[3]?arguments[3]:arguments[4]?arguments[4]:Ti[vt]?vt:"";Rt.push({name:vt,value:Ut,escaped:Ut.replace(/(^|[^\\])"/g,'$1\\"')})}),F.start&&F.start(De,Rt,Tt)}}function $e(Ee,De){if(De)for(var ht=ie.length-1;ht>=0&&ie[ht]!=De;ht--);else var ht=0;if(ht>=0){for(var Tt=ie.length-1;Tt>=ht;Tt--)F.end&&F.end(ie[Tt]);ie.length=ht}}}function wr(S){for(var F={},W=S.split(","),H=0;H<W.length;H++)F[W[H]]=!0;return F}function xa(S){return S.replace(/<\?xml.*\?>\n/,"").replace(/<!doctype.*>\n/,"").replace(/<!DOCTYPE.*>\n/,"")}function no(S){return S.reduce(function(F,W){let H=W.value,ne=W.name;return H.match(/ /)&&["style","src"].indexOf(ne)===-1&&(H=H.split(" ")),F[ne]?Array.isArray(F[ne])?F[ne].push(H):F[ne]=[F[ne],H]:F[ne]=H,F},{})}function Wa(S){S=xa(S);let F=[],W={node:"root",children:[]};return Pi(S,{start:function(H,ne,ie){let ge={name:H};if(ne.length!==0&&(ge.attrs=no(ne)),ie){let we=F[0]||W;we.children||(we.children=[]),we.children.push(ge)}else F.unshift(ge)},end:function(H){let ne=F.shift();if(ne.name!==H&&console.error("invalid state: mismatch end tag"),F.length===0)W.children.push(ne);else{let ie=F[0];ie.children||(ie.children=[]),ie.children.push(ne)}},chars:function(H){let ne={type:"text",text:H};if(F.length===0)W.children.push(ne);else{let ie=F[0];ie.children||(ie.children=[]),ie.children.push(ne)}},comment:function(H){let ne={node:"comment",text:H},ie=F[0];ie.children||(ie.children=[]),ie.children.push(ne)}}),W.children}let Uo={nodes:{type:[Array,String],default:function(){return[]}}},Vo=16,Ga=P.defineComponent({name:"RichText",props:Uo,setup(S){let F=P.getCurrentInstance();return()=>{let W=S.nodes;return Nt.isString(W)&&(W=Wa(W)),P.createVNode("u-rich-text",{value:ms(W||[],F.root,{defaultFontSize:Vo})},null)}}});function ms(S,F,W){let H=["span","a","image","img"],ne={blockquote:De,br:yt,div:De,dl:De,h1:Tt(2),h2:Tt(1.5),h3:Tt(1.17),h4:Tt(1),h5:Tt(.83),h6:Tt(.67),hr:De,ol:De,p:De,strong:Rt,table:De,tbody:De,tfoot:De,thead:De,ul:De},ie=/&(amp|gt|lt|nbsp|quot|apos);/g,ge={amp:"&",gt:">",lt:"<",nbsp:" ",quot:'"',apos:"'"},we={type:"span",__type:"break",attr:{value:`
`}},Me={__block:!0,__break:!0,children:[]},$e=null;function Ee(At){let ln=Object.create(null);if(At.attrs){let Vn=(At.attrs.class||"").split(" ");Object.assign(ln,P.parseClassList(Vn,F),Mi(At.attrs.style||""))}if(At.name==="img"||At.name==="image"){let Vn=At.attrs;ln.width=ln.width||Vn.width,ln.height=ln.height||Vn.height}return ln}function De(At){return At.__block=!0,At}function ht(At,ln){return At.style&&!At.style.fontSize&&(At.style.fontSize=W.defaultFontSize*ln),De(Rt(At))}function Tt(At){return function(ln){return ht(ln,At)}}function Rt(At){return At.style&&!At.style.fontWeight&&(At.style.fontWeight="bold"),At}function yt(At){return At.__value=" ",De(At)}function vt(At){return At.replace(ie,function(ln,Vn){return ge[Vn]})}function Ut(At){let ln=(At.name||"").toLowerCase(),Vn=ln,ir=ne[ln];H.indexOf(ln)===-1&&(ln="span"),ln==="img"&&(ln="image");let On={type:ln,__type:Vn,attr:Object.create(null)};return(At.type==="text"||At.text)&&(On.__value=On.attr.value=vt((At.text||"").trim())),At.attrs&&Object.keys(At.attrs).forEach($n=>{$n!=="class"&&$n!=="style"&&(On.attr[$n]=At.attrs[$n])}),On.style=Ee(At),ir&&ir(On),(Me.__block||On.__block)&&($e||(Me.children.push(we),$e=[Me,we])),Me=On,(Me.__value||Me.type==="image"&&Me.attr.src)&&($e=null),On.children=_n(At.children),Me=On,Me.__block&&Me.style.height&&!/^0(px)?$/.test(Me.style.height)&&($e=null),On}function _n(At){return Nt.isArray(At)?At.map(ln=>Ut(ln)):[]}let Rn=_n(S);if($e){let[At,ln]=$e,Vn=At.children,ir=Vn.indexOf(ln);Vn.splice(ir,1)}return Rn}let qa={};function ml(S,F,W){let{adpid:H,width:ne}=S,ie=H+"-"+ne,ge=qa[ie];if(ge&&ge.length>0){F(ge.splice(0,1)[0]);return}h.ad.getAds(S,we=>{let Me=we.ads;F(Me.splice(0,1)[0]),qa[ie]=ge?ge.concat(Me):Me},we=>{W({errCode:we.code,errMsg:we.message})})}let Fl={adpid:{type:[Number,String],default:""},data:{type:String,default:""},width:{type:String,default:""},channel:{type:String,default:""}},Eo={load:"load",close:"close",error:"error",downloadchange:"downloadchange"},hc=P.defineComponent({name:"Ad",props:Fl,emits:[Eo.load,Eo.close,Eo.error,Eo.downloadchange],setup(S,{emit:F}){let W=P.ref(null),H=or(W,F),ne=vl();P.watch(()=>S.adpid,ge=>{$s(ne,S,H)}),P.watch(()=>S.data,ge=>{ne.data=ge}),P.onMounted(()=>{u(()=>{mn(W.value).then(({width:ge})=>{ne.width=ge===0?-1:ge,$s(ne,S,H)})},50)});let ie={onDownloadchange(ge){H(Eo.downloadchange,ge)},onDislike(ge){H(Eo.close,ge)}};return()=>P.createVNode("u-ad",P.mergeProps({ref:W},{data:ne.data,rendering:!0},ie),null)}});function vl(S){let F=P.ref("");return P.reactive({width:0,data:F})}function $s(S,F,W){ml({adpid:F.adpid,width:S.width},H=>{S.data=H,W(Eo.load,{})},H=>{W(Eo.error,H)})}let Hs={};function $o(S,F,W,H,ne){let ie=S+"-"+F,ge=Hs[ie];if(ge&&ge.length>0){H(ge.splice(0,1)[0]);return}h.ad.getDrawAds({adpid:String(S),count:3,width:F},we=>{let Me=we.ads;H(Me.splice(0,1)[0]),Hs[ie]=ge?ge.concat(Me):Me},we=>{ne({errCode:we.code,errMsg:we.message})})}let ro={adpid:{type:[Number,String],default:""},data:{type:String,default:""},width:{type:String,default:""}},So={load:"load",close:"close",error:"error"},wo=P.defineComponent({name:"AdDraw",props:ro,emits:[So.load,So.close,So.error],setup(S,{emit:F}){let W=P.ref(null),H=or(W,F),ne=vs();P.watch(()=>S.adpid,ge=>{Dl(ne,S,H)}),P.watch(()=>S.data,ge=>{ne.data=ge});let ie={onDislike(ge){H(So.close,ge)}};return P.onMounted(()=>{u(()=>{mn(W.value).then(({width:ge,height:we})=>{ne.width=ge===0?-1:ge,ne.height=we===0?-1:we,Dl(ne,S,H)})},50)}),()=>{let{data:ge}=ne;return P.createVNode("u-ad-draw",P.mergeProps({ref:W},{data:ge,rendering:!0},ie),null)}}});function vs(S){let F=P.ref("");return P.reactive({width:0,height:0,data:F})}function Dl(S,F,W){$o(F.adpid,S.width,S.height,H=>{S.data=H,W(So.load,{})},H=>{W(So.error,H)})}return{Navigator:Lr,Label:nr,Button:Ki,MovableArea:Cn,MovableView:Jr,Progress:Xi,PickerView:Zo,PickerViewColumn:_o,Picker:ps,USlider:Ha,Switch:U,Checkbox:et,CheckboxGroup:fr,Radio:gs,RadioGroup:Sr,Form:le,Icon:Kn,Swiper:to,SwiperItem:Do,RichText:Ga,Ad:hc,AdDraw:wo}}(O,Oe,gt);return ue}function Nk(u,a){let{UniShared:p,Vue:b}=a;function O(h,v,k){let Oe=h.$[v];return Oe&&p.invokeArrayFns(Oe,k)}let y=u.setup;return u.inheritAttrs=!1,u.setup=(h,v)=>{let{attrs:{__pageId:k,__pagePath:Oe,__pageQuery:gt}}=v,Ot=a.__uniRoutes.find(Nt=>Nt.meta.route===Oe),ue=b.getCurrentInstance(),P=ue.proxy;if(Ot&&(Ot.meta.isSubNVue||Ik(P,a,{__pageId:k,__pagePath:Oe})),b.onMounted(()=>{b.nextTick(()=>{O(P,p.ON_READY)}),ue.onPageScroll&&P.$el.addEvent("scroll",Nt=>{Nt.scrollTop=Nt.detail.scrollTop,O(P,p.ON_PAGE_SCROLL,Nt)}),ue.onReachBottom&&P.$el.addEvent("scrolltolower",Nt=>{O(P,p.ON_REACH_BOTTOM,Nt)})}),b.onBeforeUnmount(()=>{O(P,p.ON_UNLOAD)}),y)return y(gt,v)},u}function Ik(u,a,{__pageId:p,__pagePath:b}){let O=a.getCurrentPages(),y=O[O.length-1];if(y&&y.__setup)y.__setup(u,y);else{let h="/"+b;return a.__registerPage({url:h,path:h,query:{},openType:"launch",webview:{id:p+""},nvuePageVm:u})}}var Au={},Km;function Zm(u){Km=u}var Kf;function kk(u){if(Kf)return Kf;let a=new u.Emitter;return Kf={on(p,b){return a.on(p,b)},once(p,b){return a.once(p,b)},off(p,b){return a.off(p,b)},emit(p,...b){return a.emit(p,...b)}},Kf}function xk(u){return(a,p,b)=>{let{nvue:O}=p,y=Jf(u,p);p.Vue=y,Au[a]={instanceId:a,config:O.config,document:O.document,data:b};let{createApp:h}=y;y.createVueApp=y.createApp=(v,k)=>(p.__uniConfig.styles=v.styles||[],h(v,k).use(Rk,a,p)),y.createPageApp=(v,k)=>{Nk(v,p);let Oe=k.$store;delete k.$store;let gt=h(v,k);return Oe&&gt.use(Oe),gt.use(Bk,y,a,p)}}}var Rk={install(u,a,p){af(p).initApp(u),Mk(u,a,p)}};function Mk(u,a,p){let{mount:b}=u,O=Au[a];return u.mount=y=>{let h=y==="#app",v=O.app=b(Xm(O.document,{isRoot:h}));return h&&p.__registerApp(v),v},u}var Bk={install(u,a,p,b){let{weex:O,plus:y,BroadcastChannel:h,VueShared:v,UniShared:k,getCurrentPages:Oe,setTimeout:gt,clearTimeout:Ot,__uniConfig:ue}=b;u.config.globalProperties.$requireNativePlugin=O.requireModule;let P=Pk({uni:Km,Vue:a,weex:O,plus:y,BroadcastChannel:h,UniViewJSBridge:kk(k),VueShared:v,UniShared:k,getCurrentPages:Oe,setTimeout:gt,clearTimeout:Ot,__uniConfig:ue});Object.keys(P).forEach(Nt=>{u.component(a.hyphenate(Nt),P[Nt])}),af(b).initApp(u),Lk(u,p,b)}};function Lk(u,a,{nvue:p}){let{config:{compilerOptions:b},mount:O}=u;b.isCustomElement=h=>!!p.supports(`@component/${h}`);let y=Au[a];return u.mount=h=>{let v=h==="#root",k=y.app=O(Xm(y.document,{isRoot:v}));if(v)try{p.document.taskCenter.send("dom",{action:"createFinish"},[])}catch(Oe){}return k},u}function Xm(u,{isRoot:a}){if(a)return u.documentElement;let p=u.createComment("root");return u.documentElement.appendChild(p),p}function Qm(u){let a=Au[u];if(a&&a.app&&a.document){try{a.app.$.appContext.app.unmount(),a.document.destroy()}catch(p){}delete a.document,delete a.app}delete Au[u]}function ev(u){let a=Au[u];if(!a||!a.app)return new Error(`refreshInstance: instance ${u} not found!`);a.document.taskCenter.send("dom",{action:"refreshFinish"},[])}function Fk(u,a){let{UniShared:p,VueShared:b,VueReactivity:O}=u;var y=function(h,v,k,Oe){"use strict";var gt=[];function Ot(o){gt.push(o)}function ue(){gt.pop()}function P(o){k.pauseTracking();for(var c=gt.length?gt[gt.length-1].component:null,g=c&&c.appContext.config.warnHandler,E=Nt(),N=arguments.length,T=new Array(N>1?N-1:0),R=1;R<N;R++)T[R-1]=arguments[R];if(g)sn(g,c,11,[o+T.map($=>{var X,ye;return(ye=(X=$.toString)==null?void 0:X.call($))!=null?ye:JSON.stringify($)}).join(""),c&&c.proxy,E.map($=>{var{vnode:X}=$;return"at <".concat(os(c,X.type),">")}).join(`
`),E]);else{var z=["[Vue warn]: ".concat(o),...T];E.length&&z.push(`
`,...Mr(E)),console.warn(...z)}k.resetTracking()}function Nt(){var o=gt[gt.length-1];if(!o)return[];for(var c=[];o;){var g=c[0];g&&g.vnode===o?g.recurseCount++:c.push({vnode:o,recurseCount:0});var E=o.component&&o.component.parent;o=E&&E.vnode}return c}function Mr(o){var c=[];return o.forEach((g,E)=>{c.push(...E===0?[]:[`
`],...St(g))}),c}function St(o){var{vnode:c,recurseCount:g}=o,E=g>0?"... (".concat(g," recursive calls)"):"",N=c.component?c.component.parent==null:!1,T=" at <".concat(os(c.component,c.type,N)),R=">"+E;return c.props?[T,...Z(c.props),R]:[T+R]}function Z(o){var c=[],g=Object.keys(o);return g.slice(0,3).forEach(E=>{c.push(...se(E,o[E]))}),g.length>3&&c.push(" ..."),c}function se(o,c,g){return v.isString(c)?(c=JSON.stringify(c),g?c:["".concat(o,"=").concat(c)]):typeof c=="number"||typeof c=="boolean"||c==null?g?c:["".concat(o,"=").concat(c)]:k.isRef(c)?(c=se(o,k.toRaw(c.value),!0),g?c:["".concat(o,"=Ref<"),c,">"]):v.isFunction(c)?["".concat(o,"=fn").concat(c.name?"<".concat(c.name,">"):"")]:(c=k.toRaw(c),g?c:["".concat(o,"="),c])}function dn(o,c){o!==void 0&&(typeof o!="number"?P("".concat(c," is not a valid number - got ").concat(JSON.stringify(o),".")):isNaN(o)&&P("".concat(c," is NaN - the duration expression might be incorrect.")))}var Br={SETUP_FUNCTION:0,"0":"SETUP_FUNCTION",RENDER_FUNCTION:1,"1":"RENDER_FUNCTION",WATCH_GETTER:2,"2":"WATCH_GETTER",WATCH_CALLBACK:3,"3":"WATCH_CALLBACK",WATCH_CLEANUP:4,"4":"WATCH_CLEANUP",NATIVE_EVENT_HANDLER:5,"5":"NATIVE_EVENT_HANDLER",COMPONENT_EVENT_HANDLER:6,"6":"COMPONENT_EVENT_HANDLER",VNODE_HOOK:7,"7":"VNODE_HOOK",DIRECTIVE_HOOK:8,"8":"DIRECTIVE_HOOK",TRANSITION_HOOK:9,"9":"TRANSITION_HOOK",APP_ERROR_HANDLER:10,"10":"APP_ERROR_HANDLER",APP_WARN_HANDLER:11,"11":"APP_WARN_HANDLER",FUNCTION_REF:12,"12":"FUNCTION_REF",ASYNC_COMPONENT_LOADER:13,"13":"ASYNC_COMPONENT_LOADER",SCHEDULER:14,"14":"SCHEDULER"},Jn={sp:"serverPrefetch hook",bc:"beforeCreate hook",c:"created hook",bm:"beforeMount hook",m:"mounted hook",bu:"beforeUpdate hook",u:"updated",bum:"beforeUnmount hook",um:"unmounted hook",a:"activated hook",da:"deactivated hook",ec:"errorCaptured hook",rtc:"renderTracked hook",rtg:"renderTriggered hook",[0]:"setup function",[1]:"render function",[2]:"watcher getter",[3]:"watcher callback",[4]:"watcher cleanup function",[5]:"native event handler",[6]:"component event handler",[7]:"vnode hook",[8]:"directive hook",[9]:"transition hook",[10]:"app errorHandler",[11]:"app warnHandler",[12]:"ref function",[13]:"async component loader",[14]:"scheduler flush. This is likely a Vue internals bug. Please open an issue at https://github.com/vuejs/core ."};function sn(o,c,g,E){try{return E?o(...E):o()}catch(N){Lr(N,c,g)}}function In(o,c,g,E){if(v.isFunction(o)){var N=sn(o,c,g,E);return N&&v.isPromise(N)&&N.catch(z=>{Lr(z,c,g)}),N}for(var T=[],R=0;R<o.length;R++)T.push(In(o[R],c,g,E));return T}function Lr(o,c,g){var E=arguments.length>3&&arguments[3]!==void 0?arguments[3]:!0,N=c?c.vnode:null;if(c){for(var T=c.parent,R=c.proxy,z=Jn[g]||g;T;){var $=T.ec;if($){for(var X=0;X<$.length;X++)if($[X](o,R,z)===!1)return}T=T.parent}var ye=c.appContext.config.errorHandler;if(ye){sn(ye,null,10,[o,R,z]);return}}Or(o,g,N,E)}function Or(o,c,g){var E=arguments.length>3&&arguments[3]!==void 0?arguments[3]:!0;{var N=Jn[c]||c;if(g&&Ot(g),P("Unhandled error".concat(N?" during execution of ".concat(N):"")),g&&ue(),E)throw o;console.error(o)}}var er=!1,pn=!1,en=[],kn=0,tr=[],xn=null,jn=0,hi=Promise.resolve(),ze=null,ot=100;function Dt(o){var c=ze||hi;return o?c.then(this?o.bind(this):o):c}function cn(o){for(var c=kn+1,g=en.length;c<g;){var E=c+g>>>1,N=en[E],T=Vr(N);T<o||T===o&&N.pre?c=E+1:g=E}return c}function nn(o){(!en.length||!en.includes(o,er&&o.allowRecurse?kn+1:kn))&&(o.id==null?en.push(o):en.splice(cn(o.id),0,o),an())}function an(){!er&&!pn&&(pn=!0,ze=hi.then($a))}function zn(o){var c=en.indexOf(o);c>kn&&en.splice(c,1)}function Fr(o){v.isArray(o)?tr.push(...o):(!xn||!xn.includes(o,o.allowRecurse?jn+1:jn))&&tr.push(o),an()}function nr(o,c){var g=arguments.length>2&&arguments[2]!==void 0?arguments[2]:er?kn+1:0;for(c=c||new Map;g<en.length;g++){var E=en[g];if(E&&E.pre){if(o&&E.id!==o.uid||qo(c,E))continue;en.splice(g,1),g--,E()}}}function qr(o){if(tr.length){var c=[...new Set(tr)].sort((g,E)=>Vr(g)-Vr(E));if(tr.length=0,xn){xn.push(...c);return}for(xn=c,o=o||new Map,jn=0;jn<xn.length;jn++)qo(o,xn[jn])||xn[jn]();xn=null,jn=0}}var Vr=o=>o.id==null?1/0:o.id,Ci=(o,c)=>{var g=Vr(o)-Vr(c);if(g===0){if(o.pre&&!c.pre)return-1;if(c.pre&&!o.pre)return 1}return g};function $a(o){pn=!1,er=!0,o=o||new Map,en.sort(Ci);var c=E=>qo(o,E);try{for(kn=0;kn<en.length;kn++){var g=en[kn];if(g&&g.active!==!1){if(c(g))continue;sn(g,null,14)}}}finally{kn=0,en.length=0,qr(o),er=!1,ze=null,(en.length||tr.length)&&$a(o)}}function qo(o,c){if(!o.has(c))o.set(c,1);else{var g=o.get(c);if(g>ot){var E=c.ownerInstance,N=E&&Ol(E.type);return Lr("Maximum recursive updates exceeded".concat(N?" in component <".concat(N,">"):"",". This means you have a reactive effect that is mutating its own dependencies and thus recursively triggering itself. Possible sources include component template, render function, updated hook or watcher source function."),null,10),!0}else o.set(c,g+1)}}var gi=!1,Tr=new Set;v.getGlobalThis().__VUE_HMR_RUNTIME__={createRecord:Mi(Ji),rerender:Mi(ho),reload:Mi(Zi)};var Pr=new Map;function ur(o){var c=o.type.__hmrId,g=Pr.get(c);g||(Ji(c,o.type),g=Pr.get(c)),g.instances.add(o)}function xo(o){Pr.get(o.type.__hmrId).instances.delete(o)}function Ji(o,c){return Pr.has(o)?!1:(Pr.set(o,{initialDef:Ki(c),instances:new Set}),!0)}function Ki(o){return as(o)?o.__vccOpts:o}function ho(o,c){var g=Pr.get(o);!g||(g.initialDef.render=c,[...g.instances].forEach(E=>{c&&(E.render=c,Ki(E.type).render=c),E.renderCache=[],gi=!0,E.effect.dirty=!0,E.update(),gi=!1}))}function Zi(o,c){var g=Pr.get(o);if(!!g){c=Ki(c),Ca(g.initialDef,c);var E=[...g.instances];for(var N of E){var T=Ki(N.type);Tr.has(T)||(T!==g.initialDef&&Ca(T,c),Tr.add(T)),N.appContext.propsCache.delete(N.type),N.appContext.emitsCache.delete(N.type),N.appContext.optionsCache.delete(N.type),N.ceReload?(Tr.add(T),N.ceReload(c.styles),Tr.delete(T)):N.parent?(N.parent.effect.dirty=!0,nn(N.parent.update)):N.appContext.reload?N.appContext.reload():typeof window!="undefined"?window.location.reload():console.warn("[HMR] Root or manually mounted instance modified. Full reload required.")}Fr(()=>{for(var R of E)Tr.delete(Ki(R.type))})}}function Ca(o,c){v.extend(o,c);for(var g in o)g!=="__file"&&!(g in c)&&delete o[g]}function Mi(o){return(c,g)=>{try{return o(c,g)}catch(E){console.error(E),console.warn("[HMR] Something went wrong during Vue component hot-reload. Full reload required.")}}}var mn,Cn=[],Bi=!1;function or(o){for(var c=arguments.length,g=new Array(c>1?c-1:0),E=1;E<c;E++)g[E-1]=arguments[E];mn?mn.emit(o,...g):Bi||Cn.push({event:o,args:g})}function mi(o,c){var g,E;if(mn=o,mn)mn.enabled=!0,Cn.forEach(T=>{var{event:R,args:z}=T;return mn.emit(R,...z)}),Cn=[];else if(typeof window!="undefined"&&window.HTMLElement&&!((E=(g=window.navigator)==null?void 0:g.userAgent)==null?void 0:E.includes("jsdom"))){var N=c.__VUE_DEVTOOLS_HOOK_REPLAY__=c.__VUE_DEVTOOLS_HOOK_REPLAY__||[];N.push(T=>{mi(T,c)}),setTimeout(()=>{mn||(c.__VUE_DEVTOOLS_HOOK_REPLAY__=null,Bi=!0,Cn=[])},3e3)}else Bi=!0,Cn=[]}function Yo(o,c){or("app:init",o,c,{Fragment:gr,Text:Bn,Comment:Ln,Static:Fn})}function Jo(o){or("app:unmount",o)}var vi=_r("component:added"),Yr=_r("component:updated"),Aa=_r("component:removed"),ri=o=>{mn&&typeof mn.cleanupBuffer=="function"&&!mn.cleanupBuffer(o)&&Aa(o)};function _r(o){return c=>{or(o,c.appContext.app,c.uid,c.parent?c.parent.uid:void 0,c)}}var go=Li("perf:start"),Oa=Li("perf:end");function Li(o){return(c,g,E)=>{or(o,c.appContext.app,c.uid,c,g,E)}}function Ai(o,c,g){or("component:emit",o.appContext.app,o,c,g)}function Ro(o,c){if(!o.isUnmounted){for(var g=o.vnode.props||v.EMPTY_OBJ,E=arguments.length,N=new Array(E>2?E-2:0),T=2;T<E;T++)N[T-2]=arguments[T];{var{emitsOptions:R,propsOptions:[z]}=o;if(R)if(!(c in R))(!z||!(v.toHandlerKey(c)in z))&&P('Component emitted event "'.concat(c,'" but it is neither declared in the emits option nor as an "').concat(v.toHandlerKey(c),'" prop.'));else{var $=R[c];if(v.isFunction($)){var X=$(...N);X||P('Invalid event arguments: event validation failed for event "'.concat(c,'".'))}}}var ye=N,ce=c.startsWith("update:"),ae=ce&&c.slice(7);if(ae&&ae in g){var ke="".concat(ae==="modelValue"?"model":ae,"Modifiers"),{number:Be,trim:Et}=g[ke]||v.EMPTY_OBJ;Et&&(ye=N.map(Ie=>v.isString(Ie)?Ie.trim():Ie)),Be&&(ye=N.map(v.looseToNumber))}Ai(o,c,ye);{var ct=c.toLowerCase();ct!==c&&g[v.toHandlerKey(ct)]&&P('Event "'.concat(ct,'" is emitted in component ').concat(os(o,o.type),' but the handler is registered for "').concat(c,'". Note that HTML attributes are case-insensitive and you cannot use v-on to listen to camelCase events when using in-DOM templates. You should probably use "').concat(v.hyphenate(c),'" instead of "').concat(c,'".'))}var kt,xt=g[kt=v.toHandlerKey(c)]||g[kt=v.toHandlerKey(v.camelize(c))];!xt&&ce&&(xt=g[kt=v.toHandlerKey(v.hyphenate(c))]),xt&&In(xt,o,6,ye);var fe=g[kt+"Once"];if(fe){if(!o.emitted)o.emitted={};else if(o.emitted[kt])return;o.emitted[kt]=!0,In(fe,o,6,ye)}}}function Ko(o,c){var g=arguments.length>2&&arguments[2]!==void 0?arguments[2]:!1,E=c.emitsCache,N=E.get(o);if(N!==void 0)return N;var T=o.emits,R={},z=!1;if(!v.isFunction(o)){var $=X=>{var ye=Ko(X,c,!0);ye&&(z=!0,v.extend(R,ye))};!g&&c.mixins.length&&c.mixins.forEach($),o.extends&&$(o.extends),o.mixins&&o.mixins.forEach($)}return!T&&!z?(v.isObject(o)&&E.set(o,null),null):(v.isArray(T)?T.forEach(X=>R[X]=null):v.extend(R,T),v.isObject(o)&&E.set(o,R),R)}function mo(o,c){return!o||!v.isOn(c)?!1:(c=c.slice(2).replace(/Once$/,""),v.hasOwn(o,c[0].toLowerCase()+c.slice(1))||v.hasOwn(o,v.hyphenate(c))||v.hasOwn(o,c))}var hn=null,An=null;function Jr(o){var c=hn;return hn=o,An=o&&o.type.__scopeId||null,c}function Dn(o){An=o}function ii(){An=null}var Dr=o=>Ht;function Ht(o){var c=arguments.length>1&&arguments[1]!==void 0?arguments[1]:hn;if(!c||o._n)return o;var g=function(){g._d&&ca(-1);var E=Jr(c),N;try{N=o(...arguments)}finally{Jr(E),g._d&&ca(1)}return Yr(c),N};return g._n=!0,g._c=!0,g._d=!0,g}var xe=!1;function Xi(){xe=!0}function tn(o){var{type:c,vnode:g,proxy:E,withProxy:N,props:T,propsOptions:[R],slots:z,attrs:$,emit:X,render:ye,renderCache:ce,data:ae,setupState:ke,ctx:Be,inheritAttrs:Et}=o,ct,kt,xt=Jr(o);xe=!1;try{if(g.shapeFlag&4){var fe=N||E,Ie=ke.__isScriptSetup?new Proxy(fe,{get(M,J,Q){return P("Property '".concat(String(J),"' was accessed via 'this'. Avoid using 'this' in templates.")),Reflect.get(M,J,Q)}}):fe;ct=Ii(ye.call(Ie,fe,ce,T,ke,ae,Be)),kt=$}else{var Ne=c;$===T&&Xi(),ct=Ii(Ne.length>1?Ne(T,{get attrs(){return Xi(),$},slots:z,emit:X}):Ne(T,null)),kt=c.props?$:Oi($)}}catch(M){$i.length=0,Lr(M,o,1),ct=Xn(Ln)}var Xe=ct,lt=void 0;if(ct.patchFlag>0&&ct.patchFlag&2048&&([Xe,lt]=vo(ct)),kt&&Et!==!1){var i=Object.keys(kt),{shapeFlag:s}=Xe;if(i.length){if(s&(1|6))R&&i.some(v.isModelListener)&&(kt=Zo(kt,R)),Xe=Hi(Xe,kt);else if(!xe&&Xe.type!==Ln){for(var d=Object.keys($),m=[],A=[],C=0,x=d.length;C<x;C++){var V=d[C];v.isOn(V)?v.isModelListener(V)||m.push(V[2].toLowerCase()+V.slice(3)):A.push(V)}A.length&&P("Extraneous non-props attributes (".concat(A.join(", "),") were passed to component but could not be automatically inherited because component renders fragment or text root nodes.")),m.length&&P("Extraneous non-emits event listeners (".concat(m.join(", "),') were passed to component but could not be automatically inherited because component renders fragment or text root nodes. If the listener is intended to be a component custom event listener only, declare it using the "emits" option.'))}}}return g.dirs&&(Xo(Xe)||P("Runtime directive used on component with non-element root node. The directives will not function as intended."),Xe=Hi(Xe),Xe.dirs=Xe.dirs?Xe.dirs.concat(g.dirs):g.dirs),g.transition&&(Xo(Xe)||P("Component inside <Transition> renders non-element root node that cannot be animated."),Xe.transition=g.transition),lt?lt(Xe):ct=Xe,Jr(xt),ct}var vo=o=>{var c=o.children,g=o.dynamicChildren,E=oi(c,!1);if(E){if(E.patchFlag>0&&E.patchFlag&2048)return vo(E)}else return[o,void 0];var N=c.indexOf(E),T=g?g.indexOf(E):-1,R=z=>{c[N]=z,g&&(T>-1?g[T]=z:z.patchFlag>0&&(o.dynamicChildren=[...g,z]))};return[Ii(E),R]};function oi(o){for(var c=arguments.length>1&&arguments[1]!==void 0?arguments[1]:!0,g,E=0;E<o.length;E++){var N=o[E];if(To(N)){if(N.type!==Ln||N.children==="v-if"){if(g)return;if(g=N,c&&g.patchFlag>0&&g.patchFlag&2048)return oi(g.children)}}else return}return g}var Oi=o=>{var c;for(var g in o)(g==="class"||g==="style"||v.isOn(g))&&((c||(c={}))[g]=o[g]);return c},Zo=(o,c)=>{var g={};for(var E in o)(!v.isModelListener(E)||!(E.slice(9)in c))&&(g[E]=o[E]);return g},Xo=o=>o.shapeFlag&(6|1)||o.type===Ln;function Ta(o,c,g){var{props:E,children:N,component:T}=o,{props:R,children:z,patchFlag:$}=c,X=T.emitsOptions;if((N||z)&&gi||c.dirs||c.transition)return!0;if(g&&$>=0){if($&1024)return!0;if($&16)return E?Fi(E,R,X):!!R;if($&8)for(var ye=c.dynamicProps,ce=0;ce<ye.length;ce++){var ae=ye[ce];if(R[ae]!==E[ae]&&!mo(X,ae))return!0}}else return(N||z)&&(!z||!z.$stable)?!0:E===R?!1:E?R?Fi(E,R,X):!0:!!R;return!1}function Fi(o,c,g){var E=Object.keys(c);if(E.length!==Object.keys(o).length)return!0;for(var N=0;N<E.length;N++){var T=E[N];if(c[T]!==o[T]&&!mo(g,T))return!0}return!1}function ai(o,c){for(var{vnode:g,parent:E}=o;E;){var N=E.subTree;if(N.suspense&&N.suspense.activeBranch===g&&(N.el=g.el),N===g)(g=E.vnode).el=c,E=E.parent;else break}}var br="components",_o="directives";function ds(o,c){return Wn(br,o,!0,c)||o}var Qo=Symbol.for("v-ndc");function rn(o){return v.isString(o)?Wn(br,o,!1)||o:o||Qo}function yr(o){return Wn(_o,o)}function Wn(o,c){var g=arguments.length>2&&arguments[2]!==void 0?arguments[2]:!0,E=arguments.length>3&&arguments[3]!==void 0?arguments[3]:!1,N=hn||pr;if(N){var T=N.type;if(o===br){var R=Ol(T,!1);if(R&&(R===c||R===v.camelize(c)||R===v.capitalize(v.camelize(c))))return T}var z=Er(N[o]||T[o],c)||Er(N.appContext[o],c);if(!z&&E)return T;if(g&&!z){var $=o===br?`
If this is a native custom element, make sure to exclude it from component resolution via compilerOptions.isCustomElement.`:"";P("Failed to resolve ".concat(o.slice(0,-1),": ").concat(c).concat($))}return z}else P("resolve".concat(v.capitalize(o.slice(0,-1))," can only be used in render() or setup()."))}function Er(o,c){return o&&(o[c]||o[v.camelize(c)]||o[v.capitalize(v.camelize(c))])}var Kr=o=>o.__isSuspense,ea=0,ta={name:"Suspense",__isSuspense:!0,process(o,c,g,E,N,T,R,z,$,X){if(o==null)Bo(c,g,E,N,T,R,z,$,X);else{if(T&&T.deps>0&&!o.suspense.isInFallback){c.suspense=o.suspense,c.suspense.vnode=c,c.el=o.el;return}Ha(o,c,g,E,N,R,z,$,X)}},hydrate:Pa,create:Lo,normalize:hs},ps=ta;function Mo(o,c){var g=o.props&&o.props[c];v.isFunction(g)&&g()}function Bo(o,c,g,E,N,T,R,z,$){var{p:X,o:{createElement:ye}}=$,ce=ye("div"),ae=o.suspense=Lo(o,N,E,c,ce,g,T,R,z,$);X(null,ae.pendingBranch=o.ssContent,ce,null,E,ae,T,R),ae.deps>0?(Mo(o,"onPending"),Mo(o,"onFallback"),X(null,o.ssFallback,c,g,E,null,T,R),U(ae,o.ssFallback)):ae.resolve(!1,!0)}function Ha(o,c,g,E,N,T,R,z,$){var{p:X,um:ye,o:{createElement:ce}}=$,ae=c.suspense=o.suspense;ae.vnode=c,c.el=o.el;var ke=c.ssContent,Be=c.ssFallback,{activeBranch:Et,pendingBranch:ct,isInFallback:kt,isHydrating:xt}=ae;if(ct)ae.pendingBranch=ke,Wr(ke,ct)?(X(ct,ke,ae.hiddenContainer,null,N,ae,T,R,z),ae.deps<=0?ae.resolve():kt&&(xt||(X(Et,Be,g,E,N,null,T,R,z),U(ae,Be)))):(ae.pendingId=ea++,xt?(ae.isHydrating=!1,ae.activeBranch=ct):ye(ct,N,ae),ae.deps=0,ae.effects.length=0,ae.hiddenContainer=ce("div"),kt?(X(null,ke,ae.hiddenContainer,null,N,ae,T,R,z),ae.deps<=0?ae.resolve():(X(Et,Be,g,E,N,null,T,R,z),U(ae,Be))):Et&&Wr(ke,Et)?(X(Et,ke,g,E,N,ae,T,R,z),ae.resolve(!0)):(X(null,ke,ae.hiddenContainer,null,N,ae,T,R,z),ae.deps<=0&&ae.resolve()));else if(Et&&Wr(ke,Et))X(Et,ke,g,E,N,ae,T,R,z),U(ae,ke);else if(Mo(c,"onPending"),ae.pendingBranch=ke,ke.shapeFlag&512?ae.pendingId=ke.component.suspenseId:ae.pendingId=ea++,X(null,ke,ae.hiddenContainer,null,N,ae,T,R,z),ae.deps<=0)ae.resolve();else{var{timeout:fe,pendingId:Ie}=ae;fe>0?setTimeout(()=>{ae.pendingId===Ie&&ae.fallback(Be)},fe):fe===0&&ae.fallback(Be)}}var ja=!1;function Lo(o,c,g,E,N,T,R,z,$,X){var ye=arguments.length>10&&arguments[10]!==void 0?arguments[10]:!1;ja||(ja=!0,console[console.info?"info":"log"]("<Suspense> is an experimental feature and its API will likely change."));var{p:ce,m:ae,um:ke,n:Be,o:{parentNode:Et,remove:ct}}=X,kt,xt=q(o);xt&&(c==null?void 0:c.pendingBranch)&&(kt=c.pendingId,c.deps++);var fe=o.props?v.toNumber(o.props.timeout):void 0;dn(fe,"Suspense timeout");var Ie=T,Ne={vnode:o,parent:c,parentComponent:g,namespace:R,container:E,hiddenContainer:N,deps:0,pendingId:ea++,timeout:typeof fe=="number"?fe:-1,activeBranch:null,pendingBranch:null,isInFallback:!ye,isHydrating:ye,isUnmounted:!1,effects:[],resolve(){var Xe=arguments.length>0&&arguments[0]!==void 0?arguments[0]:!1,lt=arguments.length>1&&arguments[1]!==void 0?arguments[1]:!1;{if(!Xe&&!Ne.pendingBranch)throw new Error("suspense.resolve() is called without a pending branch.");if(Ne.isUnmounted)throw new Error("suspense.resolve() is called on an already unmounted suspense boundary.")}var{vnode:i,activeBranch:s,pendingBranch:d,pendingId:m,effects:A,parentComponent:C,container:x}=Ne,V=!1;Ne.isHydrating?Ne.isHydrating=!1:Xe||(V=s&&d.transition&&d.transition.mode==="out-in",V&&(s.transition.afterLeave=()=>{m===Ne.pendingId&&(ae(d,x,T===Ie?Be(s):T,0),Fr(A))}),s&&(Et(s.el)!==Ne.hiddenContainer&&(T=Be(s)),ke(s,C,Ne,!0)),V||ae(d,x,T,0)),U(Ne,d),Ne.pendingBranch=null,Ne.isInFallback=!1;for(var M=Ne.parent,J=!1;M;){if(M.pendingBranch){M.effects.push(...A),J=!0;break}M=M.parent}!J&&!V&&Fr(A),Ne.effects=[],xt&&c&&c.pendingBranch&&kt===c.pendingId&&(c.deps--,c.deps===0&&!lt&&c.resolve()),Mo(i,"onResolve")},fallback(Xe){if(!!Ne.pendingBranch){var{vnode:lt,activeBranch:i,parentComponent:s,container:d,namespace:m}=Ne;Mo(lt,"onFallback");var A=Be(i),C=()=>{!Ne.isInFallback||(ce(null,Xe,d,A,s,null,m,z,$),U(Ne,Xe))},x=Xe.transition&&Xe.transition.mode==="out-in";x&&(i.transition.afterLeave=C),Ne.isInFallback=!0,ke(i,s,null,!0),x||C()}},move(Xe,lt,i){Ne.activeBranch&&ae(Ne.activeBranch,Xe,lt,i),Ne.container=Xe},next(){return Ne.activeBranch&&Be(Ne.activeBranch)},registerDep(Xe,lt){var i=!!Ne.pendingBranch;i&&Ne.deps++;var s=Xe.vnode.el;Xe.asyncDep.catch(d=>{Lr(d,Xe,0)}).then(d=>{if(!(Xe.isUnmounted||Ne.isUnmounted||Ne.pendingId!==Xe.suspenseId)){Xe.asyncResolved=!0;var{vnode:m}=Xe;Ot(m),pa(Xe,d,!1),s&&(m.el=s);var A=!s&&Xe.subTree.el;lt(Xe,m,Et(s||Xe.subTree.el),s?null:Be(Xe.subTree),Ne,R,$),A&&ct(A),ai(Xe,m.el),ue(),i&&--Ne.deps===0&&Ne.resolve()}})},unmount(Xe,lt){Ne.isUnmounted=!0,Ne.activeBranch&&ke(Ne.activeBranch,g,Xe,lt),Ne.pendingBranch&&ke(Ne.pendingBranch,g,Xe,lt)}};return Ne}function Pa(o,c,g,E,N,T,R,z,$){var X=c.suspense=Lo(c,E,g,o.parentNode,a.createElement("div"),null,N,T,R,z,!0),ye=$(o,X.pendingBranch=c.ssContent,g,X,T,R);return X.deps===0&&X.resolve(!1,!0),ye}function hs(o){var{shapeFlag:c,children:g}=o,E=c&32;o.ssContent=na(E?g.default:g),o.ssFallback=E?na(g.fallback):Xn(Ln)}function na(o){var c;if(v.isFunction(o)){var g=la&&o._c;g&&(o._d=!1,Qr()),o=o(),g&&(o._d=!0,c=zr,Xs())}if(v.isArray(o)){var E=oi(o);!E&&o.filter(N=>N!==Qo).length>0&&P("<Suspense> slots expect a single root node."),o=E}return o=Ii(o),c&&!o.dynamicChildren&&(o.dynamicChildren=c.filter(N=>N!==o)),o}function Fo(o,c){c&&c.pendingBranch?v.isArray(o)?c.effects.push(...o):c.effects.push(o):Fr(o)}function U(o,c){o.activeBranch=c;for(var{vnode:g,parentComponent:E}=o,N=c.el;!N&&c.component;)c=c.component.subTree,N=c.el;g.el=N,E&&E.subTree===g&&(E.vnode.el=N,ai(E,N))}function q(o){var c;return((c=o.props)==null?void 0:c.suspensible)!=null&&o.props.suspensible!==!1}var pe=Symbol.for("v-scx"),Ze=()=>{{var o=Gn(pe);return o||P("Server rendering context not provided. Make sure to only call useSSRContext() conditionally in the server build."),o}};function Je(o,c){return $r(o,null,c)}function mt(o,c){return $r(o,null,v.extend({},c,{flush:"post"}))}function et(o,c){return $r(o,null,v.extend({},c,{flush:"sync"}))}var st={};function fr(o,c,g){return v.isFunction(c)||P("`watch(fn, options?)` signature has been moved to a separate API. Use `watchEffect(fn, options?)` instead. `watch` now only supports `watch(source, cb, options?) signature."),$r(o,c,g)}function $r(o,c){var{immediate:g,deep:E,flush:N,once:T,onTrack:R,onTrigger:z}=arguments.length>2&&arguments[2]!==void 0?arguments[2]:v.EMPTY_OBJ;if(c&&T){var $=c;c=function(){$(...arguments),s()}}E!==void 0&&typeof E=="number"&&P('watch() "deep" option with number value will be used as watch depth in future versions. Please use a boolean instead to avoid potential breakage.'),c||(g!==void 0&&P('watch() "immediate" option is only respected when using the watch(source, callback, options?) signature.'),E!==void 0&&P('watch() "deep" option is only respected when using the watch(source, callback, options?) signature.'),T!==void 0&&P('watch() "once" option is only respected when using the watch(source, callback, options?) signature.'));var X=d=>{P("Invalid watch source: ",d,"A watch source can only be a getter/effect function, a ref, a reactive object, or an array of these types.")},ye=pr,ce=d=>E===!0?d:_i(d,E===!1?1:void 0),ae,ke=!1,Be=!1;if(k.isRef(o)?(ae=()=>o.value,ke=k.isShallow(o)):k.isReactive(o)?(ae=()=>ce(o),ke=!0):v.isArray(o)?(Be=!0,ke=o.some(d=>k.isReactive(d)||k.isShallow(d)),ae=()=>o.map(d=>{if(k.isRef(d))return d.value;if(k.isReactive(d))return ce(d);if(v.isFunction(d))return sn(d,ye,2);X(d)})):v.isFunction(o)?c?ae=()=>sn(o,ye,2):ae=()=>(ct&&ct(),In(o,ye,3,[kt])):(ae=v.NOOP,X(o)),c&&E){var Et=ae;ae=()=>_i(Et())}var ct,kt=d=>{ct=lt.onStop=()=>{sn(d,ye,4),ct=lt.onStop=void 0}},xt;if(h.isInSSRComponentSetup)if(kt=v.NOOP,c?g&&In(c,ye,3,[ae(),Be?[]:void 0,kt]):ae(),N==="sync"){var fe=Ze();xt=fe.__watcherHandles||(fe.__watcherHandles=[])}else return v.NOOP;var Ie=Be?new Array(o.length).fill(st):st,Ne=()=>{if(!(!lt.active||!lt.dirty))if(c){var d=lt.run();(E||ke||(Be?d.some((m,A)=>v.hasChanged(m,Ie[A])):v.hasChanged(d,Ie)))&&(ct&&ct(),In(c,ye,3,[d,Ie===st?void 0:Be&&Ie[0]===st?[]:Ie,kt]),Ie=d)}else lt.run()};Ne.allowRecurse=!!c;var Xe;N==="sync"?Xe=Ne:N==="post"?Xe=()=>jr(Ne,ye&&ye.suspense):(Ne.pre=!0,ye&&(Ne.id=ye.uid),Xe=()=>nn(Ne));var lt=new k.ReactiveEffect(ae,v.NOOP,Xe),i=k.getCurrentScope(),s=()=>{lt.stop(),i&&v.remove(i.effects,lt)};return lt.onTrack=R,lt.onTrigger=z,c?g?Ne():Ie=lt.run():N==="post"?jr(lt.run.bind(lt),ye&&ye.suspense):lt.run(),xt&&xt.push(s),s}function Hr(o,c,g){var E=this.proxy,N=v.isString(o)?o.includes(".")?Qi(E,o):()=>E[o]:o.bind(E,E),T;v.isFunction(c)?T=c:(T=c.handler,g=c);var R=Gr(this),z=$r(N,T.bind(E),g);return R(),z}function Qi(o,c){var g=c.split(".");return()=>{for(var E=o,N=0;N<g.length&&E;N++)E=E[g[N]];return E}}function _i(o,c){var g=arguments.length>2&&arguments[2]!==void 0?arguments[2]:0,E=arguments.length>3?arguments[3]:void 0;if(!v.isObject(o)||o.__v_skip)return o;if(c&&c>0){if(g>=c)return o;g++}if(E=E||new Set,E.has(o))return o;if(E.add(o),k.isRef(o))_i(o.value,c,g,E);else if(v.isArray(o))for(var N=0;N<o.length;N++)_i(o[N],c,g,E);else if(v.isSet(o)||v.isMap(o))o.forEach(R=>{_i(R,c,g,E)});else if(v.isPlainObject(o))for(var T in o)_i(o[T],c,g,E);return o}function eo(o){v.isBuiltInDirective(o)&&P("Do not use built-in directive ids as custom directive id: "+o)}function gs(o,c){if(hn===null)return P("withDirectives can only be used inside render functions."),o;for(var g=is(hn)||hn.proxy,E=o.dirs||(o.dirs=[]),N=0;N<c.length;N++){var[T,R,z,$=v.EMPTY_OBJ]=c[N];T&&(v.isFunction(T)&&(T={mounted:T,updated:T}),T.deep&&_i(R),E.push({dir:T,instance:g,value:R,oldValue:void 0,arg:z,modifiers:$}))}return o}function Di(o,c,g,E){for(var N=o.dirs,T=c&&c.dirs,R=0;R<N.length;R++){var z=N[R];T&&(z.oldValue=T[R].value);var $=z.dir[E];$&&(k.pauseTracking(),In($,g,8,[o.el,z,o,c]),k.resetTracking())}}var Sr=Symbol("_leaveCb"),si=Symbol("_enterCb");function Na(){var o={isMounted:!1,isLeaving:!1,isUnmounting:!1,leavingVNodes:new Map};return xa(()=>{o.isMounted=!0}),Uo(()=>{o.isUnmounting=!0}),o}var le=[Function,Array],K={mode:String,appear:Boolean,persisted:Boolean,onBeforeEnter:le,onEnter:le,onAfterEnter:le,onEnterCancelled:le,onBeforeLeave:le,onLeave:le,onAfterLeave:le,onLeaveCancelled:le,onBeforeAppear:le,onAppear:le,onAfterAppear:le,onAppearCancelled:le},de={name:"BaseTransition",props:K,setup(o,c){var{slots:g}=c,E=Pn(),N=Na();return()=>{var T=g.default&&dr(g.default(),!0);if(!(!T||!T.length)){var R=T[0];if(T.length>1){var z=!1;for(var $ of T)if($.type!==Ln){if(z){P("<transition> can only be used on a single element or component. Use <transition-group> for lists.");break}R=$,z=!0}}var X=k.toRaw(o),{mode:ye}=X;if(ye&&ye!=="in-out"&&ye!=="out-in"&&ye!=="default"&&P("invalid <transition> mode: ".concat(ye)),N.isLeaving)return Kn(R);var ce=vn(R);if(!ce)return Kn(R);var ae=on(ce,X,N,E);Un(ce,ae);var ke=E.subTree,Be=ke&&vn(ke);if(Be&&Be.type!==Ln&&!Wr(ce,Be)){var Et=on(Be,X,N,E);if(Un(Be,Et),ye==="out-in")return N.isLeaving=!0,Et.afterLeave=()=>{N.isLeaving=!1,E.update.active!==!1&&(E.effect.dirty=!0,E.update())},Kn(R);ye==="in-out"&&ce.type!==Ln&&(Et.delayLeave=(ct,kt,xt)=>{var fe=ft(N,Be);fe[String(Be.key)]=Be,ct[Sr]=()=>{kt(),ct[Sr]=void 0,delete ae.delayedLeave},ae.delayedLeave=xt})}return R}}}},Ve=de;function ft(o,c){var{leavingVNodes:g}=o,E=g.get(c.type);return E||(E=Object.create(null),g.set(c.type,E)),E}function on(o,c,g,E){var{appear:N,mode:T,persisted:R=!1,onBeforeEnter:z,onEnter:$,onAfterEnter:X,onEnterCancelled:ye,onBeforeLeave:ce,onLeave:ae,onAfterLeave:ke,onLeaveCancelled:Be,onBeforeAppear:Et,onAppear:ct,onAfterAppear:kt,onAppearCancelled:xt}=c,fe=String(o.key),Ie=ft(g,o),Ne=(i,s)=>{i&&In(i,E,9,s)},Xe=(i,s)=>{var d=s[1];Ne(i,s),v.isArray(i)?i.every(m=>m.length<=1)&&d():i.length<=1&&d()},lt={mode:T,persisted:R,beforeEnter(i){var s=z;if(!g.isMounted)if(N)s=Et||z;else return;i[Sr]&&i[Sr](!0);var d=Ie[fe];d&&Wr(o,d)&&d.el[Sr]&&d.el[Sr](),Ne(s,[i])},enter(i){var s=$,d=X,m=ye;if(!g.isMounted)if(N)s=ct||$,d=kt||X,m=xt||ye;else return;var A=!1,C=i[si]=x=>{A||(A=!0,x?Ne(m,[i]):Ne(d,[i]),lt.delayedLeave&&lt.delayedLeave(),i[si]=void 0)};s?Xe(s,[i,C]):C()},leave(i,s){var d=String(o.key);if(i[si]&&i[si](!0),g.isUnmounting)return s();Ne(ce,[i]);var m=!1,A=i[Sr]=C=>{m||(m=!0,s(),C?Ne(Be,[i]):Ne(ke,[i]),i[Sr]=void 0,Ie[d]===o&&delete Ie[d])};Ie[d]=o,ae?Xe(ae,[i,A]):A()},clone(i){return on(i,c,g,E)}};return lt}function Kn(o){if(yo(o))return o=Hi(o),o.children=null,o}function vn(o){return yo(o)?o.component?o.component.subTree:o.children?o.children[0]:void 0:o}function Un(o,c){o.shapeFlag&6&&o.component?Un(o.component.subTree,c):o.shapeFlag&128?(o.ssContent.transition=c.clone(o.ssContent),o.ssFallback.transition=c.clone(o.ssFallback)):o.transition=c}function dr(o){for(var c=arguments.length>1&&arguments[1]!==void 0?arguments[1]:!1,g=arguments.length>2?arguments[2]:void 0,E=[],N=0,T=0;T<o.length;T++){var R=o[T],z=g==null?R.key:String(g)+String(R.key!=null?R.key:T);R.type===gr?(R.patchFlag&128&&N++,E=E.concat(dr(R.children,c,z))):(c||R.type!==Ln)&&E.push(z!=null?Hi(R,{key:z}):R)}if(N>1)for(var $=0;$<E.length;$++)E[$].patchFlag=-2;return E}function to(o,c){return v.isFunction(o)?(()=>v.extend({name:o.name},c,{setup:o}))():o}var Zn=o=>!!o.type.__asyncLoader;function bo(o){v.isFunction(o)&&(o={loader:o});var{loader:c,loadingComponent:g,errorComponent:E,delay:N=200,timeout:T,suspensible:R=!0,onError:z}=o,$=null,X,ye=0,ce=()=>(ye++,$=null,ae()),ae=()=>{var ke;return $||(ke=$=c().catch(Be=>{if(Be=Be instanceof Error?Be:new Error(String(Be)),z)return new Promise((Et,ct)=>{var kt=()=>Et(ce()),xt=()=>ct(Be);z(Be,kt,xt,ye+1)});throw Be}).then(Be=>{if(ke!==$&&$)return $;if(Be||P("Async component loader resolved to undefined. If you are using retry(), make sure to return its return value."),Be&&(Be.__esModule||Be[Symbol.toStringTag]==="Module")&&(Be=Be.default),Be&&!v.isObject(Be)&&!v.isFunction(Be))throw new Error("Invalid async component load result: ".concat(Be));return X=Be,Be}))};return to({name:"AsyncComponentWrapper",__asyncLoader:ae,get __asyncResolved(){return X},setup(){var ke=pr;if(X)return()=>Ia(X,ke);var Be=xt=>{$=null,Lr(xt,ke,13,!E)};if(R&&ke.suspense||h.isInSSRComponentSetup)return ae().then(xt=>()=>Ia(xt,ke)).catch(xt=>(Be(xt),()=>E?Xn(E,{error:xt}):null));var Et=k.ref(!1),ct=k.ref(),kt=k.ref(!!N);return N&&setTimeout(()=>{kt.value=!1},N),T!=null&&setTimeout(()=>{if(!Et.value&&!ct.value){var xt=new Error("Async component timed out after ".concat(T,"ms."));Be(xt),ct.value=xt}},T),ae().then(()=>{Et.value=!0,ke.parent&&yo(ke.parent.vnode)&&(ke.parent.effect.dirty=!0,nn(ke.parent.update))}).catch(xt=>{Be(xt),ct.value=xt}),()=>{if(Et.value&&X)return Ia(X,ke);if(ct.value&&E)return Xn(E,{error:ct.value});if(g&&!kt.value)return Xn(g)}}})}function Ia(o,c){var{ref:g,props:E,children:N,ce:T}=c.vnode,R=Xn(o,E,N);return R.ref=g,R.ce=T,delete c.vnode.ce,R}var yo=o=>o.type.__isKeepAlive,Do={name:"KeepAlive",__isKeepAlive:!0,props:{include:[String,RegExp,Array],exclude:[String,RegExp,Array],max:[String,Number]},setup(o,c){var{slots:g}=c,E=Pn(),N=E.ctx;if(!N.renderer)return()=>{var fe=g.default&&g.default();return fe&&fe.length===1?fe[0]:fe};var T=new Map,R=new Set,z=null;E.__v_cache=T;var $=E.suspense,{renderer:{p:X,m:ye,um:ce,o:{createElement:ae}}}=N,ke=ae("div");N.activate=(fe,Ie,Ne,Xe,lt)=>{var i=fe.component;ye(fe,Ie,Ne,0,$),X(i.vnode,fe,Ie,Ne,i,$,Xe,fe.slotScopeIds,lt),jr(()=>{i.isDeactivated=!1,i.a&&v.invokeArrayFns(i.a);var s=fe.props&&fe.props.onVnodeMounted;s&&ki(s,i.parent,fe)},$),vi(i)},N.deactivate=fe=>{var Ie=fe.component;ye(fe,ke,null,1,$),jr(()=>{Ie.da&&v.invokeArrayFns(Ie.da);var Ne=fe.props&&fe.props.onVnodeUnmounted;Ne&&ki(Ne,Ie.parent,fe),Ie.isDeactivated=!0},$),vi(Ie)};function Be(fe){za(fe),ce(fe,E,$,!0)}function Et(fe){T.forEach((Ie,Ne)=>{var Xe=Ol(Ie.type);Xe&&(!fe||!fe(Xe))&&ct(Ne)})}function ct(fe){var Ie=T.get(fe);!z||!Wr(Ie,z)?Be(Ie):z&&za(z),T.delete(fe),R.delete(fe)}fr(()=>[o.include,o.exclude],fe=>{var[Ie,Ne]=fe;Ie&&Et(Xe=>ra(Ie,Xe)),Ne&&Et(Xe=>!ra(Ne,Xe))},{flush:"post",deep:!0});var kt=null,xt=()=>{kt!=null&&T.set(kt,Ti(E.subTree))};return xa(xt),Wa(xt),Uo(()=>{T.forEach(fe=>{var{subTree:Ie,suspense:Ne}=E,Xe=Ti(Ie);if(fe.type===Xe.type&&fe.key===Xe.key){za(Xe);var lt=Xe.component.da;lt&&jr(lt,Ne);return}Be(fe)})}),()=>{if(kt=null,!g.default)return null;var fe=g.default(),Ie=fe[0];if(fe.length>1)return P("KeepAlive should contain exactly one component child."),z=null,fe;if(!To(Ie)||!(Ie.shapeFlag&4)&&!(Ie.shapeFlag&128))return z=null,Ie;var Ne=Ti(Ie),Xe=Ne.type,lt=Ol(Zn(Ne)?Ne.type.__asyncResolved||{}:Xe),{include:i,exclude:s,max:d}=o;if(i&&(!lt||!ra(i,lt))||s&&lt&&ra(s,lt))return z=Ne,Ie;var m=Ne.key==null?Xe:Ne.key,A=T.get(m);return Ne.el&&(Ne=Hi(Ne),Ie.shapeFlag&128&&(Ie.ssContent=Ne)),kt=m,A?(Ne.el=A.el,Ne.component=A.component,Ne.transition&&Un(Ne,Ne.transition),Ne.shapeFlag|=512,R.delete(m),R.add(m)):(R.add(m),d&&R.size>parseInt(d,10)&&ct(R.values().next().value)),Ne.shapeFlag|=256,z=Ne,Kr(Ie.type)?Ie:Ne}}},Bl=Do;function ra(o,c){return v.isArray(o)?o.some(g=>ra(g,c)):v.isString(o)?o.split(",").includes(c):v.isRegExp(o)?o.test(c):!1}function ka(o,c){rr(o,"a",c)}function gl(o,c){rr(o,"da",c)}function rr(o,c){var g=arguments.length>2&&arguments[2]!==void 0?arguments[2]:pr,E=o.__wdc||(o.__wdc=()=>{for(var T=g;T;){if(T.isDeactivated)return;T=T.parent}return o()});if(ia(c,E,g),g)for(var N=g.parent;N&&N.parent;)yo(N.parent.vnode)&&Ll(E,c,g,N),N=N.parent}function Ll(o,c,g,E){var N=ia(c,o,E,!0);Vo(()=>{v.remove(E[c],N)},g)}function za(o){o.shapeFlag&=~256,o.shapeFlag&=~512}function Ti(o){return o.shapeFlag&128?o.ssContent:o}function ia(o,c){var g=arguments.length>2&&arguments[2]!==void 0?arguments[2]:pr,E=arguments.length>3&&arguments[3]!==void 0?arguments[3]:!1;if(g){if(Oe.isRootHook(o)&&g!==g.root&&(g=g.root,Oe.isRootImmediateHook(o))){var N=g.proxy;In(c.bind(N),g,o,Oe.ON_LOAD===o?[N.$page.options]:[])}var T=g[o]||(g[o]=[]),R=c.__weh||(c.__weh=function(){if(!g.isUnmounted){k.pauseTracking();for(var $=Gr(g),X=arguments.length,ye=new Array(X),ce=0;ce<X;ce++)ye[ce]=arguments[ce];var ae=In(c,g,o,ye);return $(),k.resetTracking(),ae}});return E?T.unshift(R):T.push(R),R}else{var z=v.toHandlerKey((Jn[o]||o.replace(/^on/,"")).replace(/ hook$/,""));P("".concat(z," is called when there is no active component instance to be associated with. Lifecycle injection APIs can only be used during execution of setup().")+" If you are using async setup(), make sure to register lifecycle hooks before the first await statement.")}}var Pi=o=>function(c){var g=arguments.length>1&&arguments[1]!==void 0?arguments[1]:pr;return(!h.isInSSRComponentSetup||o==="sp")&&ia(o,function(){return c(...arguments)},g)},wr=Pi("bm"),xa=Pi("m"),no=Pi("bu"),Wa=Pi("u"),Uo=Pi("bum"),Vo=Pi("um"),Ga=Pi("sp"),ms=Pi("rtg"),qa=Pi("rtc");function ml(o){var c=arguments.length>1&&arguments[1]!==void 0?arguments[1]:pr;ia("ec",o,c)}function Fl(o,c,g,E){var N,T=g&&g[E];if(v.isArray(o)||v.isString(o)){N=new Array(o.length);for(var R=0,z=o.length;R<z;R++)N[R]=c(o[R],R,void 0,T&&T[R])}else if(typeof o=="number"){Number.isInteger(o)||P("The v-for range expect an integer value but got ".concat(o,".")),N=new Array(o);for(var $=0;$<o;$++)N[$]=c($+1,$,void 0,T&&T[$])}else if(v.isObject(o))if(o[Symbol.iterator])N=Array.from(o,(ke,Be)=>c(ke,Be,void 0,T&&T[Be]));else{var X=Object.keys(o);N=new Array(X.length);for(var ye=0,ce=X.length;ye<ce;ye++){var ae=X[ye];N[ye]=c(o[ae],ae,ye,T&&T[ye])}}else N=[];return g&&(g[E]=N),N}function Eo(o,c){for(var g=function(N){var T=c[N];if(v.isArray(T))for(var R=0;R<T.length;R++)o[T[R].name]=T[R].fn;else T&&(o[T.name]=T.key?function(){var z=T.fn(...arguments);return z&&(z.key=T.key),z}:T.fn)},E=0;E<c.length;E++)g(E);return o}function hc(o,c){var g=arguments.length>2&&arguments[2]!==void 0?arguments[2]:{},E=arguments.length>3?arguments[3]:void 0,N=arguments.length>4?arguments[4]:void 0;if(hn.isCE||hn.parent&&Zn(hn.parent)&&hn.parent.isCE)return c!=="default"&&(g.name=c),Xn("slot",g,E&&E());var T=o[c];T&&T.length>1&&(P("SSR-optimized slot function detected in a non-SSR-optimized render function. You need to mark this component with $dynamic-slots in the parent template."),T=()=>[]),T&&T._c&&(T._d=!1),Qr();var R=T&&vl(T(g)),z=Oo(gr,{key:g.key||R&&R.key||"_".concat(c)},R||(E?E():[]),R&&o._===1?64:-2);return!N&&z.scopeId&&(z.slotScopeIds=[z.scopeId+"-s"]),T&&T._c&&(T._d=!0),z}function vl(o){return o.some(c=>To(c)?!(c.type===Ln||c.type===gr&&!vl(c.children)):!0)?o:null}function $s(o,c){var g={};if(!v.isObject(o))return P("v-on with no argument expects an object value."),g;for(var E in o)g[c&&/[A-Z]/.test(E)?"on:".concat(E):v.toHandlerKey(E)]=o[E];return g}var Hs=o=>o?da(o)?is(o)||o.proxy:Hs(o.parent):null,$o=v.extend(Object.create(null),{$:o=>o,$el:o=>o.vnode.el,$data:o=>o.data,$props:o=>k.shallowReadonly(o.props),$attrs:o=>k.shallowReadonly(o.attrs),$slots:o=>k.shallowReadonly(o.slots),$refs:o=>k.shallowReadonly(o.refs),$parent:o=>Hs(o.parent),$root:o=>Hs(o.root),$emit:o=>o.emit,$options:o=>ir(o),$forceUpdate:o=>o.f||(o.f=()=>{o.effect.dirty=!0,nn(o.update)}),$nextTick:o=>o.n||(o.n=Dt.bind(o.proxy)),$watch:o=>Hr.bind(o)}),ro=o=>o==="_"||o==="$",So=(o,c)=>o!==v.EMPTY_OBJ&&!o.__isScriptSetup&&v.hasOwn(o,c),wo={get(o,c){var{_:g}=o,{ctx:E,setupState:N,data:T,props:R,accessCache:z,type:$,appContext:X}=g;if(c==="__isVue")return!0;var ye;if(c[0]!=="$"){var ce=z[c];if(ce!==void 0)switch(ce){case 1:return N[c];case 2:return T[c];case 4:return E[c];case 3:return R[c]}else{if(So(N,c))return z[c]=1,N[c];if(T!==v.EMPTY_OBJ&&v.hasOwn(T,c))return z[c]=2,T[c];if((ye=g.propsOptions[0])&&v.hasOwn(ye,c))return z[c]=3,R[c];if(E!==v.EMPTY_OBJ&&v.hasOwn(E,c))return z[c]=4,E[c];_n&&(z[c]=0)}}var ae=$o[c],ke,Be;if(ae)return c==="$attrs"?(k.track(g,"get",c),Xi()):c==="$slots"&&k.track(g,"get",c),ae(g);if((ke=$.__cssModules)&&(ke=ke[c]))return ke;if(E!==v.EMPTY_OBJ&&v.hasOwn(E,c))return z[c]=4,E[c];if(Be=X.config.globalProperties,v.hasOwn(Be,c))return Be[c];hn&&(!v.isString(c)||c.indexOf("__v")!==0)&&(T!==v.EMPTY_OBJ&&ro(c[0])&&v.hasOwn(T,c)?P("Property ".concat(JSON.stringify(c),' must be accessed via $data because it starts with a reserved character ("$" or "_") and is not proxied on the render context.')):g===hn&&P("Property ".concat(JSON.stringify(c)," was accessed during render but is not defined on instance.")))},set(o,c,g){var{_:E}=o,{data:N,setupState:T,ctx:R}=E;return So(T,c)?(T[c]=g,!0):T.__isScriptSetup&&v.hasOwn(T,c)?(P('Cannot mutate <script setup> binding "'.concat(c,'" from Options API.')),!1):N!==v.EMPTY_OBJ&&v.hasOwn(N,c)?(N[c]=g,!0):v.hasOwn(E.props,c)?(P('Attempting to mutate prop "'.concat(c,'". Props are readonly.')),!1):c[0]==="$"&&c.slice(1)in E?(P('Attempting to mutate public property "'.concat(c,'". Properties starting with $ are reserved and readonly.')),!1):(c in E.appContext.config.globalProperties?Object.defineProperty(R,c,{enumerable:!0,configurable:!0,value:g}):R[c]=g,!0)},has(o,c){var{_:{data:g,setupState:E,accessCache:N,ctx:T,appContext:R,propsOptions:z}}=o,$;return!!N[c]||g!==v.EMPTY_OBJ&&v.hasOwn(g,c)||So(E,c)||($=z[0])&&v.hasOwn($,c)||v.hasOwn(T,c)||v.hasOwn($o,c)||v.hasOwn(R.config.globalProperties,c)},defineProperty(o,c,g){return g.get!=null?o._.accessCache[c]=0:v.hasOwn(g,"value")&&this.set(o,c,g.value,null),Reflect.defineProperty(o,c,g)}};wo.ownKeys=o=>(P("Avoid app logic that relies on enumerating keys on a component instance. The keys will be empty in production mode to avoid performance overhead."),Reflect.ownKeys(o));var vs=v.extend({},wo,{get(o,c){if(c!==Symbol.unscopables)return wo.get(o,c,o)},has(o,c){var g=c[0]!=="_"&&!v.isGloballyAllowed(c);return!g&&wo.has(o,c)&&P("Property ".concat(JSON.stringify(c)," should not start with _ which is a reserved prefix for Vue internals.")),g}});function Dl(o){var c={};return Object.defineProperty(c,"_",{configurable:!0,enumerable:!1,get:()=>o}),Object.keys($o).forEach(g=>{Object.defineProperty(c,g,{configurable:!0,enumerable:!1,get:()=>$o[g](o),set:v.NOOP})}),c}function Gc(o){var{ctx:c,propsOptions:[g]}=o;g&&Object.keys(g).forEach(E=>{Object.defineProperty(c,E,{enumerable:!0,configurable:!0,get:()=>o.props[E],set:v.NOOP})})}function S(o){var{ctx:c,setupState:g}=o;Object.keys(k.toRaw(g)).forEach(E=>{if(!g.__isScriptSetup){if(ro(E[0])){P("setup() return property ".concat(JSON.stringify(E),' should not start with "$" or "_" which are reserved prefixes for Vue internals.'));return}Object.defineProperty(c,E,{enumerable:!0,configurable:!0,get:()=>g[E],set:v.NOOP})}})}var F=o=>P("".concat(o,"() is a compiler-hint helper that is only usable inside <script setup> of a single file component. Its arguments should be compiled away and passing it at runtime has no effect."));function W(){return F("defineProps"),null}function H(){return F("defineEmits"),null}function ne(o){F("defineExpose")}function ie(o){F("defineOptions")}function ge(){return F("defineSlots"),null}function we(){F("defineModel")}function Me(o,c){return F("withDefaults"),null}function $e(){return De().slots}function Ee(){return De().attrs}function De(){var o=Pn();return o||P("useContext() called without active instance."),o.setupContext||(o.setupContext=Jc(o))}function ht(o){return v.isArray(o)?o.reduce((c,g)=>(c[g]=null,c),{}):o}function Tt(o,c){var g=ht(o);for(var E in c)if(!E.startsWith("__skip")){var N=g[E];N?v.isArray(N)||v.isFunction(N)?N=g[E]={type:N,default:c[E]}:N.default=c[E]:N===null?N=g[E]={default:c[E]}:P('props default key "'.concat(E,'" has no corresponding declaration.')),N&&c["__skip_".concat(E)]&&(N.skipFactory=!0)}return g}function Rt(o,c){return!o||!c?o||c:v.isArray(o)&&v.isArray(c)?o.concat(c):v.extend({},ht(o),ht(c))}function yt(o,c){var g={},E=function(T){c.includes(T)||Object.defineProperty(g,T,{enumerable:!0,get:()=>o[T]})};for(var N in o)E(N);return g}function vt(o){var c=Pn();c||P("withAsyncContext called without active current instance. This is likely a bug.");var g=o();return ua(),v.isPromise(g)&&(g=g.catch(E=>{throw Gr(c),E})),[g,()=>Gr(c)]}function Ut(){var o=Object.create(null);return(c,g)=>{o[g]?P("".concat(c,' property "').concat(g,'" is already defined in ').concat(o[g],".")):o[g]=c}}var _n=!0;function Rn(o){var c=ir(o),g=o.proxy,E=o.ctx;_n=!1,c.beforeCreate&&ln(c.beforeCreate,o,"bc");var{data:N,computed:T,methods:R,watch:z,provide:$,inject:X,created:ye,beforeMount:ce,mounted:ae,beforeUpdate:ke,updated:Be,activated:Et,deactivated:ct,beforeDestroy:kt,beforeUnmount:xt,destroyed:fe,unmounted:Ie,render:Ne,renderTracked:Xe,renderTriggered:lt,errorCaptured:i,serverPrefetch:s,expose:d,inheritAttrs:m,components:A,directives:C,filters:x}=c,V=Ut();{var[M]=o.propsOptions;if(M)for(var J in M)V("Props",J)}if(X&&At(X,E,V),R)for(var Q in R){var ee=R[Q];v.isFunction(ee)?(Object.defineProperty(E,Q,{value:ee.bind(g),configurable:!0,enumerable:!0,writable:!0}),V("Methods",Q)):P('Method "'.concat(Q,'" has type "').concat(typeof ee,'" in the component definition. Did you reference the function correctly?'))}if(N&&function(){v.isFunction(N)||P("The data option must be a function. Plain object usage is no longer supported.");var oe=N.call(g,g);if(v.isPromise(oe)&&P("data() returned a Promise - note data() cannot be async; If you intend to perform data fetching before component renders, use async setup() + <Suspense>."),!v.isObject(oe))P("data() should return an object.");else{o.data=k.reactive(oe);{var he=function(He){V("Data",He),ro(He[0])||Object.defineProperty(E,He,{configurable:!0,enumerable:!0,get:()=>oe[He],set:v.NOOP})};for(var _e in oe)he(_e)}}}(),_n=!0,T){var Y=function(oe){var he=T[oe],_e=v.isFunction(he)?he.bind(g,g):v.isFunction(he.get)?he.get.bind(g,g):v.NOOP;_e===v.NOOP&&P('Computed property "'.concat(oe,'" has no getter.'));var He=!v.isFunction(he)&&v.isFunction(he.set)?he.set.bind(g):()=>{P('Write operation failed: computed property "'.concat(oe,'" is readonly.'))},at=Cc({get:_e,set:He});Object.defineProperty(E,oe,{enumerable:!0,configurable:!0,get:()=>at.value,set:tt=>at.value=tt}),V("Computed",oe)};for(var me in T)Y(me)}if(z)for(var Te in z)Vn(z[Te],E,g,Te);if($){var dt=v.isFunction($)?$.call(g):$;Reflect.ownKeys(dt).forEach(oe=>{Mn(oe,dt[oe])})}ye&&ln(ye,o,"c");function qe(oe,he){v.isArray(he)?he.forEach(_e=>oe(_e.bind(g))):he&&oe(he.bind(g))}if(qe(wr,ce),qe(xa,ae),qe(no,ke),qe(Wa,Be),qe(ka,Et),qe(gl,ct),qe(ml,i),qe(qa,Xe),qe(ms,lt),qe(Uo,xt),qe(Vo,Ie),qe(Ga,s),v.isArray(d))if(d.length){var Pt=o.exposed||(o.exposed={});d.forEach(oe=>{Object.defineProperty(Pt,oe,{get:()=>g[oe],set:he=>g[oe]=he})})}else o.exposed||(o.exposed={});Ne&&o.render===v.NOOP&&(o.render=Ne),m!=null&&(o.inheritAttrs=m),A&&(o.components=A),C&&(o.directives=C);var Mt=o.appContext.config.globalProperties.$applyOptions;Mt&&Mt(c,o,g)}function At(o,c){var g=arguments.length>2&&arguments[2]!==void 0?arguments[2]:v.NOOP;v.isArray(o)&&(o=_s(o));var E=function(T){var R=o[T],z=void 0;v.isObject(R)?"default"in R?z=Gn(R.from||T,R.default,!0):z=Gn(R.from||T):z=Gn(R),k.isRef(z)?Object.defineProperty(c,T,{enumerable:!0,configurable:!0,get:()=>z.value,set:$=>z.value=$}):c[T]=z,g("Inject",T)};for(var N in o)E(N)}function ln(o,c,g){In(v.isArray(o)?o.map(E=>E.bind(c.proxy)):o.bind(c.proxy),c,g)}function Vn(o,c,g,E){var N=E.includes(".")?Qi(g,E):()=>g[E];if(v.isString(o)){var T=c[o];v.isFunction(T)?fr(N,T):P('Invalid watch handler specified by key "'.concat(o,'"'),T)}else if(v.isFunction(o))fr(N,o.bind(g));else if(v.isObject(o))if(v.isArray(o))o.forEach(z=>Vn(z,c,g,E));else{var R=v.isFunction(o.handler)?o.handler.bind(g):c[o.handler];v.isFunction(R)?fr(N,R,o):P('Invalid watch handler specified by key "'.concat(o.handler,'"'),R)}else P('Invalid watch option: "'.concat(E,'"'),o)}function ir(o){var c=o.type,{mixins:g,extends:E}=c,{mixins:N,optionsCache:T,config:{optionMergeStrategies:R}}=o.appContext,z=T.get(c),$;return z?$=z:!N.length&&!g&&!E?$=c:($={},N.length&&N.forEach(X=>On($,X,R,!0)),On($,c,R)),v.isObject(c)&&T.set(c,$),$}function On(o,c,g){var E=arguments.length>3&&arguments[3]!==void 0?arguments[3]:!1,{mixins:N,extends:T}=c;T&&On(o,T,g,!0),N&&N.forEach($=>On(o,$,g,!0));for(var R in c)if(E&&R==="expose")P('"expose" option is ignored when declared in mixins or extends. It should only be declared in the base component itself.');else{var z=$n[R]||g&&g[R];o[R]=z?z(o[R],c[R]):c[R]}return o}var $n={data:Cr,props:Ho,emits:Ho,methods:Gt,computed:Gt,beforeCreate:Ur,created:Ur,beforeMount:Ur,mounted:Ur,beforeUpdate:Ur,updated:Ur,beforeDestroy:Ur,beforeUnmount:Ur,destroyed:Ur,unmounted:Ur,activated:Ur,deactivated:Ur,errorCaptured:Ur,serverPrefetch:Ur,components:Gt,directives:Gt,watch:Ja,provide:Cr,inject:Ya};function Cr(o,c){return c?o?function(){return v.extend(v.isFunction(o)?o.call(this,this):o,v.isFunction(c)?c.call(this,this):c)}:c:o}function Ya(o,c){return Gt(_s(o),_s(c))}function _s(o){if(v.isArray(o)){for(var c={},g=0;g<o.length;g++)c[o[g]]=o[g];return c}return o}function Ur(o,c){return o?[...new Set([].concat(o,c))]:c}function Gt(o,c){return o?v.extend(Object.create(null),o,c):c}function Ho(o,c){return o?v.isArray(o)&&v.isArray(c)?[...new Set([...o,...c])]:v.extend(Object.create(null),ht(o),ht(c!=null?c:{})):c}function Ja(o,c){if(!o)return c;if(!c)return o;var g=v.extend(Object.create(null),o);for(var E in c)g[E]=Ur(o[E],c[E]);return g}function bs(){return{app:null,config:{isNativeTag:v.NO,performance:!1,globalProperties:{},optionMergeStrategies:{},errorHandler:void 0,warnHandler:void 0,compilerOptions:{}},mixins:[],components:{},directives:{},provides:Object.create(null),optionsCache:new WeakMap,propsCache:new WeakMap,emitsCache:new WeakMap}}var ys=0;function Zr(o,c){return function(E){var N=arguments.length>1&&arguments[1]!==void 0?arguments[1]:null;v.isFunction(E)||(E=v.extend({},E)),N!=null&&!v.isObject(N)&&(P("root props passed to app.mount() must be an object."),N=null);var T=bs(),R=new WeakSet,z=!1,$=T.app={_uid:ys++,_component:E,_props:N,_container:null,_context:T,_instance:null,version:ec,get config(){return T.config},set config(X){P("app.config cannot be replaced. Modify individual options instead.")},use(X){for(var ye=arguments.length,ce=new Array(ye>1?ye-1:0),ae=1;ae<ye;ae++)ce[ae-1]=arguments[ae];return R.has(X)?P("Plugin has already been applied to target app."):X&&v.isFunction(X.install)?(R.add(X),X.install($,...ce)):v.isFunction(X)?(R.add(X),X($,...ce)):P('A plugin must either be a function or an object with an "install" function.'),$},mixin(X){return T.mixins.includes(X)?P("Mixin has already been applied to target app"+(X.name?": ".concat(X.name):"")):T.mixins.push(X),$},component(X,ye){return Ec(X,T.config),ye?(T.components[X]&&P('Component "'.concat(X,'" has already been registered in target app.')),T.components[X]=ye,$):T.components[X]},directive(X,ye){return eo(X),ye?(T.directives[X]&&P('Directive "'.concat(X,'" has already been registered in target app.')),T.directives[X]=ye,$):T.directives[X]},mount(X,ye,ce){if(z)P("App has already been mounted.\nIf you want to remount the same app, move your app creation logic into a factory function and create fresh app instances for each mount - e.g. `const createMyApp = () => createApp(App)`");else{X.__vue_app__&&P("There is already an app instance mounted on the host container.\n If you want to mount another app on the same host container, you need to unmount the previous app by calling `app.unmount()` first.");var ae=Xn(E,N);return ae.appContext=T,ce===!0?ce="svg":ce===!1&&(ce=void 0),T.reload=()=>{o(Hi(ae),X,ce)},ye&&c?c(ae,X):o(ae,X,ce),z=!0,$._container=X,X.__vue_app__=$,$._instance=ae.component,Yo($,ec),is(ae.component)||ae.component.proxy}},unmount(){z?(o(null,$._container),$._instance=null,Jo($),delete $._container.__vue_app__):P("Cannot unmount an app that is not mounted.")},provide(X,ye){return X in T.provides&&P('App already provides property with key "'.concat(String(X),'". It will be overwritten with the new value.')),T.provides[X]=ye,$},runWithContext(X){var ye=jo;jo=$;try{return X()}finally{jo=ye}}};return $}}var jo=null;function Mn(o,c){if(!pr)P("provide() can only be used inside setup().");else{var g=pr.provides,E=pr.parent&&pr.parent.provides;E===g&&(g=pr.provides=Object.create(E)),g[o]=c,pr.type.mpType==="app"&&pr.appContext.app.provide(o,c)}}function Gn(o,c){var g=arguments.length>2&&arguments[2]!==void 0?arguments[2]:!1,E=pr||hn;if(E||jo){var N=E?E.parent==null?E.vnode.appContext&&E.vnode.appContext.provides:E.parent.provides:jo._context.provides;if(N&&o in N)return N[o];if(arguments.length>1)return g&&v.isFunction(c)?c.call(E&&E.proxy):c;P('injection "'.concat(String(o),'" not found.'))}else P("inject() can only be used inside setup() or functional components.")}function oa(){return!!(pr||hn||jo)}function Ka(o,c,g){var E=arguments.length>3&&arguments[3]!==void 0?arguments[3]:!1,N={},T={};v.def(T,Cl,1),o.propsDefaults=Object.create(null),zo(o,c,N,T);for(var R in o.propsOptions[0])R in N||(N[R]=void 0);Ws(c||{},N,o),g?o.props=E?N:k.shallowReactive(N):o.type.props?o.props=N:o.props=T,o.attrs=T}function Za(o){for(;o;){if(o.type.__hmrId)return!0;o=o.parent}}function io(o,c,g,E){var{props:N,attrs:T,vnode:{patchFlag:R}}=o,z=k.toRaw(N),[$]=o.propsOptions,X=!1;if(!Za(o)&&(E||R>0)&&!(R&16)){if(R&8)for(var ye=o.vnode.dynamicProps,ce=0;ce<ye.length;ce++){var ae=ye[ce];if(!mo(o.emitsOptions,ae)){var ke=c[ae];if($)if(v.hasOwn(T,ae))ke!==T[ae]&&(T[ae]=ke,X=!0);else{var Be=v.camelize(ae);N[Be]=Xr($,z,Be,ke,o,!1)}else ke!==T[ae]&&(T[ae]=ke,X=!0)}}}else{zo(o,c,N,T)&&(X=!0);var Et;for(var ct in z)(!c||!v.hasOwn(c,ct)&&((Et=v.hyphenate(ct))===ct||!v.hasOwn(c,Et)))&&($?g&&(g[ct]!==void 0||g[Et]!==void 0)&&(N[ct]=Xr($,z,ct,void 0,o,!0)):delete N[ct]);if(T!==z)for(var kt in T)(!c||!v.hasOwn(c,kt)&&!0)&&(delete T[kt],X=!0)}X&&k.trigger(o,"set","$attrs"),Ws(c||{},N,o)}function zo(o,c,g,E){var[N,T]=o.propsOptions,R=!1,z;if(c){for(var $ in c)if(!v.isReservedProp($)){var X=c[$],ye=void 0;N&&v.hasOwn(N,ye=v.camelize($))?!T||!T.includes(ye)?g[ye]=X:(z||(z={}))[ye]=X:mo(o.emitsOptions,$)||(!($ in E)||X!==E[$])&&(E[$]=X,R=!0)}}if(T)for(var ce=k.toRaw(g),ae=z||v.EMPTY_OBJ,ke=0;ke<T.length;ke++){var Be=T[ke];g[Be]=Xr(N,ce,Be,ae[Be],o,!v.hasOwn(ae,Be))}return R}function Xr(o,c,g,E,N,T){var R=o[g];if(R!=null){var z=v.hasOwn(R,"default");if(z&&E===void 0){var $=R.default;if(R.type!==Function&&!R.skipFactory&&v.isFunction($)){var{propsDefaults:X}=N;if(g in X)E=X[g];else{var ye=Gr(N);E=X[g]=$.call(null,c),ye()}}else E=$}R[0]&&(T&&!z?E=!1:R[1]&&(E===""||E===v.hyphenate(g))&&(E=!0))}return E}function js(o,c){var g=arguments.length>2&&arguments[2]!==void 0?arguments[2]:!1,E=c.propsCache,N=E.get(o);if(N)return N;var T=o.props,R={},z=[],$=!1;if(!v.isFunction(o)){var X=fe=>{$=!0;var[Ie,Ne]=js(fe,c,!0);v.extend(R,Ie),Ne&&z.push(...Ne)};!g&&c.mixins.length&&c.mixins.forEach(X),o.extends&&X(o.extends),o.mixins&&o.mixins.forEach(X)}if(!T&&!$)return v.isObject(o)&&E.set(o,v.EMPTY_ARR),v.EMPTY_ARR;if(v.isArray(T))for(var ye=0;ye<T.length;ye++){v.isString(T[ye])||P("props must be strings when using array syntax.",T[ye]);var ce=v.camelize(T[ye]);_l(ce)&&(R[ce]=v.EMPTY_OBJ)}else if(T){v.isObject(T)||P("invalid props options",T);for(var ae in T){var ke=v.camelize(ae);if(_l(ke)){var Be=T[ae],Et=R[ke]=v.isArray(Be)||v.isFunction(Be)?{type:Be}:v.extend({},Be);if(Et){var ct=bl(Boolean,Et.type),kt=bl(String,Et.type);Et[0]=ct>-1,Et[1]=kt<0||ct<kt,(ct>-1||v.hasOwn(Et,"default"))&&z.push(ke)}}}}var xt=[R,z];return v.isObject(o)&&E.set(o,xt),xt}function _l(o){return o[0]!=="$"&&!v.isReservedProp(o)?!0:(P('Invalid prop name: "'.concat(o,'" is a reserved property.')),!1)}function Xa(o){if(o===null)return"null";if(typeof o=="function")return o.name||"";if(typeof o=="object"){var c=o.constructor&&o.constructor.name;return c||""}return""}function zs(o,c){return Xa(o)===Xa(c)}function bl(o,c){return v.isArray(c)?c.findIndex(g=>zs(g,o)):v.isFunction(c)&&zs(c,o)?0:-1}function Ws(o,c,g){var E=k.toRaw(c),N=g.propsOptions[0];for(var T in N){var R=N[T];R!=null&&Ul(T,E[T],R,k.shallowReadonly(E),!v.hasOwn(o,T)&&!v.hasOwn(o,v.hyphenate(T)))}}function Ul(o,c,g,E,N){var{type:T,required:R,validator:z,skipCheck:$}=g;if(R&&N){P('Missing required prop: "'+o+'"');return}if(!(c==null&&!R)){if(T!=null&&T!==!0&&!$){for(var X=!1,ye=v.isArray(T)?T:[T],ce=[],ae=0;ae<ye.length&&!X;ae++){var{valid:ke,expectedType:Be}=qs(c,ye[ae]);ce.push(Be||""),X=ke}if(!X){P(Vl(o,c,ce));return}}z&&!z(c,E)&&P('Invalid prop: custom validator check failed for prop "'+o+'".')}}var Gs=v.makeMap("String,Number,Boolean,Function,Symbol,BigInt");function qs(o,c){var g,E=Xa(c);if(Gs(E)){var N=typeof o;g=N===E.toLowerCase(),!g&&N==="object"&&(g=o instanceof c)}else E==="Object"?g=v.isObject(o):E==="Array"?g=v.isArray(o):E==="null"?g=o===null:g=o instanceof c;return{valid:g,expectedType:E}}function Vl(o,c,g){if(g.length===0)return'Prop type [] for prop "'.concat(o,`" won't match anything. Did you mean to use type Array instead?`);var E='Invalid prop: type check failed for prop "'.concat(o,'". Expected ').concat(g.map(v.capitalize).join(" | ")),N=g[0],T=v.toRawType(c),R=Ys(c,N),z=Ys(c,T);return g.length===1&&bi(N)&&!Qa(N,T)&&(E+=" with value ".concat(R)),E+=", got ".concat(T," "),bi(T)&&(E+="with value ".concat(z,".")),E}function Ys(o,c){return c==="String"?'"'.concat(o,'"'):c==="Number"?"".concat(Number(o)):"".concat(o)}function bi(o){var c=["string","number","boolean"];return c.some(g=>o.toLowerCase()===g)}function Qa(){for(var o=arguments.length,c=new Array(o),g=0;g<o;g++)c[g]=arguments[g];return c.some(E=>E.toLowerCase()==="boolean")}var Es=o=>o[0]==="_"||o==="$stable",Ss=o=>v.isArray(o)?o.map(Ii):[Ii(o)],Ui=(o,c,g)=>{if(c._n)return c;var E=Ht(function(){return pr&&(!g||g.root===pr.root)&&P('Slot "'.concat(o,'" invoked outside of the render function: this will not track dependencies used in the slot. Invoke the slot function inside the render function instead.')),Ss(c(...arguments))},g);return E._c=!1,E},ws=(o,c,g)=>{var E=o._ctx;for(var N in o)if(!Es(N)){var T=o[N];v.isFunction(T)?c[N]=Ui(N,T,E):T!=null&&function(){P('Non-function value encountered for slot "'.concat(N,'". Prefer function slots for better performance.'));var R=Ss(T);c[N]=()=>R}()}},es=(o,c)=>{yo(o.vnode)||P("Non-function value encountered for default slot. Prefer function slots for better performance.");var g=Ss(c);o.slots.default=()=>g},gc=(o,c)=>{if(o.vnode.shapeFlag&32){var g=c._;g?(o.slots=k.toRaw(c),v.def(c,"_",g)):ws(c,o.slots={})}else o.slots={},c&&es(o,c);v.def(o.slots,Cl,1)},Ge=(o,c,g)=>{var{vnode:E,slots:N}=o,T=!0,R=v.EMPTY_OBJ;if(E.shapeFlag&32){var z=c._;z?gi?(v.extend(N,c),k.trigger(o,"set","$slots")):g&&z===1?T=!1:(v.extend(N,c),!g&&z===1&&delete N._):(T=!c.$stable,ws(c,N)),R=c}else c&&(es(o,c),R={default:1});if(T)for(var $ in N)!Es($)&&R[$]==null&&delete N[$]};function $t(o,c,g,E){var N=arguments.length>4&&arguments[4]!==void 0?arguments[4]:!1;if(v.isArray(o)){o.forEach((Et,ct)=>$t(Et,c&&(v.isArray(c)?c[ct]:c),g,E,N));return}if(!(Zn(E)&&!N)){var T=E.shapeFlag&4?is(E.component)||E.component.proxy:E.el,R=N?null:T,{i:z,r:$}=o;if(!z){P("Missing ref owner context. ref cannot be used on hoisted vnodes. A vnode with ref must be created inside the render function.");return}var X=c&&c.r,ye=z.refs===v.EMPTY_OBJ?z.refs={}:z.refs,ce=z.setupState;if(X!=null&&X!==$&&(v.isString(X)?(ye[X]=null,v.hasOwn(ce,X)&&(ce[X]=null)):k.isRef(X)&&(X.value=null)),v.isFunction($))sn($,z,12,[R,ye]);else{var ae=v.isString($),ke=k.isRef($);if(ae||ke){var Be=()=>{if(o.f){var Et=ae?v.hasOwn(ce,$)?ce[$]:ye[$]:$.value;N?v.isArray(Et)&&v.remove(Et,T):v.isArray(Et)?Et.includes(T)||Et.push(T):ae?(ye[$]=[T],v.hasOwn(ce,$)&&(ce[$]=ye[$])):($.value=[T],o.k&&(ye[o.k]=$.value))}else ae?(ye[$]=R,v.hasOwn(ce,$)&&(ce[$]=R)):ke?($.value=R,o.k&&(ye[o.k]=R)):P("Invalid template ref type:",$,"(".concat(typeof $,")"))};R?(Be.id=-1,jr(Be,g)):Be()}else P("Invalid template ref type:",$,"(".concat(typeof $,")"))}}}var It=!1,gn=o=>o.namespaceURI.includes("svg")&&o.tagName!=="foreignObject",qn=o=>o.namespaceURI.includes("MathML"),Nr=o=>{if(gn(o))return"svg";if(qn(o))return"mathml"},ar=o=>o.nodeType===8;function yi(o){var{mt:c,p:g,o:{patchProp:E,createText:N,nextSibling:T,parentNode:R,remove:z,insert:$,createComment:X}}=o,ye=(fe,Ie)=>{if(!Ie.hasChildNodes()){P("Attempting to hydrate existing markup but container is empty. Performing full mount instead."),g(null,fe,Ie),qr(),Ie._vnode=fe;return}It=!1,ce(Ie.firstChild,fe,null,null,null),qr(),Ie._vnode=fe,It&&console.error("Hydration completed but contains mismatches.")},ce=function(fe,Ie,Ne,Xe,lt){var i=arguments.length>5&&arguments[5]!==void 0?arguments[5]:!1,s=ar(fe)&&fe.data==="[",d=()=>Et(fe,Ie,Ne,Xe,lt,s),{type:m,ref:A,shapeFlag:C,patchFlag:x}=Ie,V=fe.nodeType;Ie.el=fe,"__vnode"in fe||Object.defineProperty(fe,"__vnode",{value:Ie,enumerable:!1}),"__vueParentComponent"in fe||Object.defineProperty(fe,"__vueParentComponent",{value:Ne,enumerable:!1}),x===-2&&(i=!1,Ie.dynamicChildren=null);var M=null;switch(m){case Bn:V!==3?Ie.children===""?($(Ie.el=N(""),R(fe),fe),M=fe):M=d():(fe.data!==Ie.children&&(It=!0,P("Hydration text mismatch in",fe.parentNode,`
  - rendered on server: `.concat(JSON.stringify(fe.data),`
  - expected on client: `).concat(JSON.stringify(Ie.children))),fe.data=Ie.children),M=T(fe));break;case Ln:xt(fe)?(M=T(fe),kt(Ie.el=fe.content.firstChild,fe,Ne)):V!==8||s?M=d():M=T(fe);break;case Fn:if(s&&(fe=T(fe),V=fe.nodeType),V===1||V===3){M=fe;for(var J=!Ie.children.length,Q=0;Q<Ie.staticCount;Q++)J&&(Ie.children+=M.nodeType===1?M.outerHTML:M.data),Q===Ie.staticCount-1&&(Ie.anchor=M),M=T(M);return s?T(M):M}else d();break;case gr:s?M=Be(fe,Ie,Ne,Xe,lt,i):M=d();break;default:if(C&1)(V!==1||Ie.type.toLowerCase()!==fe.tagName.toLowerCase())&&!xt(fe)?M=d():M=ae(fe,Ie,Ne,Xe,lt,i);else if(C&6){Ie.slotScopeIds=lt;var ee=R(fe);if(s?M=ct(fe):ar(fe)&&fe.data==="teleport start"?M=ct(fe,fe.data,"teleport end"):M=T(fe),c(Ie,ee,null,Ne,Xe,Nr(ee),i),Zn(Ie)){var Y;s?(Y=Xn(gr),Y.anchor=M?M.previousSibling:ee.lastChild):Y=fe.nodeType===3?Yl(""):Xn("div"),Y.el=fe,Ie.component.subTree=Y}}else C&64?V!==8?M=d():M=Ie.type.hydrate(fe,Ie,Ne,Xe,lt,i,o,ke):C&128?M=Ie.type.hydrate(fe,Ie,Ne,Xe,Nr(R(fe)),lt,i,o,ce):P("Invalid HostVNode type:",m,"(".concat(typeof m,")"))}return A!=null&&$t(A,null,Xe,Ie),M},ae=(fe,Ie,Ne,Xe,lt,i)=>{i=i||!!Ie.dynamicChildren;var{type:s,props:d,patchFlag:m,shapeFlag:A,dirs:C,transition:x}=Ie,V=s==="input"||s==="option";{C&&Di(Ie,null,Ne,"created");var M=!1;if(xt(fe)){M=Vi(Xe,x)&&Ne&&Ne.vnode.props&&Ne.vnode.props.appear;var J=fe.content.firstChild;M&&x.beforeEnter(J),kt(J,fe,Ne),Ie.el=fe=J}if(A&16&&!(d&&(d.innerHTML||d.textContent)))for(var Q=ke(fe.firstChild,Ie,fe,Ne,Xe,lt,i),ee=!1;Q;){It=!0,ee||(P("Hydration children mismatch on",fe,`
Server rendered element contains more child nodes than client vdom.`),ee=!0);var Y=Q;Q=Q.nextSibling,z(Y)}else A&8&&fe.textContent!==Ie.children&&(It=!0,P("Hydration text content mismatch on",fe,`
  - rendered on server: `.concat(fe.textContent,`
  - expected on client: `).concat(Ie.children)),fe.textContent=Ie.children);if(d)for(var me in d)yl(fe,me,d[me],Ie,Ne)&&(It=!0),(V&&(me.endsWith("value")||me==="indeterminate")||v.isOn(me)&&!v.isReservedProp(me)||me[0]===".")&&E(fe,me,null,d[me],void 0,void 0,Ne);var Te;(Te=d&&d.onVnodeBeforeMount)&&ki(Te,Ne,Ie),C&&Di(Ie,null,Ne,"beforeMount"),((Te=d&&d.onVnodeMounted)||C||M)&&Fo(()=>{Te&&ki(Te,Ne,Ie),M&&x.enter(fe),C&&Di(Ie,null,Ne,"mounted")},Xe)}return fe.nextSibling},ke=(fe,Ie,Ne,Xe,lt,i,s)=>{s=s||!!Ie.dynamicChildren;for(var d=Ie.children,m=d.length,A=!1,C=0;C<m;C++){var x=s?d[C]:d[C]=Ii(d[C]);if(fe)fe=ce(fe,x,Xe,lt,i,s);else{if(x.type===Bn&&!x.children)continue;It=!0,A||(P("Hydration children mismatch on",Ne,`
Server rendered element contains fewer child nodes than client vdom.`),A=!0),g(null,x,Ne,null,Xe,lt,Nr(Ne),i)}}return fe},Be=(fe,Ie,Ne,Xe,lt,i)=>{var{slotScopeIds:s}=Ie;s&&(lt=lt?lt.concat(s):s);var d=R(fe),m=ke(T(fe),Ie,d,Ne,Xe,lt,i);return m&&ar(m)&&m.data==="]"?T(Ie.anchor=m):(It=!0,$(Ie.anchor=X("]"),d,m),m)},Et=(fe,Ie,Ne,Xe,lt,i)=>{if(It=!0,P(`Hydration node mismatch:
- rendered on server:`,fe,fe.nodeType===3?"(text)":ar(fe)&&fe.data==="["?"(start of fragment)":"",`
- expected on client:`,Ie.type),Ie.el=null,i)for(var s=ct(fe);;){var d=T(fe);if(d&&d!==s)z(d);else break}var m=T(fe),A=R(fe);return z(fe),g(null,Ie,A,m,Ne,Xe,Nr(A),lt),m},ct=function(fe){for(var Ie=arguments.length>1&&arguments[1]!==void 0?arguments[1]:"[",Ne=arguments.length>2&&arguments[2]!==void 0?arguments[2]:"]",Xe=0;fe;)if(fe=T(fe),fe&&ar(fe)&&(fe.data===Ie&&Xe++,fe.data===Ne)){if(Xe===0)return T(fe);Xe--}return fe},kt=(fe,Ie,Ne)=>{var Xe=Ie.parentNode;Xe&&Xe.replaceChild(fe,Ie);for(var lt=Ne;lt;)lt.vnode.el===Ie&&(lt.vnode.el=lt.subTree.el=fe),lt=lt.parent},xt=fe=>fe.nodeType===1&&fe.tagName.toLowerCase()==="template";return[ye,ce]}function yl(o,c,g,E,N){var T,R,z,$,X;if(c==="class")$=o.getAttribute("class"),X=v.normalizeClass(g),El($l($||""),$l(X))||(R=z="class");else if(c==="style"){$=o.getAttribute("style"),X=v.isString(g)?g:v.stringifyStyle(v.normalizeStyle(g));var ye=mc($),ce=mc(X);if(E.dirs)for(var{dir:ae,value:ke}of E.dirs)ae.name==="show"&&!ke&&ce.set("display","none");var Be=N==null?void 0:N.subTree;if(E===Be||(Be==null?void 0:Be.type)===gr&&Be.children.includes(E)){var Et=(T=N==null?void 0:N.getCssVars)==null?void 0:T.call(N);for(var ct in Et)ce.set("--".concat(ct),String(Et[ct]))}qc(ye,ce)||(R=z="style")}else(o instanceof SVGElement&&v.isKnownSvgAttr(c)||o instanceof HTMLElement&&(v.isBooleanAttr(c)||v.isKnownHtmlAttr(c)))&&(v.isBooleanAttr(c)?($=o.hasAttribute(c),X=v.includeBooleanAttr(g)):g==null?($=o.hasAttribute(c),X=!1):(o.hasAttribute(c)?$=o.getAttribute(c):c==="value"&&o.tagName==="TEXTAREA"?$=o.value:$=!1,X=v.isRenderableAttrValue(g)?String(g):!1),$!==X&&(R="attribute",z=c));if(R){var kt=Ie=>Ie===!1?"(not rendered)":"".concat(z,'="').concat(Ie,'"'),xt="Hydration ".concat(R," mismatch on"),fe=`
  - rendered on server: `.concat(kt($),`
  - expected on client: `).concat(kt(X),`
  Note: this mismatch is check-only. The DOM will not be rectified in production due to performance overhead.
  You should fix the source of the mismatch.`);return P(xt,o,fe),!0}return!1}function $l(o){return new Set(o.trim().split(/\s+/))}function El(o,c){if(o.size!==c.size)return!1;for(var g of o)if(!c.has(g))return!1;return!0}function mc(o){var c=new Map;for(var g of o.split(";")){var[E,N]=g.split(":");E=E==null?void 0:E.trim(),N=N==null?void 0:N.trim(),E&&N&&c.set(E,N)}return c}function qc(o,c){if(o.size!==c.size)return!1;for(var[g,E]of o)if(E!==c.get(g))return!1;return!0}var aa,Co;function li(o,c){o.appContext.config.performance&&Ao()&&Co.mark("vue-".concat(c,"-").concat(o.uid)),go(o,c,Ao()?Co.now():Date.now())}function ci(o,c){if(o.appContext.config.performance&&Ao()){var g="vue-".concat(c,"-").concat(o.uid),E=g+":end";Co.mark(E),Co.measure("<".concat(os(o,o.type),"> ").concat(c),g,E),Co.clearMarks(g),Co.clearMarks(E)}Oa(o,c,Ao()?Co.now():Date.now())}function Ao(){return aa!==void 0||(typeof window!="undefined"&&window.performance?(aa=!0,Co=window.performance):aa=!1),aa}function Hl(){var o=[];if(o.length){var c=o.length>1;console.warn("Feature flag".concat(c?"s":""," ").concat(o.join(", ")," ").concat(c?"are":"is",` not explicitly defined. You are running the esm-bundler build of Vue, which expects these compile-time feature flags to be globally injected via the bundler config in order to get better tree-shaking in the production bundle.

For more details, see https://link.vuejs.org/feature-flags.`))}}var jr=Fo;function Ar(o){return Cs(o)}function Js(o){return Cs(o,yi)}function Cs(o,c){Hl();var g=v.getGlobalThis();g.__VUE__=!0,mi(g.__VUE_DEVTOOLS_GLOBAL_HOOK__,g);var{insert:E,remove:N,patchProp:T,forcePatchProp:R,createElement:z,createText:$,createComment:X,setText:ye,setElementText:ce,parentNode:ae,nextSibling:ke,setScopeId:Be=v.NOOP,insertStaticContent:Et}=o,ct=function(L,G,te){var be=arguments.length>3&&arguments[3]!==void 0?arguments[3]:null,Se=arguments.length>4&&arguments[4]!==void 0?arguments[4]:null,Ce=arguments.length>5&&arguments[5]!==void 0?arguments[5]:null,nt=arguments.length>6&&arguments[6]!==void 0?arguments[6]:void 0,We=arguments.length>7&&arguments[7]!==void 0?arguments[7]:null,Qe=arguments.length>8&&arguments[8]!==void 0?arguments[8]:gi?!1:!!G.dynamicChildren;if(L!==G){L&&!Wr(L,G)&&(be=_e(L),qe(L,Se,Ce,!0),L=null),G.patchFlag===-2&&(Qe=!1,G.dynamicChildren=null);var{type:Ue,ref:wt,shapeFlag:jt}=G;switch(Ue){case Bn:kt(L,G,te,be);break;case Ln:xt(L,G,te,be);break;case Fn:L==null?fe(G,te,be,nt):Ie(L,G,te,nt);break;case gr:x(L,G,te,be,Se,Ce,nt,We,Qe);break;default:jt&1?lt(L,G,te,be,Se,Ce,nt,We,Qe):jt&6?V(L,G,te,be,Se,Ce,nt,We,Qe):jt&64||jt&128?Ue.process(L,G,te,be,Se,Ce,nt,We,Qe,tt):P("Invalid VNode type:",Ue,"(".concat(typeof Ue,")"))}wt!=null&&Se&&$t(wt,L&&L.ref,Ce,G||L,!G)}},kt=(L,G,te,be)=>{if(L==null)E(G.el=$(G.children),te,be);else{var Se=G.el=L.el;G.children!==L.children&&ye(Se,G.children)}},xt=(L,G,te,be)=>{L==null?E(G.el=X(G.children||""),te,be):G.el=L.el},fe=(L,G,te,be)=>{[L.el,L.anchor]=Et(L.children,G,te,be,L.el,L.anchor)},Ie=(L,G,te,be)=>{if(G.children!==L.children){var Se=ke(L.anchor);Xe(L),[G.el,G.anchor]=Et(G.children,te,Se,be)}else G.el=L.el,G.anchor=L.anchor},Ne=(L,G,te)=>{for(var{el:be,anchor:Se}=L,Ce;be&&be!==Se;)Ce=ke(be),E(be,G,te),be=Ce;E(Se,G,te)},Xe=L=>{for(var{el:G,anchor:te}=L,be;G&&G!==te;)be=ke(G),N(G),G=be;N(te)},lt=(L,G,te,be,Se,Ce,nt,We,Qe)=>{G.type==="svg"?nt="svg":G.type==="math"&&(nt="mathml"),L==null?i(G,te,be,Se,Ce,nt,We,Qe):m(L,G,Se,Ce,nt,We,Qe)},i=(L,G,te,be,Se,Ce,nt,We)=>{var Qe,Ue,{props:wt,shapeFlag:jt,transition:Vt,dirs:Bt}=L;if(Qe=L.el=z(L.type,Ce,wt&&wt.is,wt),jt&8?ce(Qe,L.children):jt&16&&d(L.children,Qe,null,be,Se,Ks(L,Ce),nt,We),Bt&&Di(L,null,be,"created"),s(Qe,L,L.scopeId,nt,be),wt){for(var lr in wt)lr!=="value"&&!v.isReservedProp(lr)&&T(Qe,lr,null,wt[lr],Ce,L.children,be,Se,he,L.hostInstance);"value"in wt&&T(Qe,"value",null,wt.value,Ce,[],be,null,void 0,L.hostInstance),(Ue=wt.onVnodeBeforeMount)&&ki(Ue,be,L)}Object.defineProperty(Qe,"__vnode",{value:L,enumerable:!1}),Object.defineProperty(Qe,"__vueParentComponent",{value:be,enumerable:!1}),Bt&&Di(L,null,be,"beforeMount");var Hn=Vi(Se,Vt);Hn&&Vt.beforeEnter(Qe),E(Qe,G,te),((Ue=wt&&wt.onVnodeMounted)||Hn||Bt)&&jr(()=>{Ue&&ki(Ue,be,L),Hn&&Vt.enter(Qe),Bt&&Di(L,null,be,"mounted")},Se)},s=(L,G,te,be,Se)=>{if(te&&Be(L,te),be)for(var Ce=0;Ce<be.length;Ce++)Be(L,be[Ce]);if(Se){var nt=Se.subTree;if(nt.patchFlag>0&&nt.patchFlag&2048&&(nt=oi(nt.children)||nt),G===nt){var We=Se.vnode;s(L,We,We.scopeId,We.slotScopeIds,Se.parent)}}},d=function(L,G,te,be,Se,Ce,nt,We){for(var Qe=arguments.length>8&&arguments[8]!==void 0?arguments[8]:0,Ue=Qe;Ue<L.length;Ue++){var wt=L[Ue]=We?Ir(L[Ue]):Ii(L[Ue]);ct(null,wt,G,te,be,Se,Ce,nt,We)}},m=(L,G,te,be,Se,Ce,nt)=>{var We=G.el=L.el,{patchFlag:Qe,dynamicChildren:Ue,dirs:wt}=G;Qe|=L.patchFlag&16;var jt=L.props||v.EMPTY_OBJ,Vt=G.props||v.EMPTY_OBJ,Bt;if(te&&sa(te,!1),(Bt=Vt.onVnodeBeforeUpdate)&&ki(Bt,te,G,L),wt&&Di(G,L,te,"beforeUpdate"),te&&sa(te,!0),gi&&(Qe=0,nt=!1,Ue=null),Ue?(A(L.dynamicChildren,Ue,We,te,be,Ks(G,Se),Ce),As(L,G)):nt||Y(L,G,We,null,te,be,Ks(G,Se),Ce,!1),Qe>0){if(Qe&16)C(We,G,jt,Vt,te,be,Se);else if(Qe&2&&jt.class!==Vt.class&&T(We,"class",null,Vt.class,Se,[],te,null,void 0,G.hostInstance),Qe&4&&T(We,"style",jt.style,Vt.style,Se,[],te,null,void 0,G.hostInstance),Qe&8)for(var lr=G.dynamicProps,Hn=0;Hn<lr.length;Hn++){var un=lr[Hn],Sn=jt[un],ei=Vt[un];(ei!==Sn||un==="value"||R&&R(We,un))&&T(We,un,Sn,ei,Se,L.children,te,be,he,G.hostInstance)}Qe&1&&L.children!==G.children&&ce(We,G.children)}else!nt&&Ue==null&&C(We,G,jt,Vt,te,be,Se);((Bt=Vt.onVnodeUpdated)||wt)&&jr(()=>{Bt&&ki(Bt,te,G,L),wt&&Di(G,L,te,"updated")},be)},A=(L,G,te,be,Se,Ce,nt)=>{for(var We=0;We<G.length;We++){var Qe=L[We],Ue=G[We],wt=Qe.el&&(Qe.type===gr||!Wr(Qe,Ue)||Qe.shapeFlag&(6|64))?ae(Qe.el):te;ct(Qe,Ue,wt,null,be,Se,Ce,nt,!0)}},C=(L,G,te,be,Se,Ce,nt)=>{if(te!==be){if(te!==v.EMPTY_OBJ)for(var We in te)!v.isReservedProp(We)&&!(We in be)&&T(L,We,te[We],null,nt,G.children,Se,Ce,he,G.hostInstance);for(var Qe in be)if(!v.isReservedProp(Qe)){var Ue=be[Qe],wt=te[Qe];(Ue!==wt&&Qe!=="value"||R&&R(L,Qe))&&T(L,Qe,wt,Ue,nt,G.children,Se,Ce,he,G.hostInstance)}"value"in be&&T(L,"value",te.value,be.value,nt,[],Se,null,void 0,G.hostInstance)}},x=(L,G,te,be,Se,Ce,nt,We,Qe)=>{var Ue=G.el=L?L.el:$(""),wt=G.anchor=L?L.anchor:$(""),{patchFlag:jt,dynamicChildren:Vt,slotScopeIds:Bt}=G;(gi||jt&2048)&&(jt=0,Qe=!1,Vt=null),Bt&&(We=We?We.concat(Bt):Bt),L==null?(E(Ue,te,be),E(wt,te,be),d(G.children||[],te,wt,Se,Ce,nt,We,Qe)):jt>0&&jt&64&&Vt&&L.dynamicChildren?(A(L.dynamicChildren,Vt,te,Se,Ce,nt,We),As(L,G)):Y(L,G,te,wt,Se,Ce,nt,We,Qe)},V=(L,G,te,be,Se,Ce,nt,We,Qe)=>{G.slotScopeIds=We,L==null?G.shapeFlag&512?Se.ctx.activate(G,te,be,nt,Qe):M(G,te,be,Se,Ce,nt,Qe):J(L,G,Qe)},M=(L,G,te,be,Se,Ce,nt)=>{var We=L.component=yc(L,be,Se);if(We.type.__hmrId&&ur(We),Ot(L),li(We,"mount"),yo(L)&&(We.ctx.renderer=tt),li(We,"init"),Sc(We),ci(We,"init"),We.asyncDep){if(Se&&Se.registerDep(We,Q),!L.el){var Qe=We.subTree=Xn(Ln);xt(null,Qe,G,te)}}else Q(We,L,G,te,Se,Ce,nt);ue(),ci(We,"mount")},J=(L,G,te)=>{var be=G.component=L.component;if(Ta(L,G,te))if(be.asyncDep&&!be.asyncResolved){Ot(G),ee(be,G,te),ue();return}else be.next=G,zn(be.update),be.effect.dirty=!0,be.update();else G.el=L.el,be.vnode=G},Q=(L,G,te,be,Se,Ce,nt)=>{var We=()=>{if(L.isMounted){var{next:Yn,bu:Si,u:No,parent:wi,vnode:j}=L;{var re=zl(L);if(re){Yn&&(Yn.el=j.el,ee(L,Yn,nt)),re.asyncDep.then(()=>{L.isUnmounted||We()});return}}var Pe=Yn,Fe;Ot(Yn||L.vnode),sa(L,!1),Yn?(Yn.el=j.el,ee(L,Yn,nt)):Yn=j,Si&&v.invokeArrayFns(Si),(Fe=Yn.props&&Yn.props.onVnodeBeforeUpdate)&&ki(Fe,wi,Yn,j),sa(L,!0),li(L,"render");var je=tn(L);ci(L,"render");var rt=L.subTree;L.subTree=je,li(L,"patch"),ct(rt,je,ae(rt.el),_e(rt),L,Se,Ce),ci(L,"patch"),Yn.el=je.el,Pe===null&&ai(L,je.el),No&&jr(No,Se),(Fe=Yn.props&&Yn.props.onVnodeUpdated)&&jr(()=>ki(Fe,wi,Yn,j),Se),Yr(L),ue()}else{var wt,{el:jt,props:Vt}=G,{bm:Bt,m:lr,parent:Hn}=L,un=Zn(G);if(sa(L,!1),Bt&&v.invokeArrayFns(Bt),!un&&(wt=Vt&&Vt.onVnodeBeforeMount)&&ki(wt,Hn,G),sa(L,!0),jt&&Ye){var Sn=()=>{li(L,"render"),L.subTree=tn(L),ci(L,"render"),li(L,"hydrate"),Ye(jt,L.subTree,L,Se,null),ci(L,"hydrate")};un?G.type.__asyncLoader().then(()=>!L.isUnmounted&&Sn()):Sn()}else{li(L,"render");var ei=L.subTree=tn(L);ci(L,"render"),li(L,"patch"),ct(null,ei,te,be,L,Se,Ce),ci(L,"patch"),G.el=ei.el}if(lr&&jr(lr,Se),!un&&(wt=Vt&&Vt.onVnodeMounted)){var lo=G;jr(()=>ki(wt,Hn,lo),Se)}(G.shapeFlag&256||Hn&&Zn(Hn.vnode)&&Hn.vnode.shapeFlag&256)&&L.a&&jr(L.a,Se),L.isMounted=!0,vi(L),G=te=be=null}},Qe=L.effect=new k.ReactiveEffect(We,v.NOOP,()=>nn(Ue),L.scope),Ue=L.update=()=>{Qe.dirty&&Qe.run()};Ue.id=L.uid,sa(L,!0),Qe.onTrack=L.rtc?wt=>v.invokeArrayFns(L.rtc,wt):void 0,Qe.onTrigger=L.rtg?wt=>v.invokeArrayFns(L.rtg,wt):void 0,Ue.ownerInstance=L,Ue()},ee=(L,G,te)=>{G.component=L;var be=L.vnode.props;L.vnode=G,L.next=null,io(L,G.props,be,te),Ge(L,G.children,te),k.pauseTracking(),nr(L),k.resetTracking()},Y=function(L,G,te,be,Se,Ce,nt,We){var Qe=arguments.length>8&&arguments[8]!==void 0?arguments[8]:!1,Ue=L&&L.children,wt=L?L.shapeFlag:0,jt=G.children,{patchFlag:Vt,shapeFlag:Bt}=G;if(Vt>0){if(Vt&128){Te(Ue,jt,te,be,Se,Ce,nt,We,Qe);return}else if(Vt&256){me(Ue,jt,te,be,Se,Ce,nt,We,Qe);return}}Bt&8?(wt&16&&he(Ue,Se,Ce),jt!==Ue&&ce(te,jt)):wt&16?Bt&16?Te(Ue,jt,te,be,Se,Ce,nt,We,Qe):he(Ue,Se,Ce,!0):(wt&8&&ce(te,""),Bt&16&&d(jt,te,be,Se,Ce,nt,We,Qe))},me=(L,G,te,be,Se,Ce,nt,We,Qe)=>{L=L||v.EMPTY_ARR,G=G||v.EMPTY_ARR;var Ue=L.length,wt=G.length,jt=Math.min(Ue,wt),Vt;for(Vt=0;Vt<jt;Vt++){var Bt=G[Vt]=Qe?Ir(G[Vt]):Ii(G[Vt]);ct(L[Vt],Bt,te,null,Se,Ce,nt,We,Qe)}Ue>wt?he(L,Se,Ce,!0,!1,jt):d(G,te,be,Se,Ce,nt,We,Qe,jt)},Te=(L,G,te,be,Se,Ce,nt,We,Qe)=>{for(var Ue=0,wt=G.length,jt=L.length-1,Vt=wt-1;Ue<=jt&&Ue<=Vt;){var Bt=L[Ue],lr=G[Ue]=Qe?Ir(G[Ue]):Ii(G[Ue]);if(Wr(Bt,lr))ct(Bt,lr,te,null,Se,Ce,nt,We,Qe);else break;Ue++}for(;Ue<=jt&&Ue<=Vt;){var Hn=L[jt],un=G[Vt]=Qe?Ir(G[Vt]):Ii(G[Vt]);if(Wr(Hn,un))ct(Hn,un,te,null,Se,Ce,nt,We,Qe);else break;jt--,Vt--}if(Ue>jt){if(Ue<=Vt)for(var Sn=Vt+1,ei=Sn<wt?G[Sn].el:be;Ue<=Vt;)ct(null,G[Ue]=Qe?Ir(G[Ue]):Ii(G[Ue]),te,ei,Se,Ce,nt,We,Qe),Ue++}else if(Ue>Vt)for(;Ue<=jt;)qe(L[Ue],Se,Ce,!0),Ue++;else{var lo=Ue,Yn=Ue,Si=new Map;for(Ue=Yn;Ue<=Vt;Ue++){var No=G[Ue]=Qe?Ir(G[Ue]):Ii(G[Ue]);No.key!=null&&(Si.has(No.key)&&P("Duplicate keys found during update:",JSON.stringify(No.key),"Make sure keys are unique."),Si.set(No.key,Ue))}var wi,j=0,re=Vt-Yn+1,Pe=!1,Fe=0,je=new Array(re);for(Ue=0;Ue<re;Ue++)je[Ue]=0;for(Ue=lo;Ue<=jt;Ue++){var rt=L[Ue];if(j>=re){qe(rt,Se,Ce,!0);continue}var pt=void 0;if(rt.key!=null)pt=Si.get(rt.key);else for(wi=Yn;wi<=Vt;wi++)if(je[wi-Yn]===0&&Wr(rt,G[wi])){pt=wi;break}pt===void 0?qe(rt,Se,Ce,!0):(je[pt-Yn]=Ue+1,pt>=Fe?Fe=pt:Pe=!0,ct(rt,G[pt],te,null,Se,Ce,nt,We,Qe),j++)}var Le=Pe?jl(je):v.EMPTY_ARR;for(wi=Le.length-1,Ue=re-1;Ue>=0;Ue--){var it=Yn+Ue,Ke=G[it],Lt=it+1<wt?G[it+1].el:be;je[Ue]===0?ct(null,Ke,te,Lt,Se,Ce,nt,We,Qe):Pe&&(wi<0||Ue!==Le[wi]?dt(Ke,te,Lt,2):wi--)}}},dt=function(L,G,te,be){var Se=arguments.length>4&&arguments[4]!==void 0?arguments[4]:null,{el:Ce,type:nt,transition:We,children:Qe,shapeFlag:Ue}=L;if(Ue&6){dt(L.component.subTree,G,te,be);return}if(Ue&128){L.suspense.move(G,te,be);return}if(Ue&64){nt.move(L,G,te,tt);return}if(nt===gr){E(Ce,G,te);for(var wt=0;wt<Qe.length;wt++)dt(Qe[wt],G,te,be);E(L.anchor,G,te);return}if(nt===Fn){Ne(L,G,te);return}var jt=be!==2&&Ue&1&&We;if(jt)if(be===0)We.beforeEnter(Ce),E(Ce,G,te),jr(()=>We.enter(Ce),Se);else{var{leave:Vt,delayLeave:Bt,afterLeave:lr}=We,Hn=()=>E(Ce,G,te),un=()=>{Vt(Ce,()=>{Hn(),lr&&lr()})};Bt?Bt(Ce,Hn,un):un()}else E(Ce,G,te)},qe=function(L,G,te){var be=arguments.length>3&&arguments[3]!==void 0?arguments[3]:!1,Se=arguments.length>4&&arguments[4]!==void 0?arguments[4]:!1,{type:Ce,props:nt,ref:We,children:Qe,dynamicChildren:Ue,shapeFlag:wt,patchFlag:jt,dirs:Vt}=L;if(We!=null&&$t(We,null,te,L,!0),wt&256){G.ctx.deactivate(L);return}var Bt=wt&1&&Vt,lr=!Zn(L),Hn;if(lr&&(Hn=nt&&nt.onVnodeBeforeUnmount)&&ki(Hn,G,L),wt&6)oe(L.component,te,be);else{if(wt&128){L.suspense.unmount(te,be);return}Bt&&Di(L,null,G,"beforeUnmount"),wt&64?L.type.remove(L,G,te,Se,tt,be):Ue&&(Ce!==gr||jt>0&&jt&64)?he(Ue,G,te,!1,!0):(Ce===gr&&jt&(128|256)||!Se&&wt&16)&&he(Qe,G,te),be&&Pt(L)}(lr&&(Hn=nt&&nt.onVnodeUnmounted)||Bt)&&jr(()=>{Hn&&ki(Hn,G,L),Bt&&Di(L,null,G,"unmounted")},te)},Pt=L=>{var{type:G,el:te,anchor:be,transition:Se}=L;if(G===gr){L.patchFlag>0&&L.patchFlag&2048&&Se&&!Se.persisted?L.children.forEach(Ue=>{Ue.type===Ln?N(Ue.el):Pt(Ue)}):Mt(te,be);return}if(G===Fn){Xe(L);return}var Ce=()=>{N(te),Se&&!Se.persisted&&Se.afterLeave&&Se.afterLeave()};if(L.shapeFlag&1&&Se&&!Se.persisted){var{leave:nt,delayLeave:We}=Se,Qe=()=>nt(te,Ce);We?We(L.el,Ce,Qe):Qe()}else Ce()},Mt=(L,G)=>{for(var te;L!==G;)te=ke(L),N(L),L=te;N(G)},oe=(L,G,te)=>{L.type.__hmrId&&xo(L);var{bum:be,scope:Se,update:Ce,subTree:nt,um:We}=L;be&&v.invokeArrayFns(be),Se.stop(),Ce&&(Ce.active=!1,qe(nt,L,G,te)),We&&jr(We,G),jr(()=>{L.isUnmounted=!0},G),G&&G.pendingBranch&&!G.isUnmounted&&L.asyncDep&&!L.asyncResolved&&L.suspenseId===G.pendingId&&(G.deps--,G.deps===0&&G.resolve()),ri(L)},he=function(L,G,te){for(var be=arguments.length>3&&arguments[3]!==void 0?arguments[3]:!1,Se=arguments.length>4&&arguments[4]!==void 0?arguments[4]:!1,Ce=arguments.length>5&&arguments[5]!==void 0?arguments[5]:0,nt=Ce;nt<L.length;nt++)qe(L[nt],G,te,be,Se)},_e=L=>L.shapeFlag&6?_e(L.component.subTree):L.shapeFlag&128?L.suspense.next():ke(L.anchor||L.el),He=!1,at=(L,G,te)=>{L==null?G._vnode&&qe(G._vnode,null,null,!0):ct(G._vnode||null,L,G,null,null,null,te),He||(He=!0,nr(),qr(),He=!1),G._vnode=L},tt={p:ct,um:qe,m:dt,r:Pt,mt:M,mc:d,pc:Y,pbc:A,n:_e,o},bt,Ye;return c&&([bt,Ye]=c(tt)),{render:at,hydrate:bt,createApp:Zr(at,bt)}}function Ks(o,c){var{type:g,props:E}=o;return c==="svg"&&g==="foreignObject"||c==="mathml"&&g==="annotation-xml"&&E&&E.encoding&&E.encoding.includes("html")?void 0:c}function sa(o,c){var{effect:g,update:E}=o;g.allowRecurse=E.allowRecurse=c}function Vi(o,c){return(!o||o&&!o.pendingBranch)&&c&&!c.persisted}function As(o,c){var g=arguments.length>2&&arguments[2]!==void 0?arguments[2]:!1,E=o.children,N=c.children;if(v.isArray(E)&&v.isArray(N))for(var T=0;T<E.length;T++){var R=E[T],z=N[T];z.shapeFlag&1&&!z.dynamicChildren&&((z.patchFlag<=0||z.patchFlag===32)&&(z=N[T]=Ir(N[T]),z.el=R.el),g||As(R,z)),z.type===Bn&&(z.el=R.el),z.type===Ln&&!z.el&&(z.el=R.el)}}function jl(o){var c=o.slice(),g=[0],E,N,T,R,z,$=o.length;for(E=0;E<$;E++){var X=o[E];if(X!==0){if(N=g[g.length-1],o[N]<X){c[E]=N,g.push(E);continue}for(T=0,R=g.length-1;T<R;)z=T+R>>1,o[g[z]]<X?T=z+1:R=z;X<o[g[T]]&&(T>0&&(c[E]=g[T-1]),g[T]=E)}}for(T=g.length,R=g[T-1];T-- >0;)g[T]=R,R=c[R];return g}function zl(o){var c=o.subTree.component;if(c)return c.asyncDep&&!c.asyncResolved?c:zl(c)}var vc=o=>o.__isTeleport,Os=o=>o&&(o.disabled||o.disabled===""),ts=o=>typeof SVGElement!="undefined"&&o instanceof SVGElement,Sl=o=>typeof MathMLElement=="function"&&o instanceof MathMLElement,Ts=(o,c)=>{var g=o&&o.to;if(v.isString(g))if(c){var E=c(g);return E||P('Failed to locate Teleport target with selector "'.concat(g,'". Note the target element must exist before the component is mounted - i.e. the target cannot be rendered by the component itself, and ideally should be outside of the entire Vue component tree.')),E}else return P("Current renderer does not support string target for Teleports. (missing querySelector renderer option)"),null;else return!g&&!Os(o)&&P("Invalid Teleport target: ".concat(g)),g},_c={name:"Teleport",__isTeleport:!0,process(o,c,g,E,N,T,R,z,$,X){var{mc:ye,pc:ce,pbc:ae,o:{insert:ke,querySelector:Be,createText:Et,createComment:ct}}=X,kt=Os(c.props),{shapeFlag:xt,children:fe,dynamicChildren:Ie}=c;if(gi&&($=!1,Ie=null),o==null){var Ne=c.el=ct("teleport start"),Xe=c.anchor=ct("teleport end");ke(Ne,g,E),ke(Xe,g,E);var lt=c.target=Ts(c.props,Be),i=c.targetAnchor=Et("");lt?(ke(i,lt),R==="svg"||ts(lt)?R="svg":(R==="mathml"||Sl(lt))&&(R="mathml")):kt||P("Invalid Teleport target on mount:",lt,"(".concat(typeof lt,")"));var s=(J,Q)=>{xt&16&&ye(fe,J,Q,N,T,R,z,$)};kt?s(g,Xe):lt&&s(lt,i)}else{c.el=o.el;var d=c.anchor=o.anchor,m=c.target=o.target,A=c.targetAnchor=o.targetAnchor,C=Os(o.props),x=C?g:m,V=C?d:A;if(R==="svg"||ts(m)?R="svg":(R==="mathml"||Sl(m))&&(R="mathml"),Ie?(ae(o.dynamicChildren,Ie,x,N,T,R,z),As(o,c,!0)):$||ce(o,c,x,V,N,T,R,z,!1),kt)C?c.props&&o.props&&c.props.to!==o.props.to&&(c.props.to=o.props.to):wl(c,g,d,X,1);else if((c.props&&c.props.to)!==(o.props&&o.props.to)){var M=c.target=Ts(c.props,Be);M?wl(c,M,null,X,0):P("Invalid Teleport target on update:",m,"(".concat(typeof m,")"))}else C&&wl(c,m,A,X,1)}Zs(c)},remove(o,c,g,E,N,T){var{um:R,o:{remove:z}}=N,{shapeFlag:$,children:X,anchor:ye,targetAnchor:ce,target:ae,props:ke}=o;if(ae&&z(ce),T&&z(ye),$&16)for(var Be=T||!Os(ke),Et=0;Et<X.length;Et++){var ct=X[Et];R(ct,c,g,Be,!!ct.dynamicChildren)}},move:wl,hydrate:Wl};function wl(o,c,g,E){var{o:{insert:N},m:T}=E,R=arguments.length>4&&arguments[4]!==void 0?arguments[4]:2;R===0&&N(o.targetAnchor,c,g);var{el:z,anchor:$,shapeFlag:X,children:ye,props:ce}=o,ae=R===2;if(ae&&N(z,c,g),(!ae||Os(ce))&&X&16)for(var ke=0;ke<ye.length;ke++)T(ye[ke],c,g,2);ae&&N($,c,g)}function Wl(o,c,g,E,N,T,R,z){var{o:{nextSibling:$,parentNode:X,querySelector:ye}}=R,ce=c.target=Ts(c.props,ye);if(ce){var ae=ce._lpa||ce.firstChild;if(c.shapeFlag&16)if(Os(c.props))c.anchor=z($(o),c,X(o),g,E,N,T),c.targetAnchor=ae;else{c.anchor=$(o);for(var ke=ae;ke;)if(ke=$(ke),ke&&ke.nodeType===8&&ke.data==="teleport anchor"){c.targetAnchor=ke,ce._lpa=c.targetAnchor&&$(c.targetAnchor);break}z(ae,c,ce,g,E,N,T)}Zs(c)}return c.anchor&&$(c.anchor)}var Ra=_c;function Zs(o){var c=o.ctx;if(c&&c.ut){for(var g=o.children[0].el;g&&g!==o.targetAnchor;)g.nodeType===1&&g.setAttribute("data-v-owner",c.uid),g=g.nextSibling;c.ut()}}var gr=Symbol.for("v-fgt"),Bn=Symbol.for("v-txt"),Ln=Symbol.for("v-cmt"),Fn=Symbol.for("v-stc"),$i=[],zr=null;function Qr(){var o=arguments.length>0&&arguments[0]!==void 0?arguments[0]:!1;$i.push(zr=o?null:[])}function Xs(){$i.pop(),zr=$i[$i.length-1]||null}var la=1;function ca(o){la+=o}function ns(o){return o.dynamicChildren=la>0?zr||v.EMPTY_ARR:null,Xs(),la>0&&zr&&zr.push(o),o}function Ni(o,c,g,E,N,T){return ns(Ps(o,c,g,E,N,T,!0))}function Oo(o,c,g,E,N){return ns(Xn(o,c,g,E,N,!0))}function To(o){return o?o.__v_isVNode===!0:!1}function Wr(o,c){return c.shapeFlag&6&&Tr.has(c.type)?(o.shapeFlag&=~256,c.shapeFlag&=~512,!1):o.type===c.type&&o.key===c.key}var oo;function Gl(o){oo=o}var Iu=function(){for(var o=arguments.length,c=new Array(o),g=0;g<o;g++)c[g]=arguments[g];return sr(...oo?oo(c,hn):c)},Cl="__vInternal",Qs=o=>{var{key:c}=o;return c!=null?c:null},Al=o=>{var{ref:c,ref_key:g,ref_for:E}=o;return typeof c=="number"&&(c=""+c),c!=null?v.isString(c)||k.isRef(c)||v.isFunction(c)?{i:hn,r:c,k:g,f:!!E}:c:null};function Ps(o){var c=arguments.length>1&&arguments[1]!==void 0?arguments[1]:null,g=arguments.length>2&&arguments[2]!==void 0?arguments[2]:null,E=arguments.length>3&&arguments[3]!==void 0?arguments[3]:0,N=arguments.length>4&&arguments[4]!==void 0?arguments[4]:null,T=arguments.length>5&&arguments[5]!==void 0?arguments[5]:o===gr?0:1,R=arguments.length>6&&arguments[6]!==void 0?arguments[6]:!1,z=arguments.length>7&&arguments[7]!==void 0?arguments[7]:!1,$={__v_isVNode:!0,__v_skip:!0,type:o,props:c,key:c&&Qs(c),ref:c&&Al(c),scopeId:An,slotScopeIds:null,children:g,component:null,suspense:null,ssContent:null,ssFallback:null,dirs:null,transition:null,el:null,anchor:null,target:null,targetAnchor:null,staticCount:0,shapeFlag:T,patchFlag:E,dynamicProps:N,dynamicChildren:null,appContext:null,hostInstance:hn,ctx:hn};return z?(Wo($,g),T&128&&o.normalize($)):g&&($.shapeFlag|=v.isString(g)?8:16),$.key!==$.key&&P("VNode created with invalid key (NaN). VNode type:",$.type),la>0&&!R&&zr&&($.patchFlag>0||T&6)&&$.patchFlag!==32&&zr.push($),$}var Xn=Iu;function sr(o){var c=arguments.length>1&&arguments[1]!==void 0?arguments[1]:null,g=arguments.length>2&&arguments[2]!==void 0?arguments[2]:null,E=arguments.length>3&&arguments[3]!==void 0?arguments[3]:0,N=arguments.length>4&&arguments[4]!==void 0?arguments[4]:null,T=arguments.length>5&&arguments[5]!==void 0?arguments[5]:!1;if((!o||o===Qo)&&(o||P("Invalid vnode type when creating vnode: ".concat(o,".")),o=Ln),To(o)){var R=Hi(o,c,!0);return g&&Wo(R,g),la>0&&!T&&zr&&(R.shapeFlag&6?zr[zr.indexOf(o)]=R:zr.push(R)),R.patchFlag|=-2,R}if(as(o)&&(o=o.__vccOpts),c){c=ql(c);var{class:z,style:$}=c;z&&!v.isString(z)&&(c.class=v.normalizeClass(z)),v.isObject($)&&(k.isProxy($)&&!v.isArray($)&&($=v.extend({},$)),c.style=v.normalizeStyle($))}var X=v.isString(o)?1:Kr(o)?128:vc(o)?64:v.isObject(o)?4:v.isFunction(o)?2:0;return X&4&&k.isProxy(o)&&(o=k.toRaw(o),P("Vue received a Component that was made a reactive object. This can lead to unnecessary performance overhead and should be avoided by marking the component with `markRaw` or using `shallowRef` instead of `ref`.",`
Component that was made reactive: `,o)),Ps(o,c,g,E,N,X,T,!0)}function ql(o){return o?k.isProxy(o)||Cl in o?v.extend({},o):o:null}function Hi(o,c){var g=arguments.length>2&&arguments[2]!==void 0?arguments[2]:!1,{props:E,ref:N,patchFlag:T,children:R}=o,z=c?Jl(E||{},c):E,$={__v_isVNode:!0,__v_skip:!0,type:o.type,props:z,key:z&&Qs(z),ref:c&&c.ref?g&&N?v.isArray(N)?N.concat(Al(c)):[N,Al(c)]:Al(c):N,scopeId:o.scopeId,slotScopeIds:o.slotScopeIds,children:T===-1&&v.isArray(R)?R.map(ji):R,target:o.target,targetAnchor:o.targetAnchor,staticCount:o.staticCount,shapeFlag:o.shapeFlag,patchFlag:c&&o.type!==gr?T===-1?16:T|16:T,dynamicProps:o.dynamicProps,dynamicChildren:o.dynamicChildren,appContext:o.appContext,hostInstance:o.hostInstance,dirs:o.dirs,transition:o.transition,component:o.component,suspense:o.suspense,ssContent:o.ssContent&&Hi(o.ssContent),ssFallback:o.ssFallback&&Hi(o.ssFallback),el:o.el,anchor:o.anchor,ctx:o.ctx,ce:o.ce};return $}function ji(o){var c=Hi(o);return v.isArray(o.children)&&(c.children=o.children.map(ji)),c}function Yl(){var o=arguments.length>0&&arguments[0]!==void 0?arguments[0]:" ",c=arguments.length>1&&arguments[1]!==void 0?arguments[1]:0;return Xn(Bn,null,o,c)}function bc(o,c){var g=Xn(Fn,null,o);return g.staticCount=c,g}function ku(){var o=arguments.length>0&&arguments[0]!==void 0?arguments[0]:"",c=arguments.length>1&&arguments[1]!==void 0?arguments[1]:!1;return c?(Qr(),Oo(Ln,null,o)):Xn(Ln,null,o)}function Ii(o){return o==null||typeof o=="boolean"?Xn(Ln):v.isArray(o)?Xn(gr,null,o.slice()):typeof o=="object"?Ir(o):Xn(Bn,null,String(o))}function Ir(o){return o.el===null&&o.patchFlag!==-1||o.memo?o:Hi(o)}function Wo(o,c){var g=0,{shapeFlag:E}=o;if(c==null)c=null;else if(v.isArray(c))g=16;else if(typeof c=="object")if(E&(1|64)){var N=c.default;N&&(N._c&&(N._d=!1),Wo(o,N()),N._c&&(N._d=!0));return}else{g=32;var T=c._;!T&&!(Cl in c)?c._ctx=hn:T===3&&hn&&(hn.slots._===1?c._=1:(c._=2,o.patchFlag|=1024))}else v.isFunction(c)?(c={default:c,_ctx:hn},g=32):(c=String(c),E&64?(g=16,c=[Yl(c)]):g=8);o.children=c,o.shapeFlag|=g}function Jl(){for(var o={},c=0;c<arguments.length;c++){var g=c<0||arguments.length<=c?void 0:arguments[c];for(var E in g)if(E==="class")o.class!==g.class&&(o.class=v.normalizeClass([o.class,g.class]));else if(E==="style")o.style=v.normalizeStyle([o.style,g.style]);else if(v.isOn(E)){var N=o[E],T=g[E];T&&N!==T&&!(v.isArray(N)&&N.includes(T))&&(o[E]=N?[].concat(N,T):T)}else E!==""&&(o[E]=g[E])}return o}function ki(o,c,g){var E=arguments.length>3&&arguments[3]!==void 0?arguments[3]:null;In(o,c,7,[g,E])}var zi=bs(),xu=0;function yc(o,c,g){var E=o.type,N=(c?c.appContext:o.appContext)||zi,T={uid:xu++,vnode:o,type:E,parent:c,appContext:N,root:null,next:null,subTree:null,effect:null,update:null,scope:new k.EffectScope(!0),render:null,proxy:null,exposed:null,exposeProxy:null,withProxy:null,provides:c?c.provides:Object.create(N.provides),accessCache:null,renderCache:[],components:null,directives:null,propsOptions:js(E,N),emitsOptions:Ko(E,N),emit:null,emitted:null,propsDefaults:v.EMPTY_OBJ,inheritAttrs:E.inheritAttrs,ctx:v.EMPTY_OBJ,data:v.EMPTY_OBJ,props:v.EMPTY_OBJ,attrs:v.EMPTY_OBJ,slots:v.EMPTY_OBJ,refs:v.EMPTY_OBJ,setupState:v.EMPTY_OBJ,setupContext:null,attrsProxy:null,slotsProxy:null,suspense:g,suspenseId:g?g.pendingId:0,asyncDep:null,asyncResolved:!1,isMounted:!1,isUnmounted:!1,isDeactivated:!1,bc:null,c:null,bm:null,m:null,bu:null,u:null,um:null,bum:null,da:null,a:null,rtg:null,rtc:null,ec:null,sp:null};return T.ctx=Dl(T),T.root=c?c.root:T,T.emit=Ro.bind(null,T),o.ce&&o.ce(T),T}var pr=null,Pn=()=>pr||hn,ao,Ns;{var el=v.getGlobalThis(),ui=(o,c)=>{var g;return(g=el[o])||(g=el[o]=[]),g.push(c),E=>{g.length>1?g.forEach(N=>N(E)):g[0](E)}};ao=ui("__VUE_INSTANCE_SETTERS__",o=>pr=o),Ns=ui("__VUE_SSR_SETTERS__",o=>h.isInSSRComponentSetup=o)}var Gr=o=>{var c=pr;return ao(o),o.scope.on(),()=>{o.scope.off(),ao(c)}},ua=()=>{pr&&pr.scope.off(),ao(null)},fa=v.makeMap("slot,component");function Ec(o,c){var{isNativeTag:g}=c;(fa(o)||g(o))&&P("Do not use built-in or reserved HTML elements as component id: "+o)}function da(o){return o.vnode.shapeFlag&4}h.isInSSRComponentSetup=!1;function Sc(o){var c=arguments.length>1&&arguments[1]!==void 0?arguments[1]:!1;c&&Ns(c);var{props:g,children:E}=o.vnode,N=da(o);Ka(o,g,N,c),gc(o,E);var T=N?Yc(o,c):void 0;return c&&Ns(!1),T}function Yc(o,c){var g,E=o.type;{if(E.name&&Ec(E.name,o.appContext.config),E.components)for(var N=Object.keys(E.components),T=0;T<N.length;T++)Ec(N[T],o.appContext.config);if(E.directives)for(var R=Object.keys(E.directives),z=0;z<R.length;z++)eo(R[z]);E.compilerOptions&&so()&&P('"compilerOptions" is only supported when using a build of Vue that includes the runtime compiler. Since you are using a runtime-only build, the options should be passed via your build tool config instead.')}o.accessCache=Object.create(null),o.proxy=k.markRaw(new Proxy(o.ctx,wo)),Gc(o);var{setup:$}=E;if($){var X=o.setupContext=$.length>1?Jc(o):null,ye=Gr(o);k.pauseTracking();var ce=sn($,o,0,[k.shallowReadonly(o.props),X]);if(k.resetTracking(),ye(),v.isPromise(ce)){if(ce.then(ua,ua),c)return ce.then(ke=>{pa(o,ke,c)}).catch(ke=>{Lr(ke,o,0)});if(o.asyncDep=ce,!o.suspense){var ae=(g=E.name)!=null?g:"Anonymous";P("Component <".concat(ae,">: setup function returned a promise, but no <Suspense> boundary was found in the parent component tree. A component with async setup() must be nested in a <Suspense> in order to be rendered."))}}else pa(o,ce,c)}else wc(o,c)}function pa(o,c,g){v.isFunction(c)?o.type.__ssrInlineRender?o.ssrRender=c:o.render=c:v.isObject(c)?(To(c)&&P("setup() should not return VNodes directly - return a render function instead."),o.devtoolsRawSetupState=c,o.setupState=k.proxyRefs(c),S(o)):c!==void 0&&P("setup() should return an object. Received: ".concat(c===null?"null":typeof c)),wc(o,g)}var rs,Ei;function Kl(o){rs=o,Ei=c=>{c.render._rc&&(c.withProxy=new Proxy(c.ctx,vs))}}var so=()=>!rs;function wc(o,c,g){var E=o.type;if(!o.render){if(!c&&rs&&!E.render){var N=E.template||ir(o).template;if(N){li(o,"compile");var{isCustomElement:T,compilerOptions:R}=o.appContext.config,{delimiters:z,compilerOptions:$}=E,X=v.extend(v.extend({isCustomElement:T,delimiters:z},R),$);E.render=rs(N,X),ci(o,"compile")}}o.render=E.render||v.NOOP,Ei&&Ei(o)}{var ye=Gr(o);k.pauseTracking();try{Rn(o)}finally{k.resetTracking(),ye()}}!E.render&&o.render===v.NOOP&&!c&&(!rs&&E.template?P('Component provided template option but runtime compilation is not supported in this build of Vue. Configure your bundler to alias "vue" to "vue/dist/vue.esm-bundler.js".'):P("Component is missing template or render function."))}function Zl(o){return o.attrsProxy||(o.attrsProxy=new Proxy(o.attrs,{get(c,g){return Xi(),k.track(o,"get","$attrs"),c[g]},set(){return P("setupContext.attrs is readonly."),!1},deleteProperty(){return P("setupContext.attrs is readonly."),!1}}))}function Ru(o){return o.slotsProxy||(o.slotsProxy=new Proxy(o.slots,{get(c,g){return k.track(o,"get","$slots"),c[g]}}))}function Jc(o){var c=g=>{if(o.exposed&&P("expose() should be called only once per setup()."),g!=null){var E=typeof g;E==="object"&&(v.isArray(g)?E="array":k.isRef(g)&&(E="ref")),E!=="object"&&P("expose() should be passed a plain object, received ".concat(E,"."))}o.exposed=g||{}};return Object.freeze({get attrs(){return Zl(o)},get slots(){return Ru(o)},get emit(){return function(g){for(var E=arguments.length,N=new Array(E>1?E-1:0),T=1;T<E;T++)N[T-1]=arguments[T];return o.emit(g,...N)}},expose:c})}function is(o){if(o.exposed)return o.exposeProxy||(o.exposeProxy=new Proxy(k.proxyRefs(k.markRaw(o.exposed)),{get(c,g){if(g in c)return c[g];if(g in $o)return $o[g](o)},has(c,g){return g in c||g in $o}}))}var Xl=/(?:^|[-_])(\w)/g,Mu=o=>o.replace(Xl,c=>c.toUpperCase()).replace(/[-_]/g,"");function Ol(o){var c=arguments.length>1&&arguments[1]!==void 0?arguments[1]:!0;return v.isFunction(o)?o.displayName||o.name:o.name||c&&o.__name}function os(o,c){var g=arguments.length>2&&arguments[2]!==void 0?arguments[2]:!1,E=Ol(c);if(!E&&c.__file){var N=c.__file.match(/([^/\\]+)\.\w+$/);N&&(E=N[1])}if(!E&&o&&o.parent){var T=R=>{for(var z in R)if(R[z]===c)return z};E=T(o.components||o.parent.type.components)||T(o.appContext.components)}return E?Mu(E):g?"App":"Anonymous"}function as(o){return v.isFunction(o)&&"__vccOpts"in o}var Cc=(o,c)=>{var g=k.computed(o,c,h.isInSSRComponentSetup);{var E=Pn();E&&E.appContext.config.warnRecursiveComputed&&(g._warnRecursive=!0)}return g};function Kc(o,c){var g=arguments.length>2&&arguments[2]!==void 0?arguments[2]:v.EMPTY_OBJ,E=Pn();if(!E)return P("useModel() called without active instance."),k.ref();if(!E.propsOptions[0][c])return P('useModel() called with prop "'.concat(c,'" which is not declared.')),k.ref();var N=v.camelize(c),T=v.hyphenate(c),R=k.customRef(($,X)=>{var ye;return et(()=>{var ce=o[c];v.hasChanged(ye,ce)&&(ye=ce,X())}),{get(){return $(),g.get?g.get(ye):ye},set(ce){var ae=E.vnode.props;!(ae&&(c in ae||N in ae||T in ae)&&("onUpdate:".concat(c)in ae||"onUpdate:".concat(N)in ae||"onUpdate:".concat(T)in ae))&&v.hasChanged(ce,ye)&&(ye=ce,X()),E.emit("update:".concat(c),g.set?g.set(ce):ce)}}}),z=c==="modelValue"?"modelModifiers":"".concat(c,"Modifiers");return R[Symbol.iterator]=()=>{var $=0;return{next(){return $<2?{value:$++?o[z]||{}:R,done:!1}:{done:!0}}}},R}function Bu(o,c,g){var E=arguments.length;return E===2?v.isObject(c)&&!v.isArray(c)?To(c)?Xn(o,null,[c]):Xn(o,c):Xn(o,null,c):(E>3?g=Array.prototype.slice.call(arguments,2):E===3&&To(g)&&(g=[g]),Xn(o,c,g))}function Zc(){if(typeof window=="undefined")return;var o={style:"color:#3ba776"},c={style:"color:#1677ff"},g={style:"color:#f5222d"},E={style:"color:#eb2f96"},N={header(ce){return v.isObject(ce)?ce.__isVue?["div",o,"VueInstance"]:k.isRef(ce)?["div",{},["span",o,ye(ce)],"<",z(ce.value),">"]:k.isReactive(ce)?["div",{},["span",o,k.isShallow(ce)?"ShallowReactive":"Reactive"],"<",z(ce),">".concat(k.isReadonly(ce)?" (readonly)":"")]:k.isReadonly(ce)?["div",{},["span",o,k.isShallow(ce)?"ShallowReadonly":"Readonly"],"<",z(ce),">"]:null:null},hasBody(ce){return ce&&ce.__isVue},body(ce){if(ce&&ce.__isVue)return["div",{},...T(ce.$)]}};function T(ce){var ae=[];ce.type.props&&ce.props&&ae.push(R("props",k.toRaw(ce.props))),ce.setupState!==v.EMPTY_OBJ&&ae.push(R("setup",ce.setupState)),ce.data!==v.EMPTY_OBJ&&ae.push(R("data",k.toRaw(ce.data)));var ke=$(ce,"computed");ke&&ae.push(R("computed",ke));var Be=$(ce,"inject");return Be&&ae.push(R("injected",Be)),ae.push(["div",{},["span",{style:E.style+";opacity:0.66"},"$ (internal): "],["object",{object:ce}]]),ae}function R(ce,ae){return ae=v.extend({},ae),Object.keys(ae).length?["div",{style:"line-height:1.25em;margin-bottom:0.6em"},["div",{style:"color:#476582"},ce],["div",{style:"padding-left:1.25em"},...Object.keys(ae).map(ke=>["div",{},["span",E,ke+": "],z(ae[ke],!1)])]]:["span",{}]}function z(ce){var ae=arguments.length>1&&arguments[1]!==void 0?arguments[1]:!0;return typeof ce=="number"?["span",c,ce]:typeof ce=="string"?["span",g,JSON.stringify(ce)]:typeof ce=="boolean"?["span",E,ce]:v.isObject(ce)?["object",{object:ae?k.toRaw(ce):ce}]:["span",g,String(ce)]}function $(ce,ae){var ke=ce.type;if(!v.isFunction(ke)){var Be={};for(var Et in ce.ctx)X(ke,Et,ae)&&(Be[Et]=ce.ctx[Et]);return Be}}function X(ce,ae,ke){var Be=ce[ke];if(v.isArray(Be)&&Be.includes(ae)||v.isObject(Be)&&ae in Be||ce.extends&&X(ce.extends,ae,ke)||ce.mixins&&ce.mixins.some(Et=>X(Et,ae,ke)))return!0}function ye(ce){return k.isShallow(ce)?"ShallowRef":ce.effect?"ComputedRef":"Ref"}window.devtoolsFormatters?window.devtoolsFormatters.push(N):window.devtoolsFormatters=[N]}function Lu(o,c,g,E){var N=g[E];if(N&&Ql(N,o))return N;var T=c();return T.memo=o.slice(),g[E]=T}function Ql(o,c){var g=o.memo;if(g.length!=c.length)return!1;for(var E=0;E<g.length;E++)if(v.hasChanged(g[E],c[E]))return!1;return la>0&&zr&&zr.push(o),!0}var ec="3.4.21",ss=P,ls=Jn,Fu=mn,yn=mi,cs={createComponentInstance:yc,setupComponent:Sc,renderComponentRoot:tn,setCurrentRenderingInstance:Jr,isVNode:To,normalizeVNode:Ii},Go=cs,Du=null,tc=null,Ac=null,nc={insert:(o,c,g)=>g?c.insertBefore(o,g):c.appendChild(o),remove:o=>{var c=o.parentNode;c&&c.removeChild(o)},createElement:o=>a.createElement(o),createText:o=>a.createText(o),createComment:o=>a.createComment(o),setText:(o,c)=>{o.setAttr("value",c)},setElementText:(o,c)=>{o.setAttr("value",c)},parentNode:o=>o.parentNode,nextSibling:o=>o.nextSibling};function ha(o){return Object.keys(o)}function Is(o){var c={};return v.isArray(o)&&o.forEach(g=>{ha(g).forEach(E=>{var N=g[E],T=c[E]||(c[E]={});ha(N).forEach(R=>{var z=N[R],$=T[R]||(T[R]={});ha(z).forEach(X=>{X[0]==="!"?($[X]=z[X],delete $[X.slice(1)]):v.hasOwn($,"!"+X)||($[X]=z[X])})})})}),c}function ga(o,c){var g=c&&c.classList;return g&&g.includes(o)}var tl=/[+~> ]$/,kr="parentNode",nl="previousSibling";function ks(o,c){for(var g=o.split("."),E=g.length-1;E>0;E--){var N=g[E],T=N[N.length-1],R=N.replace(tl,"");if(T==="~"||T===" "){for(var z=T==="~"?nl:kr;c&&(c=c[z],!ga(R,c)););if(!c)return!1}else if(T===">"?c=c&&c[kr]:T==="+"&&(c=c&&c[nl]),!ga(R,c))return!1}return!0}var rl=1e3;function Xc(o,c,g){var{styles:E,weights:N}=o;ha(c).forEach(T=>{if(!(T&&g&&!ks(T,g))){var R=T.split(".").length,z=c[T];ha(z).forEach($=>{var X=z[$],ye=$[0]==="!";ye&&($=$.slice(1));var ce=N[$]||0,ae=R+(ye?rl:0);ae>=ce&&(N[$]=ae,E[$]=X)})}})}function Ma(o,c){var g=arguments.length>2&&arguments[2]!==void 0?arguments[2]:null,E={styles:{},weights:{}};return o.forEach(N=>{var T=c[N];T&&Xc(E,T,g)}),E.styles}function Qc(o){return Ma(o.classList,o.styleSheet,o)}function ma(o,c){var g=arguments.length>2&&arguments[2]!==void 0?arguments[2]:null;return Ma(o,Ba(c),g)}function Ba(o){var{type:c,appContext:g}=o,E=c;if(!E.__styles)if(g&&v.isArray(g.provides.__globalStyles)&&(g.provides.__globalStyles=Is(g.provides.__globalStyles)),E.mpType==="page"&&g)E.__styles=g.provides.__globalStyles;else{var N=[];g&&N.push(g.provides.__globalStyles),v.isArray(E.styles)&&E.styles.forEach(T=>N.push(T)),E.__styles=Is(N)}return E.__styles}function fi(o,c,g){var E=arguments.length>3&&arguments[3]!==void 0?arguments[3]:null;E&&([c,g]=Oc(o,c,g,E)),o.setAttr(c,g)}var En="hoverClass",il="placeholderClass",eu="placeholderStyle",tu="indicatorClass",La="indicatorStyle",nu="maskClass",va="maskStyle",_a={view:{class:[En],style:[]},button:{class:[En],style:[]},navigator:{class:[En],style:[]},"u-input":{class:[il],style:[eu]},"u-textarea":{class:[il],style:[eu]},"picker-view":{class:[tu,nu],style:[La,va]}};function Oc(o,c,g,E){if(!g)return[c,g];var N=_a[o.type];if(N){var T=v.camelize(c);if(N.class.indexOf(T)>-1)return[T,ma([g],E,o)];if(N.style.indexOf(c)>-1)return v.isString(g)?[T,v.parseStringStyle(g)]:[T,v.normalizeStyle(g)]}return[c,g]}function ru(o,c,g){var E=arguments.length>3&&arguments[3]!==void 0?arguments[3]:null;if(!!E){var N=g?g.split(" "):[];o.setClassList(N),o.setStyleSheet(Ba(E))}}function ba(o,c,g,E){o.addEvent(c,g)}function Po(o,c){o.removeEvent(c)}function iu(o,c,g,E){var N=arguments.length>4&&arguments[4]!==void 0?arguments[4]:null,T=o._vei||(o._vei={}),R=T[c];if(E&&R)R.value=E;else{var[z,$]=rc(c);if(E){var X=T[c]=Uu(E,N);ba(o,z,X)}else R&&(Po(o,z),T[c]=void 0)}}var Tc=/(?:Once|Passive|Capture)$/;function ou(o){return o==="on-post-message"?"onPostMessage":o}function rc(o){var c;if(Tc.test(o)){c={};for(var g;g=o.match(Tc);)o=o.slice(0,o.length-g[0].length),c[g[0].toLowerCase()]=!0}var E=o[2]===":"?o.slice(3):v.hyphenate(o.slice(2));return[ou(E),c]}function Uu(o,c){var g=N=>{In(g.value,c,5,[N])};g.value=o;var E=new Set;return v.isArray(g.value)?g.value.forEach(N=>{N.modifiers&&N.modifiers.forEach(T=>{E.add(T)})}):g.value.modifiers&&g.value.modifiers.forEach(N=>{E.add(N)}),g.modifiers=[...E],g}function ya(o,c,g){if(!!g){v.isString(g)&&(g=v.parseStringStyle(g));var E={},N=c&&!v.isString(c);if(N){for(var T in c)g[T]==null&&(E[v.camelize(T)]="");for(var R in g){var z=g[R];z!==c[R]&&(E[v.camelize(R)]=z)}}else for(var $ in g)E[v.camelize($)]=g[$];o.setStyles(E)}}var xs=["u-input","u-textarea"],au=(o,c,g,E,N,T,R,z,$,X)=>{c==="class"?ru(o,g,E,X||R):c==="style"?ya(o,g,E):v.isOn(c)?v.isModelListener(c)||iu(o,c,g,E,R):c==="modelValue"&&xs.includes(o.type)?o.setAttrs({modelValue:E,value:E}):fi(o,c,E,R)};function Vu(){var o=arguments.length>0&&arguments[0]!==void 0?arguments[0]:"$style";{var c=Pn();if(!c)return ss("useCssModule must be called inside setup()"),v.EMPTY_OBJ;var g=c.type.__cssModules;if(!g)return ss("Current instance does not have CSS modules injected."),v.EMPTY_OBJ;var E=g[o];return E||(ss('Current instance does not have CSS module named "'.concat(o,'".')),v.EMPTY_OBJ)}}function su(o){var c=Pn();if(!c){ss("useCssVars is called without current active component instance.");return}var g=()=>Ea(c.subTree,o(c.proxy));xa(()=>Je(g,{flush:"post"})),Wa(g)}function Ea(o,c){if(o.shapeFlag&128){var g=o.suspense;o=g.activeBranch,g.pendingBranch&&!g.isHydrating&&g.effects.push(()=>{Ea(g.activeBranch,c)})}for(;o.component;)o=o.component.subTree;if(o.shapeFlag&1&&o.el){var E=o.el.style;for(var N in c)E.setProperty("--".concat(N),c[N])}else o.type===gr&&o.children.forEach(T=>Ea(T,c))}var Tl=["ctrl","shift","alt","meta"],Pc={stop:o=>o.stopPropagation(),prevent:o=>o.preventDefault(),self:o=>o.target!==o.currentTarget,ctrl:o=>!o.ctrlKey,shift:o=>!o.shiftKey,alt:o=>!o.altKey,meta:o=>!o.metaKey,left:o=>"button"in o&&o.button!==0,middle:o=>"button"in o&&o.button!==1,right:o=>"button"in o&&o.button!==2,exact:(o,c)=>Tl.some(g=>o["".concat(g,"Key")]&&!c.includes(g))},Nc=(o,c)=>function(g){for(var E=0;E<c.length;E++){var N=Pc[c[E]];if(N&&N(g,c))return}for(var T=arguments.length,R=new Array(T>1?T-1:0),z=1;z<T;z++)R[z-1]=arguments[z];return o(g,...R)},ol=(o,c)=>g=>{if("key"in g){var E=v.hyphenate(g.key);if(c.some(N=>N===E))return o(g)}},Fa=v.extend({patchProp:au},nc),ic;function lu(){return ic||(ic=Ar(Fa))}var cu=function(){lu().render(...arguments)},Pl=function(){var o=lu().createApp(...arguments),{mount:c}=o;return o.mount=g=>c(g),o};return Object.defineProperty(h,"camelize",{enumerable:!0,get:function(){return v.camelize}}),Object.defineProperty(h,"capitalize",{enumerable:!0,get:function(){return v.capitalize}}),Object.defineProperty(h,"hyphenate",{enumerable:!0,get:function(){return v.hyphenate}}),Object.defineProperty(h,"normalizeClass",{enumerable:!0,get:function(){return v.normalizeClass}}),Object.defineProperty(h,"normalizeProps",{enumerable:!0,get:function(){return v.normalizeProps}}),Object.defineProperty(h,"normalizeStyle",{enumerable:!0,get:function(){return v.normalizeStyle}}),Object.defineProperty(h,"toDisplayString",{enumerable:!0,get:function(){return v.toDisplayString}}),Object.defineProperty(h,"toHandlerKey",{enumerable:!0,get:function(){return v.toHandlerKey}}),Object.defineProperty(h,"EffectScope",{enumerable:!0,get:function(){return k.EffectScope}}),Object.defineProperty(h,"ReactiveEffect",{enumerable:!0,get:function(){return k.ReactiveEffect}}),Object.defineProperty(h,"TrackOpTypes",{enumerable:!0,get:function(){return k.TrackOpTypes}}),Object.defineProperty(h,"TriggerOpTypes",{enumerable:!0,get:function(){return k.TriggerOpTypes}}),Object.defineProperty(h,"customRef",{enumerable:!0,get:function(){return k.customRef}}),Object.defineProperty(h,"effect",{enumerable:!0,get:function(){return k.effect}}),Object.defineProperty(h,"effectScope",{enumerable:!0,get:function(){return k.effectScope}}),Object.defineProperty(h,"getCurrentScope",{enumerable:!0,get:function(){return k.getCurrentScope}}),Object.defineProperty(h,"isProxy",{enumerable:!0,get:function(){return k.isProxy}}),Object.defineProperty(h,"isReactive",{enumerable:!0,get:function(){return k.isReactive}}),Object.defineProperty(h,"isReadonly",{enumerable:!0,get:function(){return k.isReadonly}}),Object.defineProperty(h,"isRef",{enumerable:!0,get:function(){return k.isRef}}),Object.defineProperty(h,"isShallow",{enumerable:!0,get:function(){return k.isShallow}}),Object.defineProperty(h,"markRaw",{enumerable:!0,get:function(){return k.markRaw}}),Object.defineProperty(h,"onScopeDispose",{enumerable:!0,get:function(){return k.onScopeDispose}}),Object.defineProperty(h,"proxyRefs",{enumerable:!0,get:function(){return k.proxyRefs}}),Object.defineProperty(h,"reactive",{enumerable:!0,get:function(){return k.reactive}}),Object.defineProperty(h,"readonly",{enumerable:!0,get:function(){return k.readonly}}),Object.defineProperty(h,"ref",{enumerable:!0,get:function(){return k.ref}}),Object.defineProperty(h,"shallowReactive",{enumerable:!0,get:function(){return k.shallowReactive}}),Object.defineProperty(h,"shallowReadonly",{enumerable:!0,get:function(){return k.shallowReadonly}}),Object.defineProperty(h,"shallowRef",{enumerable:!0,get:function(){return k.shallowRef}}),Object.defineProperty(h,"stop",{enumerable:!0,get:function(){return k.stop}}),Object.defineProperty(h,"toRaw",{enumerable:!0,get:function(){return k.toRaw}}),Object.defineProperty(h,"toRef",{enumerable:!0,get:function(){return k.toRef}}),Object.defineProperty(h,"toRefs",{enumerable:!0,get:function(){return k.toRefs}}),Object.defineProperty(h,"toValue",{enumerable:!0,get:function(){return k.toValue}}),Object.defineProperty(h,"triggerRef",{enumerable:!0,get:function(){return k.triggerRef}}),Object.defineProperty(h,"unref",{enumerable:!0,get:function(){return k.unref}}),h.BaseTransition=Ve,h.BaseTransitionPropsValidators=K,h.Comment=Ln,h.DeprecationTypes=Ac,h.ErrorCodes=Br,h.ErrorTypeStrings=ls,h.Fragment=gr,h.KeepAlive=Bl,h.Static=Fn,h.Suspense=ps,h.Teleport=Ra,h.Text=Bn,h.assertNumber=dn,h.callWithAsyncErrorHandling=In,h.callWithErrorHandling=sn,h.cloneVNode=Hi,h.compatUtils=tc,h.computed=Cc,h.createApp=Pl,h.createBlock=Oo,h.createCommentVNode=ku,h.createElementBlock=Ni,h.createElementVNode=Ps,h.createHydrationRenderer=Js,h.createPropsRestProxy=yt,h.createRenderer=Ar,h.createSlots=Eo,h.createStaticVNode=bc,h.createTextVNode=Yl,h.createVNode=Xn,h.defineAsyncComponent=bo,h.defineComponent=to,h.defineEmits=H,h.defineExpose=ne,h.defineModel=we,h.defineOptions=ie,h.defineProps=W,h.defineSlots=ge,h.devtools=Fu,h.getCurrentInstance=Pn,h.getTransitionRawChildren=dr,h.guardReactiveProps=ql,h.h=Bu,h.handleError=Lr,h.hasInjectionContext=oa,h.initCustomFormatter=Zc,h.inject=Gn,h.injectHook=ia,h.isMemoSame=Ql,h.isRuntimeOnly=so,h.isVNode=To,h.logError=Or,h.mergeDefaults=Tt,h.mergeModels=Rt,h.mergeProps=Jl,h.nextTick=Dt,h.onActivated=ka,h.onBeforeMount=wr,h.onBeforeUnmount=Uo,h.onBeforeUpdate=no,h.onDeactivated=gl,h.onErrorCaptured=ml,h.onMounted=xa,h.onRenderTracked=qa,h.onRenderTriggered=ms,h.onServerPrefetch=Ga,h.onUnmounted=Vo,h.onUpdated=Wa,h.openBlock=Qr,h.parseClassList=ma,h.parseClassStyles=Qc,h.popScopeId=ii,h.provide=Mn,h.pushScopeId=Dn,h.queuePostFlushCb=Fr,h.registerRuntimeCompiler=Kl,h.render=cu,h.renderList=Fl,h.renderSlot=hc,h.resolveComponent=ds,h.resolveDirective=yr,h.resolveDynamicComponent=rn,h.resolveFilter=Du,h.resolveTransitionHooks=on,h.setBlockTracking=ca,h.setDevtoolsHook=yn,h.setTransitionHooks=Un,h.ssrContextKey=pe,h.ssrUtils=Go,h.toHandlers=$s,h.transformVNodeArgs=Gl,h.useAttrs=Ee,h.useCssModule=Vu,h.useCssStyles=Is,h.useCssVars=su,h.useModel=Kc,h.useSSRContext=Ze,h.useSlots=$e,h.useTransitionState=Na,h.version=ec,h.warn=ss,h.watch=fr,h.watchEffect=Je,h.watchPostEffect=mt,h.watchSyncEffect=et,h.withAsyncContext=vt,h.withCtx=Ht,h.withDefaults=Me,h.withDirectives=gs,h.withKeys=ol,h.withMemo=Lu,h.withModifiers=Nc,h.withScopeId=Dr,h}({},b,O,p);return y.__TYPE__="nvue",y}var tv=xk(Fk);var sf={};Tk(sf,{EMPTY_ARR:()=>Vk,EMPTY_OBJ:()=>Uk,NO:()=>Hk,NOOP:()=>$k,camelize:()=>e1,capitalize:()=>Qf,def:()=>o1,extend:()=>fo,getGlobalThis:()=>l1,hasChanged:()=>r1,hasOwn:()=>Dc,hyphenate:()=>Xf,includeBooleanAttr:()=>S1,invokeArrayFns:()=>i1,isArray:()=>Yi,isBooleanAttr:()=>E1,isBuiltInDirective:()=>Xk,isFunction:()=>Qn,isGloballyAllowed:()=>u1,isHTMLTag:()=>_1,isIntegerKey:()=>Kk,isKnownHtmlAttr:()=>w1,isKnownSvgAttr:()=>C1,isMap:()=>nv,isModelListener:()=>zk,isObject:()=>Ou,isOn:()=>jk,isPlainObject:()=>Tu,isPromise:()=>Yk,isRegExp:()=>qk,isRenderableAttrValue:()=>A1,isReservedProp:()=>Zk,isSVGTag:()=>b1,isSet:()=>rv,isString:()=>pi,isSymbol:()=>lp,looseToNumber:()=>a1,makeMap:()=>xl,normalizeClass:()=>up,normalizeProps:()=>g1,normalizeStyle:()=>cp,parseStringStyle:()=>av,remove:()=>Wk,stringifyStyle:()=>h1,toDisplayString:()=>O1,toHandlerKey:()=>n1,toNumber:()=>s1,toRawType:()=>Jk,toTypeString:()=>dl});function xl(u,a){let p=new Set(u.split(","));return a?b=>p.has(b.toLowerCase()):b=>p.has(b)}var Uk={},Vk=[],$k=()=>{},Hk=()=>!1,jk=u=>u.charCodeAt(0)===111&&u.charCodeAt(1)===110&&(u.charCodeAt(2)>122||u.charCodeAt(2)<97),zk=u=>u.startsWith("onUpdate:"),fo=Object.assign,Wk=(u,a)=>{let p=u.indexOf(a);p>-1&&u.splice(p,1)},Gk=Object.prototype.hasOwnProperty,Dc=(u,a)=>Gk.call(u,a),Yi=Array.isArray,nv=u=>dl(u)==="[object Map]",rv=u=>dl(u)==="[object Set]",qk=u=>dl(u)==="[object RegExp]",Qn=u=>typeof u=="function",pi=u=>typeof u=="string",lp=u=>typeof u=="symbol",Ou=u=>u!==null&&typeof u=="object",Yk=u=>(Ou(u)||Qn(u))&&Qn(u.then)&&Qn(u.catch),iv=Object.prototype.toString,dl=u=>iv.call(u),Jk=u=>dl(u).slice(8,-1),Tu=u=>dl(u)==="[object Object]",Kk=u=>pi(u)&&u!=="NaN"&&u[0]!=="-"&&""+parseInt(u,10)===u,Zk=xl(",key,ref,ref_for,ref_key,onVnodeBeforeMount,onVnodeMounted,onVnodeBeforeUpdate,onVnodeUpdated,onVnodeBeforeUnmount,onVnodeUnmounted"),Xk=xl("bind,cloak,else-if,else,for,html,if,model,on,once,pre,show,slot,text,memo"),Zf=u=>{let a=Object.create(null);return p=>a[p]||(a[p]=u(p))},Qk=/-(\w)/g,e1=Zf(u=>u.replace(Qk,(a,p)=>p?p.toUpperCase():"")),t1=/\B([A-Z])/g,Xf=Zf(u=>u.replace(t1,"-$1").toLowerCase()),Qf=Zf(u=>u.charAt(0).toUpperCase()+u.slice(1)),n1=Zf(u=>u?`on${Qf(u)}`:""),r1=(u,a)=>!Object.is(u,a),i1=(u,a)=>{for(let p=0;p<u.length;p++)u[p](a)},o1=(u,a,p)=>{Object.defineProperty(u,a,{configurable:!0,enumerable:!1,value:p})},a1=u=>{let a=parseFloat(u);return isNaN(a)?u:a},s1=u=>{let a=pi(u)?Number(u):NaN;return isNaN(a)?u:a},ov,l1=()=>ov||(ov=typeof globalThis!="undefined"?globalThis:typeof self!="undefined"?self:typeof window!="undefined"?window:typeof global!="undefined"?global:{}),c1="Infinity,undefined,NaN,isFinite,isNaN,parseFloat,parseInt,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,Math,Number,Date,Array,Object,Boolean,String,RegExp,Map,Set,JSON,Intl,BigInt,console,Error",u1=xl(c1);function cp(u){if(Yi(u)){let a={};for(let p=0;p<u.length;p++){let b=u[p],O=pi(b)?av(b):cp(b);if(O)for(let y in O)a[y]=O[y]}return a}else if(pi(u)||Ou(u))return u}var f1=/;(?![^(]*\))/g,d1=/:([^]+)/,p1=/\/\*[^]*?\*\//g;function av(u){let a={};return u.replace(p1,"").split(f1).forEach(p=>{if(p){let b=p.split(d1);b.length>1&&(a[b[0].trim()]=b[1].trim())}}),a}function h1(u){let a="";if(!u||pi(u))return a;for(let p in u){let b=u[p],O=p.startsWith("--")?p:Xf(p);(pi(b)||typeof b=="number")&&(a+=`${O}:${b};`)}return a}function up(u){let a="";if(pi(u))a=u;else if(Yi(u))for(let p=0;p<u.length;p++){let b=up(u[p]);b&&(a+=b+" ")}else if(Ou(u))for(let p in u)u[p]&&(a+=p+" ");return a.trim()}function g1(u){if(!u)return null;let{class:a,style:p}=u;return a&&!pi(a)&&(u.class=up(a)),p&&(u.style=cp(p)),u}var m1="html,body,base,head,link,meta,style,title,address,article,aside,footer,header,hgroup,h1,h2,h3,h4,h5,h6,nav,section,div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,ruby,s,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,embed,object,param,source,canvas,script,noscript,del,ins,caption,col,colgroup,table,thead,tbody,td,th,tr,button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,output,progress,select,textarea,details,dialog,menu,summary,template,blockquote,iframe,tfoot",v1="svg,animate,animateMotion,animateTransform,circle,clipPath,color-profile,defs,desc,discard,ellipse,feBlend,feColorMatrix,feComponentTransfer,feComposite,feConvolveMatrix,feDiffuseLighting,feDisplacementMap,feDistantLight,feDropShadow,feFlood,feFuncA,feFuncB,feFuncG,feFuncR,feGaussianBlur,feImage,feMerge,feMergeNode,feMorphology,feOffset,fePointLight,feSpecularLighting,feSpotLight,feTile,feTurbulence,filter,foreignObject,g,hatch,hatchpath,image,line,linearGradient,marker,mask,mesh,meshgradient,meshpatch,meshrow,metadata,mpath,path,pattern,polygon,polyline,radialGradient,rect,set,solidcolor,stop,switch,symbol,text,textPath,title,tspan,unknown,use,view",_1=xl(m1),b1=xl(v1),y1="itemscope,allowfullscreen,formnovalidate,ismap,nomodule,novalidate,readonly",E1=xl(y1+",async,autofocus,autoplay,controls,default,defer,disabled,hidden,inert,loop,open,required,reversed,scoped,seamless,checked,muted,multiple,selected");function S1(u){return!!u||u===""}var w1=xl("accept,accept-charset,accesskey,action,align,allow,alt,async,autocapitalize,autocomplete,autofocus,autoplay,background,bgcolor,border,buffered,capture,challenge,charset,checked,cite,class,code,codebase,color,cols,colspan,content,contenteditable,contextmenu,controls,coords,crossorigin,csp,data,datetime,decoding,default,defer,dir,dirname,disabled,download,draggable,dropzone,enctype,enterkeyhint,for,form,formaction,formenctype,formmethod,formnovalidate,formtarget,headers,height,hidden,high,href,hreflang,http-equiv,icon,id,importance,inert,integrity,ismap,itemprop,keytype,kind,label,lang,language,loading,list,loop,low,manifest,max,maxlength,minlength,media,min,multiple,muted,name,novalidate,open,optimum,pattern,ping,placeholder,poster,preload,radiogroup,readonly,referrerpolicy,rel,required,reversed,rows,rowspan,sandbox,scope,scoped,selected,shape,size,sizes,slot,span,spellcheck,src,srcdoc,srclang,srcset,start,step,style,summary,tabindex,target,title,translate,type,usemap,value,width,wrap"),C1=xl("xmlns,accent-height,accumulate,additive,alignment-baseline,alphabetic,amplitude,arabic-form,ascent,attributeName,attributeType,azimuth,baseFrequency,baseline-shift,baseProfile,bbox,begin,bias,by,calcMode,cap-height,class,clip,clipPathUnits,clip-path,clip-rule,color,color-interpolation,color-interpolation-filters,color-profile,color-rendering,contentScriptType,contentStyleType,crossorigin,cursor,cx,cy,d,decelerate,descent,diffuseConstant,direction,display,divisor,dominant-baseline,dur,dx,dy,edgeMode,elevation,enable-background,end,exponent,fill,fill-opacity,fill-rule,filter,filterRes,filterUnits,flood-color,flood-opacity,font-family,font-size,font-size-adjust,font-stretch,font-style,font-variant,font-weight,format,from,fr,fx,fy,g1,g2,glyph-name,glyph-orientation-horizontal,glyph-orientation-vertical,glyphRef,gradientTransform,gradientUnits,hanging,height,href,hreflang,horiz-adv-x,horiz-origin-x,id,ideographic,image-rendering,in,in2,intercept,k,k1,k2,k3,k4,kernelMatrix,kernelUnitLength,kerning,keyPoints,keySplines,keyTimes,lang,lengthAdjust,letter-spacing,lighting-color,limitingConeAngle,local,marker-end,marker-mid,marker-start,markerHeight,markerUnits,markerWidth,mask,maskContentUnits,maskUnits,mathematical,max,media,method,min,mode,name,numOctaves,offset,opacity,operator,order,orient,orientation,origin,overflow,overline-position,overline-thickness,panose-1,paint-order,path,pathLength,patternContentUnits,patternTransform,patternUnits,ping,pointer-events,points,pointsAtX,pointsAtY,pointsAtZ,preserveAlpha,preserveAspectRatio,primitiveUnits,r,radius,referrerPolicy,refX,refY,rel,rendering-intent,repeatCount,repeatDur,requiredExtensions,requiredFeatures,restart,result,rotate,rx,ry,scale,seed,shape-rendering,slope,spacing,specularConstant,specularExponent,speed,spreadMethod,startOffset,stdDeviation,stemh,stemv,stitchTiles,stop-color,stop-opacity,strikethrough-position,strikethrough-thickness,string,stroke,stroke-dasharray,stroke-dashoffset,stroke-linecap,stroke-linejoin,stroke-miterlimit,stroke-opacity,stroke-width,style,surfaceScale,systemLanguage,tabindex,tableValues,target,targetX,targetY,text-anchor,text-decoration,text-rendering,textLength,to,transform,transform-origin,type,u1,u2,underline-position,underline-thickness,unicode,unicode-bidi,unicode-range,units-per-em,v-alphabetic,v-hanging,v-ideographic,v-mathematical,values,vector-effect,version,vert-adv-y,vert-origin-x,vert-origin-y,viewBox,viewTarget,visibility,width,widths,word-spacing,writing-mode,x,x-height,x1,x2,xChannelSelector,xlink:actuate,xlink:arcrole,xlink:href,xlink:role,xlink:show,xlink:title,xlink:type,xmlns:xlink,xml:base,xml:lang,xml:space,y,y1,y2,yChannelSelector,z,zoomAndPan");function A1(u){if(u==null)return!1;let a=typeof u;return a==="string"||a==="number"||a==="boolean"}var O1=u=>pi(u)?u:u==null?"":Yi(u)||Ou(u)&&(u.toString===iv||!Qn(u.toString))?JSON.stringify(u,sv,2):String(u),sv=(u,a)=>a&&a.__v_isRef?sv(u,a.value):nv(a)?{[`Map(${a.size})`]:[...a.entries()].reduce((p,[b,O],y)=>(p[fp(b,y)+" =>"]=O,p),{})}:rv(a)?{[`Set(${a.size})`]:[...a.values()].map(p=>fp(p))}:lp(a)?fp(a):Ou(a)&&!Yi(a)&&!Tu(a)?String(a):a,fp=(u,a="")=>{var p;return lp(u)?`Symbol(${(p=u.description)!=null?p:a})`:u};function lv(u){var a=function(p,b){"use strict";function O(U,...q){console.warn(`[Vue warn] ${U}`,...q)}let y;class h{constructor(q=!1){this.detached=q,this._active=!0,this.effects=[],this.cleanups=[],this.parent=y,!q&&y&&(this.index=(y.scopes||(y.scopes=[])).push(this)-1)}get active(){return this._active}run(q){if(this._active){let pe=y;try{return y=this,q()}finally{y=pe}}}on(){y=this}off(){y=this.parent}stop(q){if(this._active){let pe,Ze;for(pe=0,Ze=this.effects.length;pe<Ze;pe++)this.effects[pe].stop();for(pe=0,Ze=this.cleanups.length;pe<Ze;pe++)this.cleanups[pe]();if(this.scopes)for(pe=0,Ze=this.scopes.length;pe<Ze;pe++)this.scopes[pe].stop(!0);if(!this.detached&&this.parent&&!q){let Je=this.parent.scopes.pop();Je&&Je!==this&&(this.parent.scopes[this.index]=Je,Je.index=this.index)}this.parent=void 0,this._active=!1}}}function v(U){return new h(U)}function k(U,q=y){q&&q.active&&q.effects.push(U)}function Oe(){return y}function gt(U){y&&y.cleanups.push(U)}let Ot;class ue{constructor(q,pe,Ze,Je){this.fn=q,this.trigger=pe,this.scheduler=Ze,this.active=!0,this.deps=[],this._dirtyLevel=4,this._trackId=0,this._runnings=0,this._shouldSchedule=!1,this._depsLength=0,k(this,Je)}get dirty(){if(this._dirtyLevel===2||this._dirtyLevel===3){this._dirtyLevel=1,sn();for(let q=0;q<this._depsLength;q++){let pe=this.deps[q];if(pe.computed&&(P(pe.computed),this._dirtyLevel>=4))break}this._dirtyLevel===1&&(this._dirtyLevel=0),Lr()}return this._dirtyLevel>=4}set dirty(q){this._dirtyLevel=q?4:0}run(){if(this._dirtyLevel=0,!this.active)return this.fn();let q=dn,pe=Ot;try{return dn=!0,Ot=this,this._runnings++,Nt(this),this.fn()}finally{Mr(this),this._runnings--,Ot=pe,dn=q}}stop(){var q;this.active&&(Nt(this),Mr(this),(q=this.onStop)==null||q.call(this),this.active=!1)}}function P(U){return U.value}function Nt(U){U._trackId++,U._depsLength=0}function Mr(U){if(U.deps.length>U._depsLength){for(let q=U._depsLength;q<U.deps.length;q++)St(U.deps[q],U);U.deps.length=U._depsLength}}function St(U,q){let pe=U.get(q);pe!==void 0&&q._trackId!==pe&&(U.delete(q),U.size===0&&U.cleanup())}function Z(U,q){U.effect instanceof ue&&(U=U.effect.fn);let pe=new ue(U,b.NOOP,()=>{pe.dirty&&pe.run()});q&&(b.extend(pe,q),q.scope&&k(pe,q.scope)),(!q||!q.lazy)&&pe.run();let Ze=pe.run.bind(pe);return Ze.effect=pe,Ze}function se(U){U.effect.stop()}let dn=!0,Br=0,Jn=[];function sn(){Jn.push(dn),dn=!1}function In(){Jn.push(dn),dn=!0}function Lr(){let U=Jn.pop();dn=U===void 0?!0:U}function Or(){Br++}function er(){for(Br--;!Br&&en.length;)en.shift()()}function pn(U,q,pe){var Ze;if(q.get(U)!==U._trackId){q.set(U,U._trackId);let Je=U.deps[U._depsLength];Je!==q?(Je&&St(Je,U),U.deps[U._depsLength++]=q):U._depsLength++}}let en=[];function kn(U,q,pe){var Ze;Or();for(let Je of U.keys()){let mt;Je._dirtyLevel<q&&(mt!=null?mt:mt=U.get(Je)===Je._trackId)&&(Je._shouldSchedule||(Je._shouldSchedule=Je._dirtyLevel===0),Je._dirtyLevel=q),Je._shouldSchedule&&(mt!=null?mt:mt=U.get(Je)===Je._trackId)&&(Je.trigger(),(!Je._runnings||Je.allowRecurse)&&Je._dirtyLevel!==2&&(Je._shouldSchedule=!1,Je.scheduler&&en.push(Je.scheduler)))}er()}let tr=(U,q)=>{let pe=new Map;return pe.cleanup=U,pe.computed=q,pe},xn=new WeakMap,jn=Symbol(""),hi=Symbol("");function ze(U,q,pe){if(dn&&Ot){let Ze=xn.get(U);Ze||xn.set(U,Ze=new Map);let Je=Ze.get(pe);Je||Ze.set(pe,Je=tr(()=>Ze.delete(pe))),pn(Ot,Je,void 0)}}function ot(U,q,pe,Ze,Je,mt){let et=xn.get(U);if(!et)return;let st=[];if(q==="clear")st=[...et.values()];else if(pe==="length"&&b.isArray(U)){let fr=Number(Ze);et.forEach(($r,Hr)=>{(Hr==="length"||!b.isSymbol(Hr)&&Hr>=fr)&&st.push($r)})}else switch(pe!==void 0&&st.push(et.get(pe)),q){case"add":b.isArray(U)?b.isIntegerKey(pe)&&st.push(et.get("length")):(st.push(et.get(jn)),b.isMap(U)&&st.push(et.get(hi)));break;case"delete":b.isArray(U)||(st.push(et.get(jn)),b.isMap(U)&&st.push(et.get(hi)));break;case"set":b.isMap(U)&&st.push(et.get(jn));break}Or();for(let fr of st)fr&&kn(fr,4,void 0);er()}function Dt(U,q){var pe;return(pe=xn.get(U))==null?void 0:pe.get(q)}let cn=b.makeMap("__proto__,__v_isRef,__isVue"),nn=new Set(Object.getOwnPropertyNames(Symbol).filter(U=>U!=="arguments"&&U!=="caller").map(U=>Symbol[U]).filter(b.isSymbol)),an=zn();function zn(){let U={};return["includes","indexOf","lastIndexOf"].forEach(q=>{U[q]=function(...pe){let Ze=tn(this);for(let mt=0,et=this.length;mt<et;mt++)ze(Ze,"get",mt+"");let Je=Ze[q](...pe);return Je===-1||Je===!1?Ze[q](...pe.map(tn)):Je}}),["push","pop","shift","unshift","splice"].forEach(q=>{U[q]=function(...pe){sn(),Or();let Ze=tn(this)[q].apply(this,pe);return er(),Lr(),Ze}}),U}function Fr(U){let q=tn(this);return ze(q,"has",U),q.hasOwnProperty(U)}class nr{constructor(q=!1,pe=!1){this._isReadonly=q,this._isShallow=pe}get(q,pe,Ze){let Je=this._isReadonly,mt=this._isShallow;if(pe==="__v_isReactive")return!Je;if(pe==="__v_isReadonly")return Je;if(pe==="__v_isShallow")return mt;if(pe==="__v_raw")return Ze===(Je?mt?Ro:Ai:mt?Li:Oa).get(q)||Object.getPrototypeOf(q)===Object.getPrototypeOf(Ze)?q:void 0;let et=b.isArray(q);if(!Je){if(et&&b.hasOwn(an,pe))return Reflect.get(an,pe,Ze);if(pe==="hasOwnProperty")return Fr}let st=Reflect.get(q,pe,Ze);return(b.isSymbol(pe)?nn.has(pe):cn(pe))||(Je||ze(q,"get",pe),mt)?st:br(st)?et&&b.isIntegerKey(pe)?st:st.value:b.isObject(st)?Je?Jr(st):hn(st):st}}class qr extends nr{constructor(q=!1){super(!1,q)}set(q,pe,Ze,Je){let mt=q[pe];if(!this._isShallow){let fr=Ht(mt);if(!xe(Ze)&&!Ht(Ze)&&(mt=tn(mt),Ze=tn(Ze)),!b.isArray(q)&&br(mt)&&!br(Ze))return fr?!1:(mt.value=Ze,!0)}let et=b.isArray(q)&&b.isIntegerKey(pe)?Number(pe)<q.length:b.hasOwn(q,pe),st=Reflect.set(q,pe,Ze,Je);return q===tn(Je)&&(et?b.hasChanged(Ze,mt)&&ot(q,"set",pe,Ze,mt):ot(q,"add",pe,Ze)),st}deleteProperty(q,pe){let Ze=b.hasOwn(q,pe),Je=q[pe],mt=Reflect.deleteProperty(q,pe);return mt&&Ze&&ot(q,"delete",pe,void 0,Je),mt}has(q,pe){let Ze=Reflect.has(q,pe);return(!b.isSymbol(pe)||!nn.has(pe))&&ze(q,"has",pe),Ze}ownKeys(q){return ze(q,"iterate",b.isArray(q)?"length":jn),Reflect.ownKeys(q)}}class Vr extends nr{constructor(q=!1){super(!0,q)}set(q,pe){return!0}deleteProperty(q,pe){return!0}}let Ci=new qr,$a=new Vr,qo=new qr(!0),gi=new Vr(!0),Tr=U=>U,Pr=U=>Reflect.getPrototypeOf(U);function ur(U,q,pe=!1,Ze=!1){U=U.__v_raw;let Je=tn(U),mt=tn(q);pe||(b.hasChanged(q,mt)&&ze(Je,"get",q),ze(Je,"get",mt));let{has:et}=Pr(Je),st=Ze?Tr:pe?Oi:oi;if(et.call(Je,q))return st(U.get(q));if(et.call(Je,mt))return st(U.get(mt));U!==Je&&U.get(q)}function xo(U,q=!1){let pe=this.__v_raw,Ze=tn(pe),Je=tn(U);return q||(b.hasChanged(U,Je)&&ze(Ze,"has",U),ze(Ze,"has",Je)),U===Je?pe.has(U):pe.has(U)||pe.has(Je)}function Ji(U,q=!1){return U=U.__v_raw,!q&&ze(tn(U),"iterate",jn),Reflect.get(U,"size",U)}function Ki(U){U=tn(U);let q=tn(this);return Pr(q).has.call(q,U)||(q.add(U),ot(q,"add",U,U)),this}function ho(U,q){q=tn(q);let pe=tn(this),{has:Ze,get:Je}=Pr(pe),mt=Ze.call(pe,U);mt||(U=tn(U),mt=Ze.call(pe,U));let et=Je.call(pe,U);return pe.set(U,q),mt?b.hasChanged(q,et)&&ot(pe,"set",U,q,et):ot(pe,"add",U,q),this}function Zi(U){let q=tn(this),{has:pe,get:Ze}=Pr(q),Je=pe.call(q,U);Je||(U=tn(U),Je=pe.call(q,U));let mt=Ze?Ze.call(q,U):void 0,et=q.delete(U);return Je&&ot(q,"delete",U,void 0,mt),et}function Ca(){let U=tn(this),q=U.size!==0,pe=void 0,Ze=U.clear();return q&&ot(U,"clear",void 0,void 0,pe),Ze}function Mi(U,q){return function(Ze,Je){let mt=this,et=mt.__v_raw,st=tn(et),fr=q?Tr:U?Oi:oi;return!U&&ze(st,"iterate",jn),et.forEach(($r,Hr)=>Ze.call(Je,fr($r),fr(Hr),mt))}}function mn(U,q,pe){return function(...Ze){let Je=this.__v_raw,mt=tn(Je),et=b.isMap(mt),st=U==="entries"||U===Symbol.iterator&&et,fr=U==="keys"&&et,$r=Je[U](...Ze),Hr=pe?Tr:q?Oi:oi;return!q&&ze(mt,"iterate",fr?hi:jn),{next(){let{value:Qi,done:_i}=$r.next();return _i?{value:Qi,done:_i}:{value:st?[Hr(Qi[0]),Hr(Qi[1])]:Hr(Qi),done:_i}},[Symbol.iterator](){return this}}}}function Cn(U){return function(...q){return U==="delete"?!1:U==="clear"?void 0:this}}function Bi(){let U={get(mt){return ur(this,mt)},get size(){return Ji(this)},has:xo,add:Ki,set:ho,delete:Zi,clear:Ca,forEach:Mi(!1,!1)},q={get(mt){return ur(this,mt,!1,!0)},get size(){return Ji(this)},has:xo,add:Ki,set:ho,delete:Zi,clear:Ca,forEach:Mi(!1,!0)},pe={get(mt){return ur(this,mt,!0)},get size(){return Ji(this,!0)},has(mt){return xo.call(this,mt,!0)},add:Cn("add"),set:Cn("set"),delete:Cn("delete"),clear:Cn("clear"),forEach:Mi(!0,!1)},Ze={get(mt){return ur(this,mt,!0,!0)},get size(){return Ji(this,!0)},has(mt){return xo.call(this,mt,!0)},add:Cn("add"),set:Cn("set"),delete:Cn("delete"),clear:Cn("clear"),forEach:Mi(!0,!0)};return["keys","values","entries",Symbol.iterator].forEach(mt=>{U[mt]=mn(mt,!1,!1),pe[mt]=mn(mt,!0,!1),q[mt]=mn(mt,!1,!0),Ze[mt]=mn(mt,!0,!0)}),[U,pe,q,Ze]}let[or,mi,Yo,Jo]=Bi();function vi(U,q){let pe=q?U?Jo:Yo:U?mi:or;return(Ze,Je,mt)=>Je==="__v_isReactive"?!U:Je==="__v_isReadonly"?U:Je==="__v_raw"?Ze:Reflect.get(b.hasOwn(pe,Je)&&Je in Ze?pe:Ze,Je,mt)}let Yr={get:vi(!1,!1)},Aa={get:vi(!1,!0)},ri={get:vi(!0,!1)},_r={get:vi(!0,!0)};function go(U,q,pe){let Ze=tn(pe);if(Ze!==pe&&q.call(U,Ze)){let Je=b.toRawType(U);O(`Reactive ${Je} contains both the raw and reactive versions of the same object${Je==="Map"?" as keys":""}, which can lead to inconsistencies. Avoid differentiating between the raw and reactive versions of an object and only use the reactive version if possible.`)}}let Oa=new WeakMap,Li=new WeakMap,Ai=new WeakMap,Ro=new WeakMap;function Ko(U){switch(U){case"Object":case"Array":return 1;case"Map":case"Set":case"WeakMap":case"WeakSet":return 2;default:return 0}}function mo(U){return U.__v_skip||!Object.isExtensible(U)?0:Ko(b.toRawType(U))}function hn(U){return Ht(U)?U:ii(U,!1,Ci,Yr,Oa)}function An(U){return ii(U,!1,qo,Aa,Li)}function Jr(U){return ii(U,!0,$a,ri,Ai)}function Dn(U){return ii(U,!0,gi,_r,Ro)}function ii(U,q,pe,Ze,Je){if(!b.isObject(U)||U.__v_raw&&!(q&&U.__v_isReactive))return U;let mt=Je.get(U);if(mt)return mt;let et=mo(U);if(et===0)return U;let st=new Proxy(U,et===2?Ze:pe);return Je.set(U,st),st}function Dr(U){return Ht(U)?Dr(U.__v_raw):!!(U&&U.__v_isReactive)}function Ht(U){return!!(U&&U.__v_isReadonly)}function xe(U){return!!(U&&U.__v_isShallow)}function Xi(U){return Dr(U)||Ht(U)}function tn(U){let q=U&&U.__v_raw;return q?tn(q):U}function vo(U){return Object.isExtensible(U)&&b.def(U,"__v_skip",!0),U}let oi=U=>b.isObject(U)?hn(U):U,Oi=U=>b.isObject(U)?Jr(U):U,Zo="Computed is still dirty after getter evaluation, likely because a computed is mutating its own dependency in its getter. State mutations in computed getters should be avoided.  Check the docs for more details: https://vuejs.org/guide/essentials/computed.html#getters-should-be-side-effect-free";class Xo{constructor(q,pe,Ze,Je){this.getter=q,this._setter=pe,this.dep=void 0,this.__v_isRef=!0,this.__v_isReadonly=!1,this.effect=new ue(()=>q(this._value),()=>ai(this,this.effect._dirtyLevel===2?2:3)),this.effect.computed=this,this.effect.active=this._cacheable=!Je,this.__v_isReadonly=Ze}get value(){let q=tn(this);return(!q._cacheable||q.effect.dirty)&&b.hasChanged(q._value,q._value=q.effect.run())&&ai(q,4),Fi(q),q.effect._dirtyLevel>=2&&ai(q,2),q._value}set value(q){this._setter(q)}get _dirty(){return this.effect.dirty}set _dirty(q){this.effect.dirty=q}}function Ta(U,q,pe=!1){let Ze,Je,mt=b.isFunction(U);return mt?(Ze=U,Je=b.NOOP):(Ze=U.get,Je=U.set),new Xo(Ze,Je,mt||!Je,pe)}function Fi(U){var q;dn&&Ot&&(U=tn(U),pn(Ot,(q=U.dep)!=null?q:U.dep=tr(()=>U.dep=void 0,U instanceof Xo?U:void 0),void 0))}function ai(U,q=4,pe){U=tn(U);let Ze=U.dep;Ze&&kn(Ze,q,void 0)}function br(U){return!!(U&&U.__v_isRef===!0)}function _o(U){return Qo(U,!1)}function ds(U){return Qo(U,!0)}function Qo(U,q){return br(U)?U:new rn(U,q)}class rn{constructor(q,pe){this.__v_isShallow=pe,this.dep=void 0,this.__v_isRef=!0,this._rawValue=pe?q:tn(q),this._value=pe?q:oi(q)}get value(){return Fi(this),this._value}set value(q){let pe=this.__v_isShallow||xe(q)||Ht(q);q=pe?q:tn(q),b.hasChanged(q,this._rawValue)&&(this._rawValue=q,this._value=pe?q:oi(q),ai(this,4,q))}}function yr(U){ai(U,4,void 0)}function Wn(U){return br(U)?U.value:U}function Er(U){return b.isFunction(U)?U():Wn(U)}let Kr={get:(U,q,pe)=>Wn(Reflect.get(U,q,pe)),set:(U,q,pe,Ze)=>{let Je=U[q];return br(Je)&&!br(pe)?(Je.value=pe,!0):Reflect.set(U,q,pe,Ze)}};function ea(U){return Dr(U)?U:new Proxy(U,Kr)}class ta{constructor(q){this.dep=void 0,this.__v_isRef=!0;let{get:pe,set:Ze}=q(()=>Fi(this),()=>ai(this));this._get=pe,this._set=Ze}get value(){return this._get()}set value(q){this._set(q)}}function ps(U){return new ta(U)}function Mo(U){let q=b.isArray(U)?new Array(U.length):{};for(let pe in U)q[pe]=Lo(U,pe);return q}class Bo{constructor(q,pe,Ze){this._object=q,this._key=pe,this._defaultValue=Ze,this.__v_isRef=!0}get value(){let q=this._object[this._key];return q===void 0?this._defaultValue:q}set value(q){this._object[this._key]=q}get dep(){return Dt(tn(this._object),this._key)}}class Ha{constructor(q){this._getter=q,this.__v_isRef=!0,this.__v_isReadonly=!0}get value(){return this._getter()}}function ja(U,q,pe){return br(U)?U:b.isFunction(U)?new Ha(U):b.isObject(U)&&arguments.length>1?Lo(U,q,pe):_o(U)}function Lo(U,q,pe){let Ze=U[q];return br(Ze)?Ze:new Bo(U,q,pe)}let Pa=Ta,hs={GET:"get",HAS:"has",ITERATE:"iterate"},na={SET:"set",ADD:"add",DELETE:"delete",CLEAR:"clear"},Fo={SKIP:"__v_skip",IS_REACTIVE:"__v_isReactive",IS_READONLY:"__v_isReadonly",IS_SHALLOW:"__v_isShallow",RAW:"__v_raw"};return p.EffectScope=h,p.ITERATE_KEY=jn,p.ReactiveEffect=ue,p.ReactiveFlags=Fo,p.TrackOpTypes=hs,p.TriggerOpTypes=na,p.computed=Ta,p.customRef=ps,p.deferredComputed=Pa,p.effect=Z,p.effectScope=v,p.enableTracking=In,p.getCurrentScope=Oe,p.isProxy=Xi,p.isReactive=Dr,p.isReadonly=Ht,p.isRef=br,p.isShallow=xe,p.markRaw=vo,p.onScopeDispose=gt,p.pauseScheduling=Or,p.pauseTracking=sn,p.proxyRefs=ea,p.reactive=hn,p.readonly=Jr,p.ref=_o,p.resetScheduling=er,p.resetTracking=Lr,p.shallowReactive=An,p.shallowReadonly=Dn,p.shallowRef=ds,p.stop=se,p.toRaw=tn,p.toRef=ja,p.toRefs=Mo,p.toValue=Er,p.track=ze,p.trigger=ot,p.triggerRef=yr,p.unref=Wn,p}({},u);return a}function cv(u){var a=function(p){"use strict";let b=`
`,O=44,y=50,h=50,v=["%","%"],k="#007aff",Oe=/^([a-z-]+:)?\/\//i,gt=/^data:.*,.*/,Ot="WEB_INVOKE_APPSERVICE",ue="wxs://",P="json://",Nt="wxsModules",Mr="renderjsModules",St="onShow",Z="onHide",se="onLaunch",dn="onError",Br="onThemeChange",Jn="offThemeChange",sn="onKeyboardHeightChange",In="onPageNotFound",Lr="onUnhandledRejection",Or="onExit",er="onLoad",pn="onReady",en="onUnload",kn="onInit",tr="onSaveExitState",xn="onResize",jn="onBackPress",hi="onPageScroll",ze="onTabItemTap",ot="onReachBottom",Dt="onPullDownRefresh",cn="onShareTimeline",nn="onShareChat",an="onAddToFavorites",zn="onShareAppMessage",Fr="onNavigationBarButtonTap",nr="onNavigationBarSearchInputClicked",qr="onNavigationBarSearchInputChanged",Vr="onNavigationBarSearchInputConfirmed",Ci="onNavigationBarSearchInputFocusChanged",$a="onAppEnterForeground",qo="onAppEnterBackground",gi="onWxsInvokeCallMethod";function Tr(le){let K=Object.create(null);return de=>K[de]||(K[de]=le(de))}function Pr(le){return Tr(le)}function ur(le=""){return(""+le).replace(/[^\x00-\xff]/g,"**").length}function xo(le){return le.indexOf("/")===0}function Ji(le){return xo(le)?le:"/"+le}function Ki(le){return xo(le)?le.slice(1):le}let ho=(le,K)=>{let de;for(let Ve=0;Ve<le.length;Ve++)de=le[Ve](K);return de};function Zi(le,K=null){let de;return(...Ve)=>(le&&(de=le.apply(K,Ve),le=null),de)}function Ca(le,K){le=le||{},p.isString(K)&&(K={errMsg:K}),/:ok$/.test(K.errMsg)?p.isFunction(le.success)&&le.success(K):p.isFunction(le.fail)&&le.fail(K),p.isFunction(le.complete)&&le.complete(K)}function Mi(le){let K={};return p.isPlainObject(le)&&Object.keys(le).sort().forEach(de=>{let Ve=de;K[Ve]=le[Ve]}),Object.keys(K)?K:le}function mn(le){return!!le.appContext}function Cn(le){return le&&(mn(le)?le.proxy:le)}function Bi(le){return le.nodeType===1}function or(le,K=!1){let{vnode:de}=le;if(Bi(de.el))return K?de.el?[de.el]:[]:de.el;let{subTree:Ve}=le;if(Ve.shapeFlag&16){let ft=Ve.children.filter(on=>on.el&&Bi(on.el));if(ft.length>0)return K?ft.map(on=>on.el):ft[0].el}return K?de.el?[de.el]:[]:de.el}let mi=0;function Yo(le,...K){let de=Date.now(),Ve=mi?de-mi:0;return mi=de,`[${de}][${Ve}ms][${le}]\uFF1A${K.map(ft=>JSON.stringify(ft)).join(" ")}`}let Jo=encodeURIComponent;function vi(le,K=Jo){let de=le?Object.keys(le).map(Ve=>{let ft=le[Ve];return typeof ft===void 0||ft===null?ft="":p.isPlainObject(ft)&&(ft=JSON.stringify(ft)),K(Ve)+"="+K(ft)}).filter(Ve=>Ve.length>0).join("&"):null;return de?`?${de}`:""}function Yr(le){try{return decodeURIComponent(""+le)}catch(K){}return""+le}function Aa(le={}){let K={};return Object.keys(le).forEach(de=>{try{K[de]=Yr(le[de])}catch(Ve){K[de]=le[de]}}),K}let ri=/\+/g;function _r(le){let K={};if(le===""||le==="?")return K;let Ve=(le[0]==="?"?le.slice(1):le).split("&");for(let ft=0;ft<Ve.length;++ft){let on=Ve[ft].replace(ri," "),Kn=on.indexOf("="),vn=Yr(Kn<0?on:on.slice(0,Kn)),Un=Kn<0?null:Yr(on.slice(Kn+1));if(vn in K){let dr=K[vn];p.isArray(dr)||(dr=K[vn]=[dr]),dr.push(Un)}else K[vn]=Un}return K}function go(le){let[K,de]=le.split("?",2);return{path:K,query:_r(de||"")}}function Oa(le){let K={};return le&&Object.keys(le).forEach(de=>{de.indexOf("data-")===0&&(K[de.replace("data-","")]=le[de])}),K}class Li extends Error{constructor(K){super(K);this.name="DOMException"}}function Ai(le,K){return K&&(K.capture&&(le+="Capture"),K.once&&(le+="Once"),K.passive&&(le+="Passive")),`on${p.capitalize(p.camelize(le))}`}class Ro{constructor(K,de){this.defaultPrevented=!1,this.timeStamp=Date.now(),this._stop=!1,this._end=!1,this.type=K,this.bubbles=!!de.bubbles,this.cancelable=!!de.cancelable}preventDefault(){this.defaultPrevented=!0}stopImmediatePropagation(){this._end=this._stop=!0}stopPropagation(){this._stop=!0}}function Ko(le){if(le instanceof Ro)return le;let[K]=An(le.type),de=new Ro(K,{bubbles:!1,cancelable:!1});return p.extend(de,le),de}class mo{constructor(){this.listeners=Object.create(null)}dispatchEvent(K){let de=this.listeners[K.type];if(!de)return!1;let Ve=Ko(K),ft=de.length;for(let on=0;on<ft&&(de[on].call(this,Ve),!Ve._end);on++);return Ve.cancelable&&Ve.defaultPrevented}addEventListener(K,de,Ve){K=Ai(K,Ve),(this.listeners[K]||(this.listeners[K]=[])).push(de)}removeEventListener(K,de,Ve){K=Ai(K,Ve);let ft=this.listeners[K];if(!ft)return;let on=ft.indexOf(de);on>-1&&ft.splice(on,1)}}let hn=/(?:Once|Passive|Capture)$/;function An(le){let K;if(hn.test(le)){K={};let de;for(;de=le.match(hn);)le=le.slice(0,le.length-de[0].length),K[de[0].toLowerCase()]=!0}return[p.hyphenate(le.slice(2)),K]}let Jr=(()=>({stop:1,prevent:1<<1,self:1<<2}))();function Dn(le){let K=0;return le.includes("stop")&&(K|=Jr.stop),le.includes("prevent")&&(K|=Jr.prevent),le.includes("self")&&(K|=Jr.self),K}let ii=0,Dr=1,Ht=3,xe=8;function Xi(le,K){let{parentNode:de}=le;if(!de)return null;let{childNodes:Ve}=de;return Ve[Ve.indexOf(le)+(K==="n"?1:-1)]||null}function tn(le){let{parentNode:K}=le;if(K){let{childNodes:de}=K,Ve=de.indexOf(le);Ve>-1&&(le.parentNode=null,de.splice(Ve,1))}}function vo(le){!le.nodeId&&le.pageNode&&(le.nodeId=le.pageNode.genId())}class oi extends mo{constructor(K,de,Ve){super();if(this.pageNode=null,this.parentNode=null,this._text=null,Ve){let{pageNode:ft}=Ve;ft&&(this.pageNode=ft,this.nodeId=ft.genId(),!ft.isUnmounted&&ft.onCreate(this,de))}this.nodeType=K,this.nodeName=de,this.childNodes=[]}get firstChild(){return this.childNodes[0]||null}get lastChild(){let{childNodes:K}=this,de=K.length;return de?K[de-1]:null}get nextSibling(){return Xi(this,"n")}get nodeValue(){return null}set nodeValue(K){}get textContent(){return this._text||""}set textContent(K){this._text=K,this.pageNode&&!this.pageNode.isUnmounted&&this.pageNode.onTextContent(this,K)}get parentElement(){let{parentNode:K}=this;return K&&K.nodeType===Dr?K:null}get previousSibling(){return Xi(this,"p")}appendChild(K){return this.insertBefore(K,null)}cloneNode(K){let de=p.extend(Object.create(Object.getPrototypeOf(this)),this),{attributes:Ve}=de;return Ve&&(de.attributes=p.extend({},Ve)),K&&(de.childNodes=de.childNodes.map(ft=>ft.cloneNode(!0))),de}insertBefore(K,de){tn(K),K.pageNode=this.pageNode,K.parentNode=this,vo(K);let{childNodes:Ve}=this;if(de){let ft=Ve.indexOf(de);if(ft===-1)throw new Li("Failed to execute 'insertBefore' on 'Node': The node before which the new node is to be inserted is not a child of this node.");Ve.splice(ft,0,K)}else Ve.push(K);return this.pageNode&&!this.pageNode.isUnmounted?this.pageNode.onInsertBefore(this,K,de):K}removeChild(K){let{childNodes:de}=this,Ve=de.indexOf(K);if(Ve===-1)throw new Li("Failed to execute 'removeChild' on 'Node': The node to be removed is not a child of this node.");return K.parentNode=null,de.splice(Ve,1),this.pageNode&&!this.pageNode.isUnmounted?this.pageNode.onRemoveChild(K):K}}let Oi="class",Zo="style",Xo=".vOwnerId",Ta=".vRenderjs";class Fi extends oi{constructor(K,de,Ve){super(K,de,Ve);this.attributes=Object.create(null),this.style=null,this.vShow=null,this._html=null}get className(){return this.attributes[Oi]||""}set className(K){this.setAttribute(Oi,K)}get innerHTML(){return""}set innerHTML(K){this._html=K}addEventListener(K,de,Ve){super.addEventListener(K,de,Ve),this.pageNode&&!this.pageNode.isUnmounted&&(de.wxsEvent?this.pageNode.onAddWxsEvent(this,Ai(K,Ve),de.wxsEvent,Dn(de.modifiers||[])):this.pageNode.onAddEvent(this,Ai(K,Ve),Dn(de.modifiers||[])))}removeEventListener(K,de,Ve){super.removeEventListener(K,de,Ve),this.pageNode&&!this.pageNode.isUnmounted&&this.pageNode.onRemoveEvent(this,Ai(K,Ve))}getAttribute(K){return K===Zo?this.style:this.attributes[K]}removeAttribute(K){K==Zo?this.style=null:delete this.attributes[K],this.pageNode&&!this.pageNode.isUnmounted&&this.pageNode.onRemoveAttribute(this,K)}setAttribute(K,de){K===Zo?this.style=de:this.attributes[K]=de,this.pageNode&&!this.pageNode.isUnmounted&&this.pageNode.onSetAttribute(this,K,de)}toJSON({attr:K,normalize:de}={}){let{attributes:Ve,style:ft,listeners:on,_text:Kn}=this,vn={};Object.keys(Ve).length&&(vn.a=de?de(Ve):Ve);let Un=Object.keys(on);if(Un.length){let dr,to={};Un.forEach(Zn=>{let bo=on[Zn];if(bo.length){let{wxsEvent:Ia,modifiers:yo}=bo[0],Do=Dn(yo||[]);Ia?(dr||(dr={}),dr[Zn]=[de?de(Ia):Ia,Do]):to[Zn]=Do}}),vn.e=de?de(to,!1):to,dr&&(vn.w=de?de(dr,!1):dr)}return ft!==null&&(vn.s=de?de(ft):ft),K||(vn.i=this.nodeId,vn.n=this.nodeName),Kn!==null&&(vn.t=de?de(Kn):Kn),vn}}class ai extends oi{constructor(K,de){super(xe,"#comment",de);this._text=""}toJSON(K={}){return K.attr?{}:{i:this.nodeId}}}class br extends Fi{constructor(K,de){super(Dr,K.toUpperCase(),de);this.tagName=this.nodeName}}class _o extends br{get value(){return this.getAttribute("value")}set value(K){this.setAttribute("value",K)}}class ds extends _o{}class Qo extends Fi{constructor(K,de){super(Ht,"#text",de);this._text=K}get nodeValue(){return this._text||""}set nodeValue(K){this._text=K,this.pageNode&&!this.pageNode.isUnmounted&&this.pageNode.onNodeValue(this,K)}}let rn={AD:["data"],"AD-DRAW":["data"],"LIVE-PLAYER":["picture-in-picture-mode"],MAP:["markers","polyline","circles","controls","include-points","polygons"],PICKER:["range","value"],"PICKER-VIEW":["value"],"RICH-TEXT":["nodes"],VIDEO:["danmu-list","header"],"WEB-VIEW":["webview-styles"]},yr=["animation"],Wn=(le,K)=>{if(yr.indexOf(K)>-1)return!0;let de=rn[le.nodeName];return!!(de&&de.indexOf(K)>-1)},Er=1,Kr=2,ea=3,ta=4,ps=5,Mo=6,Bo=7,Ha=8,ja=9,Lo=10,Pa=12,hs=15,na=20;function Fo(le,K,{clearTimeout:de,setTimeout:Ve}){let ft,on=function(){de(ft),ft=Ve(()=>le.apply(this,arguments),K)};return on.cancel=function(){de(ft)},on}class U{constructor(K,de){this.id=K,this.listener={},this.emitCache=[],de&&Object.keys(de).forEach(Ve=>{this.on(Ve,de[Ve])})}emit(K,...de){let Ve=this.listener[K];if(!Ve)return this.emitCache.push({eventName:K,args:de});Ve.forEach(ft=>{ft.fn.apply(ft.fn,de)}),this.listener[K]=Ve.filter(ft=>ft.type!=="once")}on(K,de){this._addListener(K,"on",de),this._clearCache(K)}once(K,de){this._addListener(K,"once",de),this._clearCache(K)}off(K,de){let Ve=this.listener[K];if(!!Ve)if(de)for(let ft=0;ft<Ve.length;)Ve[ft].fn===de&&(Ve.splice(ft,1),ft--),ft++;else delete this.listener[K]}_clearCache(K){for(let de=0;de<this.emitCache.length;de++){let Ve=this.emitCache[de],ft=K?Ve.eventName===K?K:null:Ve.eventName;if(!ft)continue;if(typeof this.emit.apply(this,[ft,...Ve.args])=="number"){this.emitCache.pop();continue}this.emitCache.splice(de,1),de--}}_addListener(K,de,Ve){(this.listener[K]||(this.listener[K]=[])).push({fn:Ve,type:de})}}let q=[kn,er,St,Z,en,jn,hi,ze,ot,Dt,cn,zn,nn,an,tr,Fr,nr,qr,Vr,Ci];function pe(le){return[er,St].indexOf(le)>-1}function Ze(le){return q.indexOf(le)>-1}let Je=[St,Z,se,dn,Br,In,Lr,Or,kn,er,pn,en,xn,jn,hi,ze,ot,Dt,cn,an,zn,nn,tr,Fr,nr,qr,Vr,Ci];function mt(le,K,de=!0){return de&&!p.isFunction(K)?!1:Je.indexOf(le)>-1?!0:le.indexOf("on")===0}let et,st=[];function fr(le){if(et)return le(et);st.push(le)}function $r(le){et=le,st.forEach(K=>K(le))}let Hr=Zi((le,K)=>K(le)),Qi=function(){};Qi.prototype={_id:1,on:function(le,K,de){var Ve=this.e||(this.e={});return(Ve[le]||(Ve[le]=[])).push({fn:K,ctx:de,_id:this._id}),this._id++},once:function(le,K,de){var Ve=this;function ft(){Ve.off(le,ft),K.apply(de,arguments)}return ft._=K,this.on(le,ft,de)},emit:function(le){var K=[].slice.call(arguments,1),de=((this.e||(this.e={}))[le]||[]).slice(),Ve=0,ft=de.length;for(Ve;Ve<ft;Ve++)de[Ve].fn.apply(de[Ve].ctx,K);return this},off:function(le,K){var de=this.e||(this.e={}),Ve=de[le],ft=[];if(Ve&&K){for(var on=Ve.length-1;on>=0;on--)if(Ve[on].fn===K||Ve[on].fn._===K||Ve[on]._id===K){Ve.splice(on,1);break}ft=Ve}return ft.length?de[le]=ft:delete de[le],this}};var _i=Qi;let eo={black:"rgba(0,0,0,0.4)",white:"rgba(255,255,255,0.4)"};function gs(le){return le&&le in eo?eo[le]:le}function Di(le){return le==="black"?"#000000":"#ffffff"}function Sr(le,K,de){if(p.isString(K)&&K.startsWith("@")){let Ve=K.replace("@",""),ft=le[Ve]||K;switch(de){case"titleColor":ft=Di(ft);break;case"borderStyle":ft=gs(ft);break}return ft}return K}function si(le,K={},de="light"){let Ve=K[de],ft={};return typeof Ve=="undefined"||!le?le:(Object.keys(le).forEach(on=>{let Kn=le[on],vn=()=>p.isPlainObject(Kn)?si(Kn,K,de):p.isArray(Kn)?Kn.map(Un=>typeof Un=="object"?si(Un,K,de):Sr(Ve,Un)):Sr(Ve,Kn,on);ft[on]=vn()}),ft)}var Na={invokeArrayFns:ho,isUniLifecycleHook:mt,decodedQuery:Aa,ON_LOAD:er,ON_SHOW:St,LINEFEED:b,RENDERJS_MODULES:Mr,formatLog:Yo,WXS_PROTOCOL:ue,WXS_MODULES:Nt,ON_ERROR:dn,UniLifecycleHooks:Je,invokeCreateErrorHandler:Hr,invokeCreateVueAppHook:$r,once:Zi,I18N_JSON_DELIMITERS:v,Emitter:_i,normalizeStyles:si,addLeadingSlash:Ji,resolveComponentInstance:Cn,removeLeadingSlash:Ki,ON_RESIZE:xn,ON_APP_ENTER_FOREGROUND:$a,ON_APP_ENTER_BACKGROUND:qo,ON_HIDE:Z,ON_PAGE_SCROLL:hi,ON_REACH_BOTTOM:ot,parseNVueDataset:Oa,SCHEME_RE:Oe,DATA_RE:gt,cacheStringFunction:Pr,parseQuery:_r,callOptions:Ca,ON_UNHANDLE_REJECTION:Lr,ON_PAGE_NOT_FOUND:In,PRIMARY_COLOR:k,getLen:ur,ON_THEME_CHANGE:Br,TABBAR_HEIGHT:y,NAVBAR_HEIGHT:O,sortObject:Mi,OFF_THEME_CHANGE:Jn,ON_KEYBOARD_HEIGHT_CHANGE:sn,UniNode:oi,NODE_TYPE_PAGE:ii,ACTION_TYPE_PAGE_CREATE:Er,ACTION_TYPE_PAGE_CREATED:Kr,ACTION_TYPE_PAGE_SCROLL:hs,ACTION_TYPE_INSERT:ta,ACTION_TYPE_CREATE:ea,ACTION_TYPE_REMOVE:ps,ACTION_TYPE_ADD_EVENT:Ha,ACTION_TYPE_ADD_WXS_EVENT:Pa,ACTION_TYPE_REMOVE_EVENT:ja,ACTION_TYPE_SET_ATTRIBUTE:Mo,ACTION_TYPE_REMOVE_ATTRIBUTE:Bo,ACTION_TYPE_SET_TEXT:Lo,ON_READY:pn,ON_UNLOAD:en,EventChannel:U,normalizeTabBarStyles:gs,ON_NAVIGATION_BAR_BUTTON_TAP:Fr,stringifyQuery:vi,debounce:Fo,ON_PULL_DOWN_REFRESH:Dt,ON_NAVIGATION_BAR_SEARCH_INPUT_CHANGED:qr,ON_NAVIGATION_BAR_SEARCH_INPUT_CONFIRMED:Vr,ON_NAVIGATION_BAR_SEARCH_INPUT_CLICKED:nr,ON_NAVIGATION_BAR_SEARCH_INPUT_FOCUS_CHANGED:Ci,ON_BACK_PRESS:jn,ON_REACH_BOTTOM_DISTANCE:h,parseUrl:go,onCreateVueApp:fr,ON_TAB_ITEM_TAP:ze,ON_LAUNCH:se,ACTION_TYPE_EVENT:na,createUniEvent:Ko,ON_WXS_INVOKE_CALL_METHOD:gi,WEB_INVOKE_APPSERVICE:Ot,isRootHook:Ze,isRootImmediateHook:pe,UniInputElement:_o,UniTextAreaElement:ds,UniElement:br,UniTextNode:Qo,UniCommentNode:ai,forcePatchProp:Wn,JSON_PROTOCOL:P,resolveOwnerEl:or,ATTR_V_OWNER_ID:Xo,ATTR_V_RENDERJS:Ta};return Na}(u);return a}var T1=1;function uv(){return(T1++).toString()}var dp=u=>u&&JSON.parse(JSON.stringify(u))||u;function lf(u){let a=dl(u);return a.substring(8,a.length-1)}function pp(u){if(!Qn(btoa))return"";let a=Array.prototype.map.call(new Uint8Array(u),p=>String.fromCharCode(p)).join("");return btoa(a)}function cf(u){if(!u||typeof u!="object")return!0;for(let a in u)if(Dc(u,a))return!1;return!0}var ed=["off","error","warn","info","log","debug"],td={};function fv(){ed.forEach(u=>{let a=ed.indexOf(u);td[u]={},ed.forEach(p=>{ed.indexOf(p)<=a&&(td[u][p]=!0)})})}function hr(u){let a=global.WXEnvironment&&global.WXEnvironment.logLevel||"log";return td[a]&&td[a][u]}function po(u){global.nativeLog("wxInteractionAnalyzer: [jsfm]"+u,"__DEBUG")}function dv(u,a,p){return`${a}@${p}#${u}`}var nd=class{constructor(a){this.instanceId=String(a),this.lastCallbackId=0,this.callbacks={},this.hooks={}}add(a){return this.lastCallbackId++,this.callbacks[this.lastCallbackId]=a,this.lastCallbackId}remove(a){let p=this.callbacks[a];return delete this.callbacks[a],p}registerHook(a,p,b,O){let y=dv(a,p,b);this.hooks[y]&&console.warn(`[JS Framework] Override an existing component hook "${y}".`),this.hooks[y]=O}triggerHook(a,p,b,O){let y=dv(a,p,b),h=this.hooks[y];if(!Qn(h))return console.error(`[JS Framework] Invalid hook function type (${typeof h}) on "${y}".`),null;let v=null;try{v=h.apply(null,O||[])}catch(k){throw console.error(`[JS Framework] Failed to execute the hook function on "${y}".`),k}return v}consume(a,p,b){let O=this.callbacks[a];if((typeof b=="undefined"||b===!1)&&delete this.callbacks[a],Qn(O))try{return O.call(null,p,b)}catch(y){throw console.error(`[JS Framework] Failed to execute the callback function:
 ${y.toString()}`),y}return new Error(`invalid callback id "${a}"`)}close(){this.callbacks={},this.hooks={}}};var rd={};function pv(u,a){u&&(rd[u]=a)}function Rl(u){return rd[u]}function hv(u){delete rd[u]}function ni(u){if(u){let a=rd[u];if(a&&a.taskCenter)return a.taskCenter}return null}function P1(u){u.calcClassList&&u.calcClassList()}function hp(u,a,p){let{documentElement:b}=u;if(b.pureChildren.length>0||a.parentNode)return;let O=b.children,y=p?O.indexOf(p):-1;y<0?O.push(a):O.splice(y,0,a),a.nodeType===1?(a.role==="body"?(a.docId=u.id,a.ownerDocument=u,a.parentNode=b,Uc(a,b)):(a.children.forEach(h=>{h.parentNode=a}),gp(u,a),Uc(a,b),delete u.nodeMap[a.nodeId]),b.pureChildren.push(a),N1(u,a)):(a.parentNode=b,u.nodeMap[a.ref]=a)}function N1(u,a){let p=a.toJSON();u&&u.taskCenter&&Qn(u.taskCenter.send)&&u.taskCenter.send("dom",{action:"createBody"},[p])}function gp(u,a){a.role="body",a.depth=1,delete u.nodeMap[a.nodeId],a.ref="_root",u.nodeMap._root=a,u.body=a}function Uc(u,a){u.parentNode=a,P1(u),a.docId&&(u.docId=a.docId,u.ownerDocument=a.ownerDocument,u.ownerDocument.nodeMap[u.nodeId]=u,u.depth=a.depth+1),u.children.forEach(p=>{Uc(p,u)})}function mp(u){for(;u;){if(u.nodeType===1)return u;u=u.nextSibling}}function vp(u){for(;u;){if(u.nodeType===1)return u;u=u.previousSibling}}function Vc(u,a,p,b=!1){p<0&&(p=0);let O=a[p-1],y=a[p];return a.splice(p,0,u),b&&(O&&(O.nextSibling=u),u.previousSibling=O,u.nextSibling=y,y&&(y.previousSibling=u)),p}function $c(u,a,p,b=!1){let O=a.indexOf(u);if(O<0)return-1;if(b){let k=a[O-1],Oe=a[O+1];k&&(k.nextSibling=Oe),Oe&&(Oe.previousSibling=k)}a.splice(O,1);let y=p;O<=p&&(y=p-1);let h=a[y-1],v=a[y];return a.splice(y,0,u),b&&(h&&(h.nextSibling=u),u.previousSibling=h,u.nextSibling=v,v&&(v.previousSibling=u)),O===y?-1:p}function _p(u,a,p=!1){let b=a.indexOf(u);if(!(b<0)){if(p){let O=a[b-1],y=a[b+1];O&&(O.nextSibling=y),y&&(y.previousSibling=O)}a.splice(b,1)}}var Hc=class{constructor(){this.depth=0;this.nodeId=uv(),this.ref=this.nodeId,this.children=[],this.pureChildren=[],this.parentNode=null,this.nextSibling=null,this.previousSibling=null}destroy(){let a=Rl(this.docId);a&&(delete this.docId,delete a.nodeMap[this.nodeId]),this.children.forEach(p=>{p.destroy()})}};var gv={};function bp(u,a){if(!Yi(a)||!a.length)return;class p extends ko{}a.forEach(b=>{p.prototype[b]=function(...O){let y=ni(this.docId);if(y)return y.send("component",{ref:this.ref,component:u,method:b},O)}}),gv[u]=p}function mv(u){return gv[u]}function Tn(u,a,p,b,O){let y={type:"decl",prop:u,value:a.toString(),raws:b,source:O};return p&&(y.important=!0),y}var id="backgroundColor",od="backgroundImage";function I1(u){return a=>{let{value:p,important:b,raws:O,source:y}=a;return u.type==="uvue"?/^#?\S+$/.test(p)||/^rgba?(.+)$/.test(p)?[Tn(od,"none",b,O,y),Tn(id,p,b,O,y)]:/^linear-gradient(.+)$/.test(p)?[Tn(od,p,b,O,y),Tn(id,"transparent",b,O,y)]:p==""?[Tn(od,"none",b,O,y),Tn(id,"transparent",b,O,y)]:[a]:/^#?\S+$/.test(p)||/^rgba?(.+)$/.test(p)?[Tn(id,p,b,O,y)]:/^linear-gradient(.+)$/.test(p)?[Tn(od,p,b,O,y)]:p==""?[a]:[a]}}var k1="borderTop",x1="borderRight",R1="borderBottom",M1="borderLeft",ad=u=>{let{prop:a,value:p,important:b,raws:O,source:y}=u,h=Xf(a).split("-"),v=h[h.length-1];v=Qf(v);let k=p.replace(/\s*,\s*/g,",").split(/\s+/);switch(k.length){case 1:if(h.length===3)return[u];k.push(k[0],k[0],k[0]);break;case 2:k.push(k[0],k[1]);break;case 3:k.push(k[1]);break}return[Tn(k1+v,k[0],b,O,y),Tn(x1+v,k[1],b,O,y),Tn(R1+v,k[2],b,O,y),Tn(M1+v,k[3],b,O,y)]},vv=ad,_v=ad,bv="Width",yv="Style",Ev="Color";function B1(u){return a=>{let{prop:p,value:b,important:O,raws:y,source:h}=a,v=b.replace(/\s*,\s*/g,",").split(/\s+/),k=[/^[\d\.]+\S*|^(thin|medium|thick)$/,/^(solid|dashed|dotted|none)$/,/\S+/].map(gt=>{let Ot=v.findIndex(ue=>gt.test(ue));return Ot<0?null:v.splice(Ot,1)[0]}),Oe=u.type==="uvue";if(Oe){if(v.length>0&&b!=="")return[a]}else if(v.length>0)return[a];return Oe?[..._v(Tn(p+bv,(k[0]||(u.type==="uvue"?"medium":"0")).trim(),O,y,h)),...vv(Tn(p+yv,(k[1]||(u.type==="uvue"?"none":"solid")).trim(),O,y,h)),...ad(Tn(p+Ev,(k[2]||"#000000").trim(),O,y,h))]:[Tn(p+bv,(k[0]||(u.type==="uvue"?"medium":"0")).trim(),O,y,h),Tn(p+yv,(k[1]||(u.type==="uvue"?"none":"solid")).trim(),O,y,h),Tn(p+Ev,(k[2]||"#000000").trim(),O,y,h)]}}var Sv="borderTopLeftRadius",wv="borderTopRightRadius",Cv="borderBottomRightRadius",Av="borderBottomLeftRadius",L1=u=>{let{value:a,important:p,raws:b,source:O}=u,y=a.split(/\s+/);if(a.includes("/"))return[u];switch(y.length){case 1:y.push(y[0],y[0],y[0]);break;case 2:y.push(y[0],y[1]);break;case 3:y.push(y[1]);break}return[Tn(Sv,y[0],p,b,O),Tn(wv,y[1],p,b,O),Tn(Cv,y[2],p,b,O),Tn(Av,y[3],p,b,O)]},F1=u=>{let{value:a,important:p,raws:b,source:O}=u,y=a.split(/\s+/);if(a.includes("/"))return[u];switch(y.length){case 1:return[u];case 2:y.push(y[0],y[1]);break;case 3:y.push(y[1]);break}return[Tn(Sv,y[0],p,b,O),Tn(wv,y[1],p,b,O),Tn(Cv,y[2],p,b,O),Tn(Av,y[3],p,b,O)]},D1="flexDirection",U1="flexWrap",V1=u=>{let{value:a,important:p,raws:b,source:O}=u,y=a.split(/\s+/),h=[/^(column|column-reverse|row|row-reverse)$/,/^(nowrap|wrap|wrap-reverse)$/].map(v=>{let k=y.findIndex(Oe=>v.test(Oe));return k<0?null:y.splice(k,1)[0]});return y.length?[u]:[Tn(D1,h[0]||"column",p,b,O),Tn(U1,h[1]||"nowrap",p,b,O)]},$1="Top",H1="Right",j1="Bottom",z1="Left",Ov=u=>a=>{let{value:p,important:b,raws:O,source:y}=a,h=p.split(/\s+/);switch(h.length){case 1:h.push(h[0],h[0],h[0]);break;case 2:h.push(h[0],h[1]);break;case 3:h.push(h[1]);break}return[Tn(u+$1,h[0],b,O,y),Tn(u+H1,h[1],b,O,y),Tn(u+j1,h[2],b,O,y),Tn(u+z1,h[3],b,O,y)]},W1=Ov("margin"),G1=Ov("padding"),q1="transitionProperty",Y1="transitionDuration",J1="transitionTimingFunction",K1="transitionDelay",Z1=u=>{let{value:a,important:p,raws:b,source:O}=u,y=[],h;if(u.value.includes("cubic-bezier")){let v=/^(\S*)?\s*(\d*\.?\d+(?:ms|s)?)?\s*((\S*)|cubic-bezier\(.*\))?\s*(\d*\.?\d+(?:ms|s)?)?$/;h=a.match(v)}else{let v=/^(\S*)?\s*(\d*\.?\d+(?:ms|s)?)?\s*(\S*)?\s*(\d*\.?\d+(?:ms|s)?)?$/;h=a.match(v)}return h&&(h[1]&&y.push(Tn(q1,h[1],p,b,O)),h[2]&&y.push(Tn(Y1,h[2],p,b,O)),h[3]&&y.push(Tn(J1,h[3],p,b,O)),h[4]&&y.push(Tn(K1,h[4],p,b,O))),y};function X1(u){let a=B1(u),p=Jm({transition:Z1,border:a,background:I1(u),borderTop:a,borderRight:a,borderBottom:a,borderLeft:a,borderStyle:vv,borderWidth:_v,borderColor:ad,borderRadius:u.type=="uvue"?L1:F1,margin:W1,padding:G1},u.type!=="uvue"?{flexFlow:V1}:{}),b={};return b=p,b}var yp,Tv=Symbol("expanded");function Pv(u){return{postcssPlugin:`${u.type||"nvue"}:expand`,Declaration(p){if(p[Tv])return;yp||(yp=X1(u));let b=yp[p.prop];if(b){let O=b(p);O.length===1&&O[0]===p||p.replaceWith(O)}p[Tv]=!0}}}var Q1=Pv({type:"nvue"}).Declaration;function Ep(u,a){let p=fo({replaceWith(O){b=O}},ex(u,a)),b=[p];return Q1(p),b}function ex(u,a){let p=a+"";return p.includes("!important")?{prop:u,value:p.replace(/\s*!important/,""),important:!0}:{prop:u,value:p,important:!1}}var tx="view",nx=["click","longpress","touchstart","touchmove","touchend","panstart","panmove","panend","horizontalpan","verticalpan","swipe"];function Sp(u,a){let p=Rl(u);p.nodeMap[a.nodeId]=a}var wp;function Nv(u){wp||(wp=u)}var ko=class extends Hc{constructor(a=tx,p={},b){super();let O=mv(a);if(O&&!b)return new O(a,p,!0);this.nodeType=1,this.type=a,this.attr=p.attr||{},this.style=p.style||{},this.classStyle=p.classStyle||{},this.classList=p.classList||[],this.styleSheet=p.styleSheet||{},this.event={}}appendChild(a){if(!(a.parentNode&&a.parentNode!==this)){if(a.parentNode){if(hr("debug")&&po(`[appendChild](${this.docId},${a.type},${a.ref}) Move <${a.type}> to ${this.children.length} of <${this.type}> (${this.ref}).`),$c(a,this.children,this.children.length,!0),a.nodeType===1){let p=$c(a,this.pureChildren,this.pureChildren.length),b=ni(this.docId);if(b&&p>=0)return b.send("dom",{action:"moveElement"},[a.ref,this.ref,p])}}else if(hr("debug")&&po(`[appendChild](${this.docId},${a.type},${a.ref}) Append <${a.type}> to <${this.type}> (${this.ref}).`),Uc(a,this),Vc(a,this.children,this.children.length,!0),this.docId&&Sp(this.docId,a),a.nodeType===1){Vc(a,this.pureChildren,this.pureChildren.length);let p=ni(this.docId);if(p)return p.send("dom",{action:"addElement"},[this.ref,a.toJSON(),-1])}}}insertBefore(a,p){if(!(a.parentNode&&a.parentNode!==this)&&!(a===p||a.nextSibling&&a.nextSibling===p)){if(a.parentNode){if($c(a,this.children,this.children.indexOf(p),!0),a.nodeType===1){let b=mp(p),O=$c(a,this.pureChildren,b?this.pureChildren.indexOf(b):this.pureChildren.length),y=ni(this.docId);if(y&&O>=0)return y.send("dom",{action:"moveElement"},[a.ref,this.ref,O])}}else if(hr("debug")&&po(`[insertBefore](${this.docId},${a.type},${a.ref}) Insert <${a.type}> to <${this.type}> (${this.ref}), before (${p.ref}).`),Uc(a,this),Vc(a,this.children,this.children.indexOf(p),!0),this.docId&&Sp(this.docId,a),a.nodeType===1){let b=mp(p),O=Vc(a,this.pureChildren,b?this.pureChildren.indexOf(b):this.pureChildren.length),y=ni(this.docId);if(y)return y.send("dom",{action:"addElement"},[this.ref,a.toJSON(),O])}}}insertAfter(a,p){if(!(a.parentNode&&a.parentNode!==this)&&!(a===p||a.previousSibling&&a.previousSibling===p)){if(a.parentNode){if($c(a,this.children,this.children.indexOf(p)+1,!0),a.nodeType===1){let b=$c(a,this.pureChildren,this.pureChildren.indexOf(vp(p))+1),O=ni(this.docId);if(O&&b>=0)return O.send("dom",{action:"moveElement"},[a.ref,this.ref,b])}}else if(hr("debug")&&po(`[insertAfter](${this.docId},${a.type},${a.ref}) Insert <${a.type}> to <${this.type}> (${this.ref}), after (${p.ref}).`),Uc(a,this),Vc(a,this.children,this.children.indexOf(p)+1,!0),this.docId&&Sp(this.docId,a),a.nodeType===1){let b=Vc(a,this.pureChildren,this.pureChildren.indexOf(vp(p))+1),O=ni(this.docId);if(O)return O.send("dom",{action:"addElement"},[this.ref,a.toJSON(),b])}}}removeChild(a,p){if(a.parentNode&&(_p(a,this.children,!0),a.nodeType===1)){hr("debug")&&po(`[removeChild](${this.docId},${a.type},${a.ref}) Remove <${a.type}> from <${this.type}> (${this.ref}).`),_p(a,this.pureChildren);let b=ni(this.docId);b&&b.send("dom",{action:"removeElement"},[a.ref])}p||a.destroy()}clear(){let a=ni(this.docId);a&&this.pureChildren.forEach(p=>{a.send("dom",{action:"removeElement"},[p.ref])}),this.children.forEach(p=>{p.destroy()}),this.children.length=0,this.pureChildren.length=0}setAttr(a,p,b){if(this.attr[a]===p&&b!==!1)return;this.attr[a]=p;let O=ni(this.docId);!b&&O&&O.send("dom",{action:"updateAttrs"},[this.ref,{[a]:p}])}setAttrs(a,p){if(cf(a))return;let b={};for(let O in a)this.attr[O]!==a[O]&&(this.attr[O]=a[O],b[O]=a[O]);if(!cf(b)){let O=ni(this.docId);!p&&O&&O.send("dom",{action:"updateAttrs"},[this.ref,b])}}setStyle(a,p,b){Ep(a,p).forEach(({prop:O,value:y})=>{if(this.style[O]===y&&b!==!1)return;this.style[O]=y;let h=ni(this.docId);!b&&h&&h.send("dom",{action:"updateStyle"},[this.ref,{[O]:y===""&&O in this.classStyle?this.classStyle[O]:y}])})}setStyles(a,p){if(cf(a))return;let b={};for(let O in a)Ep(O,a[O]).forEach(({prop:y,value:h})=>{this.style[y]!==h&&(this.style[y]=h,b[y]=h===""&&y in this.classStyle?this.classStyle[y]:h)});if(!cf(b)){let O=ni(this.docId);!p&&O&&O.send("dom",{action:"updateStyle"},[this.ref,b])}}setClassStyle(a){for(let b in this.classStyle)this.classStyle[b]="";fo(this.classStyle,a);let p=ni(this.docId);p&&p.send("dom",{action:"updateStyle"},[this.ref,this.toStyle()])}setClassList(a){a.length===this.classList.length&&a.filter(p=>!this.classList.includes(p)).length===0||(this.classList=a,this.parentNode&&this.calcClassList())}calcClassList(){this.setClassStyle(wp(this))}setStyleSheet(a){this.styleSheet=a}addEvent(a,p,b){if(this.event||(this.event={}),!this.event[a]){hr("debug")&&po(`[addEvent](${this.docId},${this.type},${this.ref}) Add "${a}" event on <${this.type}> (${this.ref}).`),this.event[a]={handler:p,params:b};let O=ni(this.docId);O&&O.send("dom",{action:"addEvent"},[this.ref,a])}}removeEvent(a){if(this.event&&this.event[a]){hr("debug")&&po(`[removeEvent](${this.docId},${this.type},${this.ref}) Remove "${a}" event on <${this.type}> (${this.ref}).`),delete this.event[a];let p=ni(this.docId);p&&p.send("dom",{action:"removeEvent"},[this.ref,a])}}fireEvent(a,p,b,O){let y=null,h=!1,v=this.event[a];if(v&&p){hr("debug")&&po(`[fireEvent](${this.docId},${this.type},${this.ref}) Fire "${a}" event on <${this.type}> (${this.ref}).`);let k=v.handler;p.stopPropagation=()=>{h=!0},p.preventDefault=()=>{};try{O&&O.params?y=k.call(this,...O.params,p):y=k.call(this,p)}catch(Oe){throw console.error(`[JS Framework] Failed to invoke the event handler of "${a}" on ${this.type} (${this.ref}):
 ${Oe.toString()}`),Oe}}return!h&&b&&nx.indexOf(a)!==-1&&this.parentNode&&this.parentNode.fireEvent&&(p.currentTarget=this.parentNode,this.parentNode.fireEvent(a,p,b)),y}toStyle(){let a=Object.assign({},this.classStyle),p=this.style;for(let b in p){let O=p[b];a[b]=O===""&&b in this.classStyle?this.classStyle[b]:O}return a}toJSON(a=!1){let p={ref:this.ref.toString(),type:this.type,attr:this.attr,style:this.toStyle()},b=[];for(let O in this.event){let{params:y}=this.event[O];y?b.push({type:O,params:y}):b.push(O)}return b.length&&(p.event=b),!a&&this.pureChildren.length&&(p.children=this.pureChildren.map(O=>O.toJSON())),p}toString(){return"<"+this.type+" attr="+JSON.stringify(this.attr)+" style="+JSON.stringify(this.toStyle())+">"+this.pureChildren.map(a=>a.toString()).join("")+"</"+this.type+">"}};function Iv(u){let a=u&&u.__v_raw;return a?Iv(a):u}function kv(u){let a=lf(u);switch(a){case"Undefined":case"Null":return"";case"RegExp":return u.toString();case"Date":return u.toISOString();case"Number":case"String":case"Boolean":case"Array":case"Object":return Iv(u);case"ArrayBuffer":return{"@type":"binary",dataType:a,base64:pp(u)};case"Int8Array":case"Uint8Array":case"Uint8ClampedArray":case"Int16Array":case"Uint16Array":case"Int32Array":case"Uint32Array":case"Float32Array":case"Float64Array":return{"@type":"binary",dataType:a,base64:pp(u.buffer)};default:return JSON.stringify(u)}}var sd=function(){},Pu=class{constructor(a,p){Object.defineProperty(this,"instanceId",{enumerable:!0,value:String(a)}),Object.defineProperty(this,"callbackManager",{enumerable:!0,value:new nd(a)}),sd=p||function(){}}callback(a,p,b){return this.callbackManager.consume(a,p,b)}registerHook(a,p,b,O){return this.callbackManager.registerHook(a,p,b,O)}triggerHook(a,p,b,O){return this.callbackManager.triggerHook(a,p,b,O)}updateData(a,p,b){this.send("module",{module:"dom",method:"updateComponentData"},[a,p,b])}destroyCallback(){return this.callbackManager.close()}normalize(a,p=!1){let b=lf(a);if(a&&a instanceof ko)return a.ref;if(a&&a.$el instanceof ko)return a.$el.ref;if(b==="Function")return this.callbackManager.add(a).toString();if(p){if(b==="Object"){let O={};for(let y in a)O[y]=this.normalize(a[y],!0);return O}if(b==="Array")return a.map(O=>this.normalize(O,!0))}return a&&a.ref&&a["[[VirtualElement]]"]?a.ref:kv(a)}send(a,p,b,O){let{action:y,component:h,ref:v,module:k,method:Oe}=p;switch(b=b.map(gt=>this.normalize(gt,a!=="module")),lf(O)==="Object"&&(O=this.normalize(O,!0)),a){case"dom":return hr("debug")&&po(`[task](${this.instanceId},${a},${y}) ${JSON.stringify(b)}`),this[y](this.instanceId,b);case"component":return this.componentHandler(this.instanceId,v,Oe,b,fo({component:h},O));default:return hr("debug")&&po(`[task](${this.instanceId},${k},${Oe}) ${JSON.stringify(b)}`),this.moduleHandler(this.instanceId,k,Oe,b,O)}}callDOM(a,p){return this[a](this.instanceId,p)}callComponent(a,p,b,O){return this.componentHandler(this.instanceId,a,p,b,O)}callModule(a,p,b,O){return this.moduleHandler(this.instanceId,a,p,b,O)}};function xv(){let u={createFinish:global.callCreateFinish,updateFinish:global.callUpdateFinish,refreshFinish:global.callRefreshFinish,createBody:global.callCreateBody,addElement:global.callAddElement,removeElement:global.callRemoveElement,moveElement:global.callMoveElement,updateAttrs:global.callUpdateAttrs,updateStyle:global.callUpdateStyle,addEvent:global.callAddEvent,removeEvent:global.callRemoveEvent,__updateComponentData:global.__updateComponentData},a=Pu.prototype;for(let p in u){let b=u[p];a[p]=b?(O,y)=>b(O,...y):(O,y)=>sd(O,[{module:"dom",method:p,args:y}],"-1")}a.componentHandler=global.callNativeComponent||((p,b,O,y,h)=>sd(p,[{component:h.component,ref:b,method:O,args:y}])),a.moduleHandler=global.callNativeModule||((p,b,O,y)=>sd(p,[{module:b,method:O,args:y}]))}function rx(u,a,p,b,O,y){let h=u.getRef(a);if(h)return u.fireEvent(h,p,b,O,y);if(b)return b._nodeId=a,u.fireEvent(u.getRef("_documentElement"),p,b,O,y)}function ix(u,a,p,b){return u.taskCenter.callback(a,p,b)}function ox(u,a,p,b,O){if(!u||!u.taskCenter)return console.error(`[JS Framework] Can't find "document" or "taskCenter".`),null;let y=null;try{y=u.taskCenter.triggerHook(a,p,b,O)}catch(h){throw console.error(`[JS Framework] Failed to trigger the "${p}@${b}" hook on ${a}.`),h}return y}function Cp(u,a){let p=Rl(u);if(!p)return new Error(`[JS Framework] Failed to receiveTasks, instance (${u}) is not available.`);if(Yi(a))return a.map(b=>{switch(b.method){case"callback":return ix(p,...b.args);case"fireEventSync":case"fireEvent":return rx(p,...b.args);case"componentHook":return ox(p,...b.args)}})}var fc={};function Rv(u={}){for(let a in u)Dc(fc,a)||(fc[a]={}),!!Yi(u[a])&&u[a].forEach(p=>{pi(p)?fc[a][p]=!0:Tu(p)&&pi(p.name)&&(fc[a][p.name]=p.args||[])})}function ld(u,a){return pi(a)?!!(fc[u]&&fc[u][a]):!!fc[u]}function Mv(u){return fc[u]}var Ap={};function Bv(u){!Yi(u)||u.forEach(a=>{!a||(pi(a)?Ap[a]=!0:Tu(a)&&pi(a.type)&&(Ap[a.type]=a,bp(a.type,a.methods)))})}function Op(u){return!!Ap[u]}var dc=[];function cd(u,a){Tp(u)?console.warn(`Service "${u}" has been registered already!`):(a=fo({},a),dc.push({name:u,options:a}))}function ud(u){dc.some((a,p)=>{if(a.name===u)return dc.splice(p,1),!0})}function Tp(u){return ax(u)>=0}function ax(u){return dc.map(a=>a.name).indexOf(u)}function sx(u){return a=>{let p=Jf(u,a),{createApp:b}=p;p.createVueApp=p.createApp=(O,y)=>b(O,y).use(lx,a),a.Vue=p}}var lx={install(u,a){cx(u,a),af(a).initApp(u)}};function cx(u,a){let{mount:p}=u;u.mount=b=>{let O=p(b);return b==="#app"&&a.__registerApp(O),O}}function ux(u){let{UniShared:a,VueShared:p,VueReactivity:b}=u;var O=function(y,h,v,k){"use strict";var Oe=[];function gt(i){Oe.push(i)}function Ot(){Oe.pop()}function ue(i){v.pauseTracking();for(var s=Oe.length?Oe[Oe.length-1].component:null,d=s&&s.appContext.config.warnHandler,m=P(),A=arguments.length,C=new Array(A>1?A-1:0),x=1;x<A;x++)C[x-1]=arguments[x];if(d)Jn(d,s,11,[i+C.map(M=>{var J,Q;return(Q=(J=M.toString)==null?void 0:J.call(M))!=null?Q:JSON.stringify(M)}).join(""),s&&s.proxy,m.map(M=>{var{vnode:J}=M;return"at <".concat(as(s,J.type),">")}).join(`
`),m]);else{var V=["[Vue warn]: ".concat(i),...C];m.length&&V.push(`
`,...Nt(m)),console.warn(...V)}v.resetTracking()}function P(){var i=Oe[Oe.length-1];if(!i)return[];for(var s=[];i;){var d=s[0];d&&d.vnode===i?d.recurseCount++:s.push({vnode:i,recurseCount:0});var m=i.component&&i.component.parent;i=m&&m.vnode}return s}function Nt(i){var s=[];return i.forEach((d,m)=>{s.push(...m===0?[]:[`
`],...Mr(d))}),s}function Mr(i){var{vnode:s,recurseCount:d}=i,m=d>0?"... (".concat(d," recursive calls)"):"",A=s.component?s.component.parent==null:!1,C=" at <".concat(as(s.component,s.type,A)),x=">"+m;return s.props?[C,...St(s.props),x]:[C+x]}function St(i){var s=[],d=Object.keys(i);return d.slice(0,3).forEach(m=>{s.push(...Z(m,i[m]))}),d.length>3&&s.push(" ..."),s}function Z(i,s,d){return h.isString(s)?(s=JSON.stringify(s),d?s:["".concat(i,"=").concat(s)]):typeof s=="number"||typeof s=="boolean"||s==null?d?s:["".concat(i,"=").concat(s)]:v.isRef(s)?(s=Z(i,v.toRaw(s.value),!0),d?s:["".concat(i,"=Ref<"),s,">"]):h.isFunction(s)?["".concat(i,"=fn").concat(s.name?"<".concat(s.name,">"):"")]:(s=v.toRaw(s),d?s:["".concat(i,"="),s])}function se(i,s){i!==void 0&&(typeof i!="number"?ue("".concat(s," is not a valid number - got ").concat(JSON.stringify(i),".")):isNaN(i)&&ue("".concat(s," is NaN - the duration expression might be incorrect.")))}var dn={SETUP_FUNCTION:0,"0":"SETUP_FUNCTION",RENDER_FUNCTION:1,"1":"RENDER_FUNCTION",WATCH_GETTER:2,"2":"WATCH_GETTER",WATCH_CALLBACK:3,"3":"WATCH_CALLBACK",WATCH_CLEANUP:4,"4":"WATCH_CLEANUP",NATIVE_EVENT_HANDLER:5,"5":"NATIVE_EVENT_HANDLER",COMPONENT_EVENT_HANDLER:6,"6":"COMPONENT_EVENT_HANDLER",VNODE_HOOK:7,"7":"VNODE_HOOK",DIRECTIVE_HOOK:8,"8":"DIRECTIVE_HOOK",TRANSITION_HOOK:9,"9":"TRANSITION_HOOK",APP_ERROR_HANDLER:10,"10":"APP_ERROR_HANDLER",APP_WARN_HANDLER:11,"11":"APP_WARN_HANDLER",FUNCTION_REF:12,"12":"FUNCTION_REF",ASYNC_COMPONENT_LOADER:13,"13":"ASYNC_COMPONENT_LOADER",SCHEDULER:14,"14":"SCHEDULER"},Br={sp:"serverPrefetch hook",bc:"beforeCreate hook",c:"created hook",bm:"beforeMount hook",m:"mounted hook",bu:"beforeUpdate hook",u:"updated",bum:"beforeUnmount hook",um:"unmounted hook",a:"activated hook",da:"deactivated hook",ec:"errorCaptured hook",rtc:"renderTracked hook",rtg:"renderTriggered hook",[0]:"setup function",[1]:"render function",[2]:"watcher getter",[3]:"watcher callback",[4]:"watcher cleanup function",[5]:"native event handler",[6]:"component event handler",[7]:"vnode hook",[8]:"directive hook",[9]:"transition hook",[10]:"app errorHandler",[11]:"app warnHandler",[12]:"ref function",[13]:"async component loader",[14]:"scheduler flush. This is likely a Vue internals bug. Please open an issue at https://github.com/vuejs/core ."};function Jn(i,s,d,m){try{return m?i(...m):i()}catch(A){In(A,s,d)}}function sn(i,s,d,m){if(h.isFunction(i)){var A=Jn(i,s,d,m);return A&&h.isPromise(A)&&A.catch(V=>{In(V,s,d)}),A}for(var C=[],x=0;x<i.length;x++)C.push(sn(i[x],s,d,m));return C}function In(i,s,d){var m=arguments.length>3&&arguments[3]!==void 0?arguments[3]:!0,A=s?s.vnode:null;if(s){for(var C=s.parent,x=s.proxy,V=Br[d]||d;C;){var M=C.ec;if(M){for(var J=0;J<M.length;J++)if(M[J](i,x,V)===!1)return}C=C.parent}var Q=s.appContext.config.errorHandler;if(Q){Jn(Q,null,10,[i,x,V]);return}}Lr(i,d,A,m)}function Lr(i,s,d){var m=arguments.length>3&&arguments[3]!==void 0?arguments[3]:!0;{var A=Br[s]||s;d&&gt(d),ue("Unhandled error".concat(A?" during execution of ".concat(A):"")),d&&Ot(),console.error(i)}}var Or=!1,er=!1,pn=[],en=0,kn=[],tr=null,xn=0,jn={then(i){setTimeout(()=>i(),0)}},hi=y.platform==="iOS",ze=hi?jn:Promise.resolve(),ot=null,Dt=100;function cn(i){var s=ot||ze;return i?s.then(this?i.bind(this):i):s}function nn(i){for(var s=en+1,d=pn.length;s<d;){var m=s+d>>>1,A=pn[m],C=Ci(A);C<i||C===i&&A.pre?s=m+1:d=m}return s}function an(i){(!pn.length||!pn.includes(i,Or&&i.allowRecurse?en+1:en))&&(i.id==null?pn.push(i):pn.splice(nn(i.id),0,i),zn())}function zn(){!Or&&!er&&(er=!0,ot=ze.then(qo))}function Fr(i){var s=pn.indexOf(i);s>en&&pn.splice(s,1)}function nr(i){h.isArray(i)?kn.push(...i):(!tr||!tr.includes(i,i.allowRecurse?xn+1:xn))&&kn.push(i),zn()}function qr(i,s){var d=arguments.length>2&&arguments[2]!==void 0?arguments[2]:Or?en+1:0;for(s=s||new Map;d<pn.length;d++){var m=pn[d];if(m&&m.pre){if(i&&m.id!==i.uid||gi(s,m))continue;pn.splice(d,1),d--,m()}}}function Vr(i){if(kn.length){var s=[...new Set(kn)].sort((d,m)=>Ci(d)-Ci(m));if(kn.length=0,tr){tr.push(...s);return}for(tr=s,i=i||new Map,xn=0;xn<tr.length;xn++)gi(i,tr[xn])||tr[xn]();tr=null,xn=0}}var Ci=i=>i.id==null?1/0:i.id,$a=(i,s)=>{var d=Ci(i)-Ci(s);if(d===0){if(i.pre&&!s.pre)return-1;if(s.pre&&!i.pre)return 1}return d};function qo(i){er=!1,Or=!0,i=i||new Map,pn.sort($a);var s=m=>gi(i,m);try{for(en=0;en<pn.length;en++){var d=pn[en];if(d&&d.active!==!1){if(s(d))continue;Jn(d,null,14)}}}finally{en=0,pn.length=0,Vr(i),Or=!1,ot=null,(pn.length||kn.length)&&qo(i)}}function gi(i,s){if(!i.has(s))i.set(s,1);else{var d=i.get(s);if(d>Dt){var m=s.ownerInstance,A=m&&os(m.type);return In("Maximum recursive updates exceeded".concat(A?" in component <".concat(A,">"):"",". This means you have a reactive effect that is mutating its own dependencies and thus recursively triggering itself. Possible sources include component template, render function, updated hook or watcher source function."),null,10),!0}else i.set(s,d+1)}}var Tr=!1,Pr=new Set;h.getGlobalThis().__VUE_HMR_RUNTIME__={createRecord:mn(Ki),rerender:mn(Zi),reload:mn(Ca)};var ur=new Map;function xo(i){var s=i.type.__hmrId,d=ur.get(s);d||(Ki(s,i.type),d=ur.get(s)),d.instances.add(i)}function Ji(i){ur.get(i.type.__hmrId).instances.delete(i)}function Ki(i,s){return ur.has(i)?!1:(ur.set(i,{initialDef:ho(s),instances:new Set}),!0)}function ho(i){return Cc(i)?i.__vccOpts:i}function Zi(i,s){var d=ur.get(i);!d||(d.initialDef.render=s,[...d.instances].forEach(m=>{s&&(m.render=s,ho(m.type).render=s),m.renderCache=[],Tr=!0,m.effect.dirty=!0,m.update(),Tr=!1}))}function Ca(i,s){var d=ur.get(i);if(!!d){s=ho(s),Mi(d.initialDef,s);var m=[...d.instances];for(var A of m){var C=ho(A.type);Pr.has(C)||(C!==d.initialDef&&Mi(C,s),Pr.add(C)),A.appContext.propsCache.delete(A.type),A.appContext.emitsCache.delete(A.type),A.appContext.optionsCache.delete(A.type),A.ceReload?(Pr.add(C),A.ceReload(s.styles),Pr.delete(C)):A.parent?(A.parent.effect.dirty=!0,an(A.parent.update)):A.appContext.reload?A.appContext.reload():typeof window!="undefined"?window.location.reload():console.warn("[HMR] Root or manually mounted instance modified. Full reload required.")}nr(()=>{for(var x of m)Pr.delete(ho(x.type))})}}function Mi(i,s){h.extend(i,s);for(var d in i)d!=="__file"&&!(d in s)&&delete i[d]}function mn(i){return(s,d)=>{try{return i(s,d)}catch(m){console.error(m),console.warn("[HMR] Something went wrong during Vue component hot-reload. Full reload required.")}}}var Cn,Bi=[],or=!1;function mi(i){for(var s=arguments.length,d=new Array(s>1?s-1:0),m=1;m<s;m++)d[m-1]=arguments[m];Cn?Cn.emit(i,...d):or||Bi.push({event:i,args:d})}function Yo(i,s){var d,m;if(Cn=i,Cn)Cn.enabled=!0,Bi.forEach(C=>{var{event:x,args:V}=C;return Cn.emit(x,...V)}),Bi=[];else if(typeof window!="undefined"&&window.HTMLElement&&!((m=(d=window.navigator)==null?void 0:d.userAgent)==null?void 0:m.includes("jsdom"))){var A=s.__VUE_DEVTOOLS_HOOK_REPLAY__=s.__VUE_DEVTOOLS_HOOK_REPLAY__||[];A.push(C=>{Yo(C,s)}),setTimeout(()=>{Cn||(s.__VUE_DEVTOOLS_HOOK_REPLAY__=null,or=!0,Bi=[])},3e3)}else or=!0,Bi=[]}function Jo(i,s){mi("app:init",i,s,{Fragment:Bn,Text:Ln,Comment:Fn,Static:$i})}function vi(i){mi("app:unmount",i)}var Yr=go("component:added"),Aa=go("component:updated"),ri=go("component:removed"),_r=i=>{Cn&&typeof Cn.cleanupBuffer=="function"&&!Cn.cleanupBuffer(i)&&ri(i)};function go(i){return s=>{mi(i,s.appContext.app,s.uid,s.parent?s.parent.uid:void 0,s)}}var Oa=Ai("perf:start"),Li=Ai("perf:end");function Ai(i){return(s,d,m)=>{mi(i,s.appContext.app,s.uid,s,d,m)}}function Ro(i,s,d){mi("component:emit",i.appContext.app,i,s,d)}function Ko(i,s){if(!i.isUnmounted){for(var d=i.vnode.props||h.EMPTY_OBJ,m=arguments.length,A=new Array(m>2?m-2:0),C=2;C<m;C++)A[C-2]=arguments[C];{var{emitsOptions:x,propsOptions:[V]}=i;if(x)if(!(s in x))(!V||!(h.toHandlerKey(s)in V))&&ue('Component emitted event "'.concat(s,'" but it is neither declared in the emits option nor as an "').concat(h.toHandlerKey(s),'" prop.'));else{var M=x[s];if(h.isFunction(M)){var J=M(...A);J||ue('Invalid event arguments: event validation failed for event "'.concat(s,'".'))}}}var Q=A,ee=s.startsWith("update:"),Y=ee&&s.slice(7);if(Y&&Y in d){var me="".concat(Y==="modelValue"?"model":Y,"Modifiers"),{number:Te,trim:dt}=d[me]||h.EMPTY_OBJ;dt&&(Q=A.map(he=>h.isString(he)?he.trim():he)),Te&&(Q=A.map(h.looseToNumber))}Ro(i,s,Q);{var qe=s.toLowerCase();qe!==s&&d[h.toHandlerKey(qe)]&&ue('Event "'.concat(qe,'" is emitted in component ').concat(as(i,i.type),' but the handler is registered for "').concat(s,'". Note that HTML attributes are case-insensitive and you cannot use v-on to listen to camelCase events when using in-DOM templates. You should probably use "').concat(h.hyphenate(s),'" instead of "').concat(s,'".'))}var Pt,Mt=d[Pt=h.toHandlerKey(s)]||d[Pt=h.toHandlerKey(h.camelize(s))];!Mt&&ee&&(Mt=d[Pt=h.toHandlerKey(h.hyphenate(s))]),Mt&&sn(Mt,i,6,Q);var oe=d[Pt+"Once"];if(oe){if(!i.emitted)i.emitted={};else if(i.emitted[Pt])return;i.emitted[Pt]=!0,sn(oe,i,6,Q)}}}function mo(i,s){var d=arguments.length>2&&arguments[2]!==void 0?arguments[2]:!1,m=s.emitsCache,A=m.get(i);if(A!==void 0)return A;var C=i.emits,x={},V=!1;if(!h.isFunction(i)){var M=J=>{var Q=mo(J,s,!0);Q&&(V=!0,h.extend(x,Q))};!d&&s.mixins.length&&s.mixins.forEach(M),i.extends&&M(i.extends),i.mixins&&i.mixins.forEach(M)}return!C&&!V?(h.isObject(i)&&m.set(i,null),null):(h.isArray(C)?C.forEach(J=>x[J]=null):h.extend(x,C),h.isObject(i)&&m.set(i,x),x)}function hn(i,s){return!i||!h.isOn(s)?!1:(s=s.slice(2).replace(/Once$/,""),h.hasOwn(i,s[0].toLowerCase()+s.slice(1))||h.hasOwn(i,h.hyphenate(s))||h.hasOwn(i,s))}var An=null,Jr=null;function Dn(i){var s=An;return An=i,Jr=i&&i.type.__scopeId||null,s}function ii(i){Jr=i}function Dr(){Jr=null}var Ht=i=>xe;function xe(i){var s=arguments.length>1&&arguments[1]!==void 0?arguments[1]:An;if(!s||i._n)return i;var d=function(){d._d&&ns(-1);var m=Dn(s),A;try{A=i(...arguments)}finally{Dn(m),d._d&&ns(1)}return Aa(s),A};return d._n=!0,d._c=!0,d._d=!0,d}var Xi=!1;function tn(){Xi=!0}function vo(i){var{type:s,vnode:d,proxy:m,withProxy:A,props:C,propsOptions:[x],slots:V,attrs:M,emit:J,render:Q,renderCache:ee,data:Y,setupState:me,ctx:Te,inheritAttrs:dt}=i,qe,Pt,Mt=Dn(i);Xi=!1;try{if(d.shapeFlag&4){var oe=A||m,he=me.__isScriptSetup?new Proxy(oe,{get(Ce,nt,We){return ue("Property '".concat(String(nt),"' was accessed via 'this'. Avoid using 'this' in templates.")),Reflect.get(Ce,nt,We)}}):oe;qe=Ir(Q.call(he,oe,ee,C,me,Y,Te)),Pt=M}else{var _e=s;M===C&&tn(),qe=Ir(_e.length>1?_e(C,{get attrs(){return tn(),M},slots:V,emit:J}):_e(C,null)),Pt=s.props?M:Zo(M)}}catch(Ce){zr.length=0,In(Ce,i,1),qe=sr(Fn)}var He=qe,at=void 0;if(qe.patchFlag>0&&qe.patchFlag&2048&&([He,at]=oi(qe)),Pt&&dt!==!1){var tt=Object.keys(Pt),{shapeFlag:bt}=He;if(tt.length){if(bt&(1|6))x&&tt.some(h.isModelListener)&&(Pt=Xo(Pt,x)),He=ji(He,Pt);else if(!Xi&&He.type!==Fn){for(var Ye=Object.keys(M),L=[],G=[],te=0,be=Ye.length;te<be;te++){var Se=Ye[te];h.isOn(Se)?h.isModelListener(Se)||L.push(Se[2].toLowerCase()+Se.slice(3)):G.push(Se)}G.length&&ue("Extraneous non-props attributes (".concat(G.join(", "),") were passed to component but could not be automatically inherited because component renders fragment or text root nodes.")),L.length&&ue("Extraneous non-emits event listeners (".concat(L.join(", "),') were passed to component but could not be automatically inherited because component renders fragment or text root nodes. If the listener is intended to be a component custom event listener only, declare it using the "emits" option.'))}}}return d.dirs&&(Ta(He)||ue("Runtime directive used on component with non-element root node. The directives will not function as intended."),He=ji(He),He.dirs=He.dirs?He.dirs.concat(d.dirs):d.dirs),d.transition&&(Ta(He)||ue("Component inside <Transition> renders non-element root node that cannot be animated."),He.transition=d.transition),at?at(He):qe=He,Dn(Mt),qe}var oi=i=>{var s=i.children,d=i.dynamicChildren,m=Oi(s,!1);if(m){if(m.patchFlag>0&&m.patchFlag&2048)return oi(m)}else return[i,void 0];var A=s.indexOf(m),C=d?d.indexOf(m):-1,x=V=>{s[A]=V,d&&(C>-1?d[C]=V:V.patchFlag>0&&(i.dynamicChildren=[...d,V]))};return[Ir(m),x]};function Oi(i){for(var s=arguments.length>1&&arguments[1]!==void 0?arguments[1]:!0,d,m=0;m<i.length;m++){var A=i[m];if(Wr(A)){if(A.type!==Fn||A.children==="v-if"){if(d)return;if(d=A,s&&d.patchFlag>0&&d.patchFlag&2048)return Oi(d.children)}}else return}return d}var Zo=i=>{var s;for(var d in i)(d==="class"||d==="style"||h.isOn(d))&&((s||(s={}))[d]=i[d]);return s},Xo=(i,s)=>{var d={};for(var m in i)(!h.isModelListener(m)||!(m.slice(9)in s))&&(d[m]=i[m]);return d},Ta=i=>i.shapeFlag&(6|1)||i.type===Fn;function Fi(i,s,d){var{props:m,children:A,component:C}=i,{props:x,children:V,patchFlag:M}=s,J=C.emitsOptions;if((A||V)&&Tr||s.dirs||s.transition)return!0;if(d&&M>=0){if(M&1024)return!0;if(M&16)return m?ai(m,x,J):!!x;if(M&8)for(var Q=s.dynamicProps,ee=0;ee<Q.length;ee++){var Y=Q[ee];if(x[Y]!==m[Y]&&!hn(J,Y))return!0}}else return(A||V)&&(!V||!V.$stable)?!0:m===x?!1:m?x?ai(m,x,J):!0:!!x;return!1}function ai(i,s,d){var m=Object.keys(s);if(m.length!==Object.keys(i).length)return!0;for(var A=0;A<m.length;A++){var C=m[A];if(s[C]!==i[C]&&!hn(d,C))return!0}return!1}function br(i,s){for(var{vnode:d,parent:m}=i;m;){var A=m.subTree;if(A.suspense&&A.suspense.activeBranch===d&&(A.el=d.el),A===d)(d=m.vnode).el=s,m=m.parent;else break}}var _o="components",ds="directives";function Qo(i,s){return Er(_o,i,!0,s)||i}var rn=Symbol.for("v-ndc");function yr(i){return h.isString(i)?Er(_o,i,!1)||i:i||rn}function Wn(i){return Er(ds,i)}function Er(i,s){var d=arguments.length>2&&arguments[2]!==void 0?arguments[2]:!0,m=arguments.length>3&&arguments[3]!==void 0?arguments[3]:!1,A=An||Pn;if(A){var C=A.type;if(i===_o){var x=os(C,!1);if(x&&(x===s||x===h.camelize(s)||x===h.capitalize(h.camelize(s))))return C}var V=Kr(A[i]||C[i],s)||Kr(A.appContext[i],s);if(!V&&m)return C;if(d&&!V){var M=i===_o?`
If this is a native custom element, make sure to exclude it from component resolution via compilerOptions.isCustomElement.`:"";ue("Failed to resolve ".concat(i.slice(0,-1),": ").concat(s).concat(M))}return V}else ue("resolve".concat(h.capitalize(i.slice(0,-1))," can only be used in render() or setup()."))}function Kr(i,s){return i&&(i[s]||i[h.camelize(s)]||i[h.capitalize(h.camelize(s))])}var ea=i=>i.__isSuspense,ta=0,ps={name:"Suspense",__isSuspense:!0,process(i,s,d,m,A,C,x,V,M,J){if(i==null)Ha(s,d,m,A,C,x,V,M,J);else{if(C&&C.deps>0&&!i.suspense.isInFallback){s.suspense=i.suspense,s.suspense.vnode=s,s.el=i.el;return}ja(i,s,d,m,A,x,V,M,J)}},hydrate:hs,create:Pa,normalize:na},Mo=ps;function Bo(i,s){var d=i.props&&i.props[s];h.isFunction(d)&&d()}function Ha(i,s,d,m,A,C,x,V,M){var{p:J,o:{createElement:Q}}=M,ee=Q("div",s),Y=i.suspense=Pa(i,A,m,s,ee,d,C,x,V,M);J(null,Y.pendingBranch=i.ssContent,ee,null,m,Y,C,x),Y.deps>0?(Bo(i,"onPending"),Bo(i,"onFallback"),J(null,i.ssFallback,s,d,m,null,C,x),q(Y,i.ssFallback)):Y.resolve(!1,!0)}function ja(i,s,d,m,A,C,x,V,M){var{p:J,um:Q,o:{createElement:ee}}=M,Y=s.suspense=i.suspense;Y.vnode=s,s.el=i.el;var me=s.ssContent,Te=s.ssFallback,{activeBranch:dt,pendingBranch:qe,isInFallback:Pt,isHydrating:Mt}=Y;if(qe)Y.pendingBranch=me,oo(me,qe)?(J(qe,me,Y.hiddenContainer,null,A,Y,C,x,V),Y.deps<=0?Y.resolve():Pt&&(Mt||(J(dt,Te,d,m,A,null,C,x,V),q(Y,Te)))):(Y.pendingId=ta++,Mt?(Y.isHydrating=!1,Y.activeBranch=qe):Q(qe,A,Y),Y.deps=0,Y.effects.length=0,Y.hiddenContainer=ee("div",d),Pt?(J(null,me,Y.hiddenContainer,null,A,Y,C,x,V),Y.deps<=0?Y.resolve():(J(dt,Te,d,m,A,null,C,x,V),q(Y,Te))):dt&&oo(me,dt)?(J(dt,me,d,m,A,Y,C,x,V),Y.resolve(!0)):(J(null,me,Y.hiddenContainer,null,A,Y,C,x,V),Y.deps<=0&&Y.resolve()));else if(dt&&oo(me,dt))J(dt,me,d,m,A,Y,C,x,V),q(Y,me);else if(Bo(s,"onPending"),Y.pendingBranch=me,me.shapeFlag&512?Y.pendingId=me.component.suspenseId:Y.pendingId=ta++,J(null,me,Y.hiddenContainer,null,A,Y,C,x,V),Y.deps<=0)Y.resolve();else{var{timeout:oe,pendingId:he}=Y;oe>0?setTimeout(()=>{Y.pendingId===he&&Y.fallback(Te)},oe):oe===0&&Y.fallback(Te)}}var Lo=!1;function Pa(i,s,d,m,A,C,x,V,M,J){var Q=arguments.length>10&&arguments[10]!==void 0?arguments[10]:!1;Lo||(Lo=!0,console[console.info?"info":"log"]("<Suspense> is an experimental feature and its API will likely change."));var{p:ee,m:Y,um:me,n:Te,o:{parentNode:dt,remove:qe}}=J,Pt,Mt=pe(i);Mt&&(s==null?void 0:s.pendingBranch)&&(Pt=s.pendingId,s.deps++);var oe=i.props?h.toNumber(i.props.timeout):void 0;se(oe,"Suspense timeout");var he=C,_e={vnode:i,parent:s,parentComponent:d,namespace:x,container:m,hiddenContainer:A,deps:0,pendingId:ta++,timeout:typeof oe=="number"?oe:-1,activeBranch:null,pendingBranch:null,isInFallback:!Q,isHydrating:Q,isUnmounted:!1,effects:[],resolve(){var He=arguments.length>0&&arguments[0]!==void 0?arguments[0]:!1,at=arguments.length>1&&arguments[1]!==void 0?arguments[1]:!1;{if(!He&&!_e.pendingBranch)throw new Error("suspense.resolve() is called without a pending branch.");if(_e.isUnmounted)throw new Error("suspense.resolve() is called on an already unmounted suspense boundary.")}var{vnode:tt,activeBranch:bt,pendingBranch:Ye,pendingId:L,effects:G,parentComponent:te,container:be}=_e,Se=!1;_e.isHydrating?_e.isHydrating=!1:He||(Se=bt&&Ye.transition&&Ye.transition.mode==="out-in",Se&&(bt.transition.afterLeave=()=>{L===_e.pendingId&&(Y(Ye,be,C===he?Te(bt):C,0),nr(G))}),bt&&(dt(bt.el)!==_e.hiddenContainer&&(C=Te(bt)),me(bt,te,_e,!0)),Se||Y(Ye,be,C,0)),q(_e,Ye),_e.pendingBranch=null,_e.isInFallback=!1;for(var Ce=_e.parent,nt=!1;Ce;){if(Ce.pendingBranch){Ce.effects.push(...G),nt=!0;break}Ce=Ce.parent}!nt&&!Se&&nr(G),_e.effects=[],Mt&&s&&s.pendingBranch&&Pt===s.pendingId&&(s.deps--,s.deps===0&&!at&&s.resolve()),Bo(tt,"onResolve")},fallback(He){if(!!_e.pendingBranch){var{vnode:at,activeBranch:tt,parentComponent:bt,container:Ye,namespace:L}=_e;Bo(at,"onFallback");var G=Te(tt),te=()=>{!_e.isInFallback||(ee(null,He,Ye,G,bt,null,L,V,M),q(_e,He))},be=He.transition&&He.transition.mode==="out-in";be&&(tt.transition.afterLeave=te),_e.isInFallback=!0,me(tt,bt,null,!0),be||te()}},move(He,at,tt){_e.activeBranch&&Y(_e.activeBranch,He,at,tt),_e.container=He},next(){return _e.activeBranch&&Te(_e.activeBranch)},registerDep(He,at){var tt=!!_e.pendingBranch;tt&&_e.deps++;var bt=He.vnode.el;He.asyncDep.catch(Ye=>{In(Ye,He,0)}).then(Ye=>{if(!(He.isUnmounted||_e.isUnmounted||_e.pendingId!==He.suspenseId)){He.asyncResolved=!0;var{vnode:L}=He;gt(L),rs(He,Ye,!1),bt&&(L.el=bt);var G=!bt&&He.subTree.el;at(He,L,dt(bt||He.subTree.el),bt?null:Te(He.subTree),_e,x,M),G&&qe(G),br(He,L.el),Ot(),tt&&--_e.deps===0&&_e.resolve()}})},unmount(He,at){_e.isUnmounted=!0,_e.activeBranch&&me(_e.activeBranch,d,He,at),_e.pendingBranch&&me(_e.pendingBranch,d,He,at)}};return _e}function hs(i,s,d,m,A,C,x,V,M){var J=s.suspense=Pa(s,m,d,i.parentNode,document.createElement("div"),null,A,C,x,V,!0),Q=M(i,J.pendingBranch=s.ssContent,d,J,C,x);return J.deps===0&&J.resolve(!1,!0),Q}function na(i){var{shapeFlag:s,children:d}=i,m=s&32;i.ssContent=Fo(m?d.default:d),i.ssFallback=m?Fo(d.fallback):sr(Fn)}function Fo(i){var s;if(h.isFunction(i)){var d=ca&&i._c;d&&(i._d=!1,Xs()),i=i(),d&&(i._d=!0,s=Qr,la())}if(h.isArray(i)){var m=Oi(i);!m&&i.filter(A=>A!==rn).length>0&&ue("<Suspense> slots expect a single root node."),i=m}return i=Ir(i),s&&!i.dynamicChildren&&(i.dynamicChildren=s.filter(A=>A!==i)),i}function U(i,s){s&&s.pendingBranch?h.isArray(i)?s.effects.push(...i):s.effects.push(i):nr(i)}function q(i,s){i.activeBranch=s;for(var{vnode:d,parentComponent:m}=i,A=s.el;!A&&s.component;)s=s.component.subTree,A=s.el;d.el=A,m&&m.subTree===d&&(m.vnode.el=A,br(m,A))}function pe(i){var s;return((s=i.props)==null?void 0:s.suspensible)!=null&&i.props.suspensible!==!1}var Ze=Symbol.for("v-scx"),Je=()=>{{var i=oa(Ze);return i||ue("Server rendering context not provided. Make sure to only call useSSRContext() conditionally in the server build."),i}};function mt(i,s){return Hr(i,null,s)}function et(i,s){return Hr(i,null,h.extend({},s,{flush:"post"}))}function st(i,s){return Hr(i,null,h.extend({},s,{flush:"sync"}))}var fr={};function $r(i,s,d){return h.isFunction(s)||ue("`watch(fn, options?)` signature has been moved to a separate API. Use `watchEffect(fn, options?)` instead. `watch` now only supports `watch(source, cb, options?) signature."),Hr(i,s,d)}function Hr(i,s){var{immediate:d,deep:m,flush:A,once:C,onTrack:x,onTrigger:V}=arguments.length>2&&arguments[2]!==void 0?arguments[2]:h.EMPTY_OBJ;if(s&&C){var M=s;s=function(){M(...arguments),bt()}}m!==void 0&&typeof m=="number"&&ue('watch() "deep" option with number value will be used as watch depth in future versions. Please use a boolean instead to avoid potential breakage.'),s||(d!==void 0&&ue('watch() "immediate" option is only respected when using the watch(source, callback, options?) signature.'),m!==void 0&&ue('watch() "deep" option is only respected when using the watch(source, callback, options?) signature.'),C!==void 0&&ue('watch() "once" option is only respected when using the watch(source, callback, options?) signature.'));var J=Ye=>{ue("Invalid watch source: ",Ye,"A watch source can only be a getter/effect function, a ref, a reactive object, or an array of these types.")},Q=Pn,ee=Ye=>m===!0?Ye:eo(Ye,m===!1?1:void 0),Y,me=!1,Te=!1;if(v.isRef(i)?(Y=()=>i.value,me=v.isShallow(i)):v.isReactive(i)?(Y=()=>ee(i),me=!0):h.isArray(i)?(Te=!0,me=i.some(Ye=>v.isReactive(Ye)||v.isShallow(Ye)),Y=()=>i.map(Ye=>{if(v.isRef(Ye))return Ye.value;if(v.isReactive(Ye))return ee(Ye);if(h.isFunction(Ye))return Jn(Ye,Q,2);J(Ye)})):h.isFunction(i)?s?Y=()=>Jn(i,Q,2):Y=()=>(qe&&qe(),sn(i,Q,3,[Pt])):(Y=h.NOOP,J(i)),s&&m){var dt=Y;Y=()=>eo(dt())}var qe,Pt=Ye=>{qe=at.onStop=()=>{Jn(Ye,Q,4),qe=at.onStop=void 0}},Mt;if(y.isInSSRComponentSetup)if(Pt=h.NOOP,s?d&&sn(s,Q,3,[Y(),Te?[]:void 0,Pt]):Y(),A==="sync"){var oe=Je();Mt=oe.__watcherHandles||(oe.__watcherHandles=[])}else return h.NOOP;var he=Te?new Array(i.length).fill(fr):fr,_e=()=>{if(!(!at.active||!at.dirty))if(s){var Ye=at.run();(m||me||(Te?Ye.some((L,G)=>h.hasChanged(L,he[G])):h.hasChanged(Ye,he)))&&(qe&&qe(),sn(s,Q,3,[Ye,he===fr?void 0:Te&&he[0]===fr?[]:he,Pt]),he=Ye)}else at.run()};_e.allowRecurse=!!s;var He;A==="sync"?He=_e:A==="post"?He=()=>Ar(_e,Q&&Q.suspense):(_e.pre=!0,Q&&(_e.id=Q.uid),He=()=>an(_e));var at=new v.ReactiveEffect(Y,h.NOOP,He),tt=v.getCurrentScope(),bt=()=>{at.stop(),tt&&h.remove(tt.effects,at)};return at.onTrack=x,at.onTrigger=V,s?d?_e():he=at.run():A==="post"?Ar(at.run.bind(at),Q&&Q.suspense):at.run(),Mt&&Mt.push(bt),bt}function Qi(i,s,d){var m=this.proxy,A=h.isString(i)?i.includes(".")?_i(m,i):()=>m[i]:i.bind(m,m),C;h.isFunction(s)?C=s:(C=s.handler,d=s);var x=ua(this),V=Hr(A,C.bind(m),d);return x(),V}function _i(i,s){var d=s.split(".");return()=>{for(var m=i,A=0;A<d.length&&m;A++)m=m[d[A]];return m}}function eo(i,s){var d=arguments.length>2&&arguments[2]!==void 0?arguments[2]:0,m=arguments.length>3?arguments[3]:void 0;if(!h.isObject(i)||i.__v_skip)return i;if(s&&s>0){if(d>=s)return i;d++}if(m=m||new Set,m.has(i))return i;if(m.add(i),v.isRef(i))eo(i.value,s,d,m);else if(h.isArray(i))for(var A=0;A<i.length;A++)eo(i[A],s,d,m);else if(h.isSet(i)||h.isMap(i))i.forEach(x=>{eo(x,s,d,m)});else if(h.isPlainObject(i))for(var C in i)eo(i[C],s,d,m);return i}function gs(i){h.isBuiltInDirective(i)&&ue("Do not use built-in directive ids as custom directive id: "+i)}function Di(i,s){if(An===null)return ue("withDirectives can only be used inside render functions."),i;for(var d=Xl(An)||An.proxy,m=i.dirs||(i.dirs=[]),A=0;A<s.length;A++){var[C,x,V,M=h.EMPTY_OBJ]=s[A];C&&(h.isFunction(C)&&(C={mounted:C,updated:C}),C.deep&&eo(x),m.push({dir:C,instance:d,value:x,oldValue:void 0,arg:V,modifiers:M}))}return i}function Sr(i,s,d,m){for(var A=i.dirs,C=s&&s.dirs,x=0;x<A.length;x++){var V=A[x];C&&(V.oldValue=C[x].value);var M=V.dir[m];M&&(v.pauseTracking(),sn(M,d,8,[i.el,V,i,s]),v.resetTracking())}}var si=Symbol("_leaveCb"),Na=Symbol("_enterCb");function le(){var i={isMounted:!1,isLeaving:!1,isUnmounting:!1,leavingVNodes:new Map};return no(()=>{i.isMounted=!0}),Vo(()=>{i.isUnmounting=!0}),i}var K=[Function,Array],de={mode:String,appear:Boolean,persisted:Boolean,onBeforeEnter:K,onEnter:K,onAfterEnter:K,onEnterCancelled:K,onBeforeLeave:K,onLeave:K,onAfterLeave:K,onLeaveCancelled:K,onBeforeAppear:K,onAppear:K,onAfterAppear:K,onAppearCancelled:K},Ve={name:"BaseTransition",props:de,setup(i,s){var{slots:d}=s,m=ao(),A=le();return()=>{var C=d.default&&to(d.default(),!0);if(!(!C||!C.length)){var x=C[0];if(C.length>1){var V=!1;for(var M of C)if(M.type!==Fn){if(V){ue("<transition> can only be used on a single element or component. Use <transition-group> for lists.");break}x=M,V=!0}}var J=v.toRaw(i),{mode:Q}=J;if(Q&&Q!=="in-out"&&Q!=="out-in"&&Q!=="default"&&ue("invalid <transition> mode: ".concat(Q)),A.isLeaving)return vn(x);var ee=Un(x);if(!ee)return vn(x);var Y=Kn(ee,J,A,m);dr(ee,Y);var me=m.subTree,Te=me&&Un(me);if(Te&&Te.type!==Fn&&!oo(ee,Te)){var dt=Kn(Te,J,A,m);if(dr(Te,dt),Q==="out-in")return A.isLeaving=!0,dt.afterLeave=()=>{A.isLeaving=!1,m.update.active!==!1&&(m.effect.dirty=!0,m.update())},vn(x);Q==="in-out"&&ee.type!==Fn&&(dt.delayLeave=(qe,Pt,Mt)=>{var oe=on(A,Te);oe[String(Te.key)]=Te,qe[si]=()=>{Pt(),qe[si]=void 0,delete Y.delayedLeave},Y.delayedLeave=Mt})}return x}}}},ft=Ve;function on(i,s){var{leavingVNodes:d}=i,m=d.get(s.type);return m||(m=Object.create(null),d.set(s.type,m)),m}function Kn(i,s,d,m){var{appear:A,mode:C,persisted:x=!1,onBeforeEnter:V,onEnter:M,onAfterEnter:J,onEnterCancelled:Q,onBeforeLeave:ee,onLeave:Y,onAfterLeave:me,onLeaveCancelled:Te,onBeforeAppear:dt,onAppear:qe,onAfterAppear:Pt,onAppearCancelled:Mt}=s,oe=String(i.key),he=on(d,i),_e=(tt,bt)=>{tt&&sn(tt,m,9,bt)},He=(tt,bt)=>{var Ye=bt[1];_e(tt,bt),h.isArray(tt)?tt.every(L=>L.length<=1)&&Ye():tt.length<=1&&Ye()},at={mode:C,persisted:x,beforeEnter(tt){var bt=V;if(!d.isMounted)if(A)bt=dt||V;else return;tt[si]&&tt[si](!0);var Ye=he[oe];Ye&&oo(i,Ye)&&Ye.el[si]&&Ye.el[si](),_e(bt,[tt])},enter(tt){var bt=M,Ye=J,L=Q;if(!d.isMounted)if(A)bt=qe||M,Ye=Pt||J,L=Mt||Q;else return;var G=!1,te=tt[Na]=be=>{G||(G=!0,be?_e(L,[tt]):_e(Ye,[tt]),at.delayedLeave&&at.delayedLeave(),tt[Na]=void 0)};bt?He(bt,[tt,te]):te()},leave(tt,bt){var Ye=String(i.key);if(tt[Na]&&tt[Na](!0),d.isUnmounting)return bt();_e(ee,[tt]);var L=!1,G=tt[si]=te=>{L||(L=!0,bt(),te?_e(Te,[tt]):_e(me,[tt]),tt[si]=void 0,he[Ye]===i&&delete he[Ye])};he[Ye]=i,Y?He(Y,[tt,G]):G()},clone(tt){return Kn(tt,s,d,m)}};return at}function vn(i){if(Do(i))return i=ji(i),i.children=null,i}function Un(i){return Do(i)?i.component?i.component.subTree:i.children?i.children[0]:void 0:i}function dr(i,s){i.shapeFlag&6&&i.component?dr(i.component.subTree,s):i.shapeFlag&128?(i.ssContent.transition=s.clone(i.ssContent),i.ssFallback.transition=s.clone(i.ssFallback)):i.transition=s}function to(i){for(var s=arguments.length>1&&arguments[1]!==void 0?arguments[1]:!1,d=arguments.length>2?arguments[2]:void 0,m=[],A=0,C=0;C<i.length;C++){var x=i[C],V=d==null?x.key:String(d)+String(x.key!=null?x.key:C);x.type===Bn?(x.patchFlag&128&&A++,m=m.concat(to(x.children,s,V))):(s||x.type!==Fn)&&m.push(V!=null?ji(x,{key:V}):x)}if(A>1)for(var M=0;M<m.length;M++)m[M].patchFlag=-2;return m}function Zn(i,s){return h.isFunction(i)?(()=>h.extend({name:i.name},s,{setup:i}))():i}var bo=i=>!!i.type.__asyncLoader;function Ia(i){h.isFunction(i)&&(i={loader:i});var{loader:s,loadingComponent:d,errorComponent:m,delay:A=200,timeout:C,suspensible:x=!0,onError:V}=i,M=null,J,Q=0,ee=()=>(Q++,M=null,Y()),Y=()=>{var me;return M||(me=M=s().catch(Te=>{if(Te=Te instanceof Error?Te:new Error(String(Te)),V)return new Promise((dt,qe)=>{var Pt=()=>dt(ee()),Mt=()=>qe(Te);V(Te,Pt,Mt,Q+1)});throw Te}).then(Te=>{if(me!==M&&M)return M;if(Te||ue("Async component loader resolved to undefined. If you are using retry(), make sure to return its return value."),Te&&(Te.__esModule||Te[Symbol.toStringTag]==="Module")&&(Te=Te.default),Te&&!h.isObject(Te)&&!h.isFunction(Te))throw new Error("Invalid async component load result: ".concat(Te));return J=Te,Te}))};return Zn({name:"AsyncComponentWrapper",__asyncLoader:Y,get __asyncResolved(){return J},setup(){var me=Pn;if(J)return()=>yo(J,me);var Te=Mt=>{M=null,In(Mt,me,13,!m)};if(x&&me.suspense||y.isInSSRComponentSetup)return Y().then(Mt=>()=>yo(Mt,me)).catch(Mt=>(Te(Mt),()=>m?sr(m,{error:Mt}):null));var dt=v.ref(!1),qe=v.ref(),Pt=v.ref(!!A);return A&&setTimeout(()=>{Pt.value=!1},A),C!=null&&setTimeout(()=>{if(!dt.value&&!qe.value){var Mt=new Error("Async component timed out after ".concat(C,"ms."));Te(Mt),qe.value=Mt}},C),Y().then(()=>{dt.value=!0,me.parent&&Do(me.parent.vnode)&&(me.parent.effect.dirty=!0,an(me.parent.update))}).catch(Mt=>{Te(Mt),qe.value=Mt}),()=>{if(dt.value&&J)return yo(J,me);if(qe.value&&m)return sr(m,{error:qe.value});if(d&&!Pt.value)return sr(d)}}})}function yo(i,s){var{ref:d,props:m,children:A,ce:C}=s.vnode,x=sr(i,m,A);return x.ref=d,x.ce=C,delete s.vnode.ce,x}var Do=i=>i.type.__isKeepAlive,Bl={name:"KeepAlive",__isKeepAlive:!0,props:{include:[String,RegExp,Array],exclude:[String,RegExp,Array],max:[String,Number]},setup(i,s){var{slots:d}=s,m=ao(),A=m.ctx;if(!A.renderer)return()=>{var oe=d.default&&d.default();return oe&&oe.length===1?oe[0]:oe};var C=new Map,x=new Set,V=null;m.__v_cache=C;var M=m.suspense,{renderer:{p:J,m:Q,um:ee,o:{createElement:Y}}}=A,me=Y("div",null);A.activate=(oe,he,_e,He,at)=>{var tt=oe.component;Q(oe,he,_e,0,M),J(tt.vnode,oe,he,_e,tt,M,He,oe.slotScopeIds,at),Ar(()=>{tt.isDeactivated=!1,tt.a&&h.invokeArrayFns(tt.a);var bt=oe.props&&oe.props.onVnodeMounted;bt&&zi(bt,tt.parent,oe)},M),Yr(tt)},A.deactivate=oe=>{var he=oe.component;Q(oe,me,null,1,M),Ar(()=>{he.da&&h.invokeArrayFns(he.da);var _e=oe.props&&oe.props.onVnodeUnmounted;_e&&zi(_e,he.parent,oe),he.isDeactivated=!0},M),Yr(he)};function Te(oe){Ti(oe),ee(oe,m,M,!0)}function dt(oe){C.forEach((he,_e)=>{var He=os(he.type);He&&(!oe||!oe(He))&&qe(_e)})}function qe(oe){var he=C.get(oe);!V||!oo(he,V)?Te(he):V&&Ti(V),C.delete(oe),x.delete(oe)}$r(()=>[i.include,i.exclude],oe=>{var[he,_e]=oe;he&&dt(He=>ka(he,He)),_e&&dt(He=>!ka(_e,He))},{flush:"post",deep:!0});var Pt=null,Mt=()=>{Pt!=null&&C.set(Pt,ia(m.subTree))};return no(Mt),Uo(Mt),Vo(()=>{C.forEach(oe=>{var{subTree:he,suspense:_e}=m,He=ia(he);if(oe.type===He.type&&oe.key===He.key){Ti(He);var at=He.component.da;at&&Ar(at,_e);return}Te(oe)})}),()=>{if(Pt=null,!d.default)return null;var oe=d.default(),he=oe[0];if(oe.length>1)return ue("KeepAlive should contain exactly one component child."),V=null,oe;if(!Wr(he)||!(he.shapeFlag&4)&&!(he.shapeFlag&128))return V=null,he;var _e=ia(he),He=_e.type,at=os(bo(_e)?_e.type.__asyncResolved||{}:He),{include:tt,exclude:bt,max:Ye}=i;if(tt&&(!at||!ka(tt,at))||bt&&at&&ka(bt,at))return V=_e,he;var L=_e.key==null?He:_e.key,G=C.get(L);return _e.el&&(_e=ji(_e),he.shapeFlag&128&&(he.ssContent=_e)),Pt=L,G?(_e.el=G.el,_e.component=G.component,_e.transition&&dr(_e,_e.transition),_e.shapeFlag|=512,x.delete(L),x.add(L)):(x.add(L),Ye&&x.size>parseInt(Ye,10)&&qe(x.values().next().value)),_e.shapeFlag|=256,V=_e,ea(he.type)?he:_e}}},ra=Bl;function ka(i,s){return h.isArray(i)?i.some(d=>ka(d,s)):h.isString(i)?i.split(",").includes(s):h.isRegExp(i)?i.test(s):!1}function gl(i,s){Ll(i,"a",s)}function rr(i,s){Ll(i,"da",s)}function Ll(i,s){var d=arguments.length>2&&arguments[2]!==void 0?arguments[2]:Pn,m=i.__wdc||(i.__wdc=()=>{for(var C=d;C;){if(C.isDeactivated)return;C=C.parent}return i()});if(Pi(s,m,d),d)for(var A=d.parent;A&&A.parent;)Do(A.parent.vnode)&&za(m,s,d,A),A=A.parent}function za(i,s,d,m){var A=Pi(s,i,m,!0);Ga(()=>{h.remove(m[s],A)},d)}function Ti(i){i.shapeFlag&=~256,i.shapeFlag&=~512}function ia(i){return i.shapeFlag&128?i.ssContent:i}function Pi(i,s){var d=arguments.length>2&&arguments[2]!==void 0?arguments[2]:Pn,m=arguments.length>3&&arguments[3]!==void 0?arguments[3]:!1;if(d){if(k.isRootHook(i)&&d!==d.root&&(d=d.root,k.isRootImmediateHook(i))){var A=d.proxy;sn(s.bind(A),d,i,k.ON_LOAD===i?[A.$page.options]:[])}var{__page_container__:C}=d.root.vnode;C&&C.onInjectHook(i);var x=d[i]||(d[i]=[]),V=s.__weh||(s.__weh=function(){if(!d.isUnmounted){v.pauseTracking();for(var J=ua(d),Q=arguments.length,ee=new Array(Q),Y=0;Y<Q;Y++)ee[Y]=arguments[Y];var me=sn(s,d,i,ee);return J(),v.resetTracking(),me}});return m?x.unshift(V):x.push(V),V}else{var M=h.toHandlerKey((Br[i]||i.replace(/^on/,"")).replace(/ hook$/,""));ue("".concat(M," is called when there is no active component instance to be associated with. Lifecycle injection APIs can only be used during execution of setup().")+" If you are using async setup(), make sure to register lifecycle hooks before the first await statement.")}}var wr=i=>function(s){var d=arguments.length>1&&arguments[1]!==void 0?arguments[1]:Pn;return(!y.isInSSRComponentSetup||i==="sp")&&Pi(i,function(){return s(...arguments)},d)},xa=wr("bm"),no=wr("m"),Wa=wr("bu"),Uo=wr("u"),Vo=wr("bum"),Ga=wr("um"),ms=wr("sp"),qa=wr("rtg"),ml=wr("rtc");function Fl(i){var s=arguments.length>1&&arguments[1]!==void 0?arguments[1]:Pn;Pi("ec",i,s)}function Eo(i,s,d,m){var A,C=d&&d[m];if(h.isArray(i)||h.isString(i)){A=new Array(i.length);for(var x=0,V=i.length;x<V;x++)A[x]=s(i[x],x,void 0,C&&C[x])}else if(typeof i=="number"){Number.isInteger(i)||ue("The v-for range expect an integer value but got ".concat(i,".")),A=new Array(i);for(var M=0;M<i;M++)A[M]=s(M+1,M,void 0,C&&C[M])}else if(h.isObject(i))if(i[Symbol.iterator])A=Array.from(i,(me,Te)=>s(me,Te,void 0,C&&C[Te]));else{var J=Object.keys(i);A=new Array(J.length);for(var Q=0,ee=J.length;Q<ee;Q++){var Y=J[Q];A[Q]=s(i[Y],Y,Q,C&&C[Q])}}else A=[];return d&&(d[m]=A),A}function hc(i,s){for(var d=function(A){var C=s[A];if(h.isArray(C))for(var x=0;x<C.length;x++)i[C[x].name]=C[x].fn;else C&&(i[C.name]=C.key?function(){var V=C.fn(...arguments);return V&&(V.key=C.key),V}:C.fn)},m=0;m<s.length;m++)d(m);return i}function vl(i,s){var d=arguments.length>2&&arguments[2]!==void 0?arguments[2]:{},m=arguments.length>3?arguments[3]:void 0,A=arguments.length>4?arguments[4]:void 0;if(An.isCE||An.parent&&bo(An.parent)&&An.parent.isCE)return s!=="default"&&(d.name=s),sr("slot",d,m&&m());var C=i[s];C&&C.length>1&&(ue("SSR-optimized slot function detected in a non-SSR-optimized render function. You need to mark this component with $dynamic-slots in the parent template."),C=()=>[]),C&&C._c&&(C._d=!1),Xs();var x=C&&$s(C(d)),V=To(Bn,{key:d.key||x&&x.key||"_".concat(s)},x||(m?m():[]),x&&i._===1?64:-2);return!A&&V.scopeId&&(V.slotScopeIds=[V.scopeId+"-s"]),C&&C._c&&(C._d=!0),V}function $s(i){return i.some(s=>Wr(s)?!(s.type===Fn||s.type===Bn&&!$s(s.children)):!0)?i:null}function Hs(i,s){var d={};if(!h.isObject(i))return ue("v-on with no argument expects an object value."),d;for(var m in i)d[s&&/[A-Z]/.test(m)?"on:".concat(m):h.toHandlerKey(m)]=i[m];return d}var $o=i=>i?Sc(i)?Xl(i)||i.proxy:$o(i.parent):null,ro=h.extend(Object.create(null),{$:i=>i,$el:i=>i.vnode.el,$data:i=>i.data,$props:i=>v.shallowReadonly(i.props),$attrs:i=>v.shallowReadonly(i.attrs),$slots:i=>v.shallowReadonly(i.slots),$refs:i=>v.shallowReadonly(i.refs),$parent:i=>$o(i.parent),$root:i=>$o(i.root),$emit:i=>i.emit,$options:i=>On(i),$forceUpdate:i=>i.f||(i.f=()=>{i.effect.dirty=!0,an(i.update)}),$nextTick:i=>i.n||(i.n=cn.bind(i.proxy)),$watch:i=>Qi.bind(i)}),So=i=>i==="_"||i==="$",wo=(i,s)=>i!==h.EMPTY_OBJ&&!i.__isScriptSetup&&h.hasOwn(i,s),vs={get(i,s){var{_:d}=i,{ctx:m,setupState:A,data:C,props:x,accessCache:V,type:M,appContext:J}=d;if(s==="__isVue")return!0;var Q;if(s[0]!=="$"){var ee=V[s];if(ee!==void 0)switch(ee){case 1:return A[s];case 2:return C[s];case 4:return m[s];case 3:return x[s]}else{if(wo(A,s))return V[s]=1,A[s];if(C!==h.EMPTY_OBJ&&h.hasOwn(C,s))return V[s]=2,C[s];if((Q=d.propsOptions[0])&&h.hasOwn(Q,s))return V[s]=3,x[s];if(m!==h.EMPTY_OBJ&&h.hasOwn(m,s))return V[s]=4,m[s];Rn&&(V[s]=0)}}var Y=ro[s],me,Te;if(Y)return s==="$attrs"?(v.track(d,"get",s),tn()):s==="$slots"&&v.track(d,"get",s),Y(d);if((me=M.__cssModules)&&(me=me[s]))return me;if(m!==h.EMPTY_OBJ&&h.hasOwn(m,s))return V[s]=4,m[s];if(Te=J.config.globalProperties,h.hasOwn(Te,s))return Te[s];An&&(!h.isString(s)||s.indexOf("__v")!==0)&&(C!==h.EMPTY_OBJ&&So(s[0])&&h.hasOwn(C,s)?ue("Property ".concat(JSON.stringify(s),' must be accessed via $data because it starts with a reserved character ("$" or "_") and is not proxied on the render context.')):d===An&&ue("Property ".concat(JSON.stringify(s)," was accessed during render but is not defined on instance.")))},set(i,s,d){var{_:m}=i,{data:A,setupState:C,ctx:x}=m;return wo(C,s)?(C[s]=d,!0):C.__isScriptSetup&&h.hasOwn(C,s)?(ue('Cannot mutate <script setup> binding "'.concat(s,'" from Options API.')),!1):A!==h.EMPTY_OBJ&&h.hasOwn(A,s)?(A[s]=d,!0):h.hasOwn(m.props,s)?(ue('Attempting to mutate prop "'.concat(s,'". Props are readonly.')),!1):s[0]==="$"&&s.slice(1)in m?(ue('Attempting to mutate public property "'.concat(s,'". Properties starting with $ are reserved and readonly.')),!1):(s in m.appContext.config.globalProperties?Object.defineProperty(x,s,{enumerable:!0,configurable:!0,value:d}):x[s]=d,!0)},has(i,s){var{_:{data:d,setupState:m,accessCache:A,ctx:C,appContext:x,propsOptions:V}}=i,M;return!!A[s]||d!==h.EMPTY_OBJ&&h.hasOwn(d,s)||wo(m,s)||(M=V[0])&&h.hasOwn(M,s)||h.hasOwn(C,s)||h.hasOwn(ro,s)||h.hasOwn(x.config.globalProperties,s)},defineProperty(i,s,d){return d.get!=null?i._.accessCache[s]=0:h.hasOwn(d,"value")&&this.set(i,s,d.value,null),Reflect.defineProperty(i,s,d)}};vs.ownKeys=i=>(ue("Avoid app logic that relies on enumerating keys on a component instance. The keys will be empty in production mode to avoid performance overhead."),Reflect.ownKeys(i));var Dl=h.extend({},vs,{get(i,s){if(s!==Symbol.unscopables)return vs.get(i,s,i)},has(i,s){var d=s[0]!=="_"&&!h.isGloballyAllowed(s);return!d&&vs.has(i,s)&&ue("Property ".concat(JSON.stringify(s)," should not start with _ which is a reserved prefix for Vue internals.")),d}});function Gc(i){var s={};return Object.defineProperty(s,"_",{configurable:!0,enumerable:!1,get:()=>i}),Object.keys(ro).forEach(d=>{Object.defineProperty(s,d,{configurable:!0,enumerable:!1,get:()=>ro[d](i),set:h.NOOP})}),s}function S(i){var{ctx:s,propsOptions:[d]}=i;d&&Object.keys(d).forEach(m=>{Object.defineProperty(s,m,{enumerable:!0,configurable:!0,get:()=>i.props[m],set:h.NOOP})})}function F(i){var{ctx:s,setupState:d}=i;Object.keys(v.toRaw(d)).forEach(m=>{if(!d.__isScriptSetup){if(So(m[0])){ue("setup() return property ".concat(JSON.stringify(m),' should not start with "$" or "_" which are reserved prefixes for Vue internals.'));return}Object.defineProperty(s,m,{enumerable:!0,configurable:!0,get:()=>d[m],set:h.NOOP})}})}var W=i=>ue("".concat(i,"() is a compiler-hint helper that is only usable inside <script setup> of a single file component. Its arguments should be compiled away and passing it at runtime has no effect."));function H(){return W("defineProps"),null}function ne(){return W("defineEmits"),null}function ie(i){W("defineExpose")}function ge(i){W("defineOptions")}function we(){return W("defineSlots"),null}function Me(){W("defineModel")}function $e(i,s){return W("withDefaults"),null}function Ee(){return ht().slots}function De(){return ht().attrs}function ht(){var i=ao();return i||ue("useContext() called without active instance."),i.setupContext||(i.setupContext=is(i))}function Tt(i){return h.isArray(i)?i.reduce((s,d)=>(s[d]=null,s),{}):i}function Rt(i,s){var d=Tt(i);for(var m in s)if(!m.startsWith("__skip")){var A=d[m];A?h.isArray(A)||h.isFunction(A)?A=d[m]={type:A,default:s[m]}:A.default=s[m]:A===null?A=d[m]={default:s[m]}:ue('props default key "'.concat(m,'" has no corresponding declaration.')),A&&s["__skip_".concat(m)]&&(A.skipFactory=!0)}return d}function yt(i,s){return!i||!s?i||s:h.isArray(i)&&h.isArray(s)?i.concat(s):h.extend({},Tt(i),Tt(s))}function vt(i,s){var d={},m=function(C){s.includes(C)||Object.defineProperty(d,C,{enumerable:!0,get:()=>i[C]})};for(var A in i)m(A);return d}function Ut(i){var s=ao();s||ue("withAsyncContext called without active current instance. This is likely a bug.");var d=i();return fa(),h.isPromise(d)&&(d=d.catch(m=>{throw ua(s),m})),[d,()=>ua(s)]}function _n(){var i=Object.create(null);return(s,d)=>{i[d]?ue("".concat(s,' property "').concat(d,'" is already defined in ').concat(i[d],".")):i[d]=s}}var Rn=!0;function At(i){var s=On(i),d=i.proxy,m=i.ctx;Rn=!1,s.beforeCreate&&Vn(s.beforeCreate,i,"bc");var{data:A,computed:C,methods:x,watch:V,provide:M,inject:J,created:Q,beforeMount:ee,mounted:Y,beforeUpdate:me,updated:Te,activated:dt,deactivated:qe,beforeDestroy:Pt,beforeUnmount:Mt,destroyed:oe,unmounted:he,render:_e,renderTracked:He,renderTriggered:at,errorCaptured:tt,serverPrefetch:bt,expose:Ye,inheritAttrs:L,components:G,directives:te,filters:be}=s,Se=_n();{var[Ce]=i.propsOptions;if(Ce)for(var nt in Ce)Se("Props",nt)}if(J&&ln(J,m,Se),x)for(var We in x){var Qe=x[We];h.isFunction(Qe)?(Object.defineProperty(m,We,{value:Qe.bind(d),configurable:!0,enumerable:!0,writable:!0}),Se("Methods",We)):ue('Method "'.concat(We,'" has type "').concat(typeof Qe,'" in the component definition. Did you reference the function correctly?'))}if(A&&function(){h.isFunction(A)||ue("The data option must be a function. Plain object usage is no longer supported.");var un=A.call(d,d);if(h.isPromise(un)&&ue("data() returned a Promise - note data() cannot be async; If you intend to perform data fetching before component renders, use async setup() + <Suspense>."),!h.isObject(un))ue("data() should return an object.");else{i.data=v.reactive(un);{var Sn=function(lo){Se("Data",lo),So(lo[0])||Object.defineProperty(m,lo,{configurable:!0,enumerable:!0,get:()=>un[lo],set:h.NOOP})};for(var ei in un)Sn(ei)}}}(),Rn=!0,C){var Ue=function(un){var Sn=C[un],ei=h.isFunction(Sn)?Sn.bind(d,d):h.isFunction(Sn.get)?Sn.get.bind(d,d):h.NOOP;ei===h.NOOP&&ue('Computed property "'.concat(un,'" has no getter.'));var lo=!h.isFunction(Sn)&&h.isFunction(Sn.set)?Sn.set.bind(d):()=>{ue('Write operation failed: computed property "'.concat(un,'" is readonly.'))},Yn=Kc({get:ei,set:lo});Object.defineProperty(m,un,{enumerable:!0,configurable:!0,get:()=>Yn.value,set:Si=>Yn.value=Si}),Se("Computed",un)};for(var wt in C)Ue(wt)}if(V)for(var jt in V)ir(V[jt],m,d,jt);if(M){var Vt=h.isFunction(M)?M.call(d):M;Reflect.ownKeys(Vt).forEach(un=>{Gn(un,Vt[un])})}Q&&Vn(Q,i,"c");function Bt(un,Sn){h.isArray(Sn)?Sn.forEach(ei=>un(ei.bind(d))):Sn&&un(Sn.bind(d))}if(Bt(xa,ee),Bt(no,Y),Bt(Wa,me),Bt(Uo,Te),Bt(gl,dt),Bt(rr,qe),Bt(Fl,tt),Bt(ml,He),Bt(qa,at),Bt(Vo,Mt),Bt(Ga,he),Bt(ms,bt),h.isArray(Ye))if(Ye.length){var lr=i.exposed||(i.exposed={});Ye.forEach(un=>{Object.defineProperty(lr,un,{get:()=>d[un],set:Sn=>d[un]=Sn})})}else i.exposed||(i.exposed={});_e&&i.render===h.NOOP&&(i.render=_e),L!=null&&(i.inheritAttrs=L),G&&(i.components=G),te&&(i.directives=te);var Hn=i.appContext.config.globalProperties.$applyOptions;Hn&&Hn(s,i,d)}function ln(i,s){var d=arguments.length>2&&arguments[2]!==void 0?arguments[2]:h.NOOP;h.isArray(i)&&(i=Ur(i));var m=function(C){var x=i[C],V=void 0;h.isObject(x)?"default"in x?V=oa(x.from||C,x.default,!0):V=oa(x.from||C):V=oa(x),v.isRef(V)?Object.defineProperty(s,C,{enumerable:!0,configurable:!0,get:()=>V.value,set:M=>V.value=M}):s[C]=V,d("Inject",C)};for(var A in i)m(A)}function Vn(i,s,d){sn(h.isArray(i)?i.map(m=>m.bind(s.proxy)):i.bind(s.proxy),s,d)}function ir(i,s,d,m){var A=m.includes(".")?_i(d,m):()=>d[m];if(h.isString(i)){var C=s[i];h.isFunction(C)?$r(A,C):ue('Invalid watch handler specified by key "'.concat(i,'"'),C)}else if(h.isFunction(i))$r(A,i.bind(d));else if(h.isObject(i))if(h.isArray(i))i.forEach(V=>ir(V,s,d,m));else{var x=h.isFunction(i.handler)?i.handler.bind(d):s[i.handler];h.isFunction(x)?$r(A,x,i):ue('Invalid watch handler specified by key "'.concat(i.handler,'"'),x)}else ue('Invalid watch option: "'.concat(m,'"'),i)}function On(i){var s=i.type,{mixins:d,extends:m}=s,{mixins:A,optionsCache:C,config:{optionMergeStrategies:x}}=i.appContext,V=C.get(s),M;return V?M=V:!A.length&&!d&&!m?M=s:(M={},A.length&&A.forEach(J=>$n(M,J,x,!0)),$n(M,s,x)),h.isObject(s)&&C.set(s,M),M}function $n(i,s,d){var m=arguments.length>3&&arguments[3]!==void 0?arguments[3]:!1,{mixins:A,extends:C}=s;C&&$n(i,C,d,!0),A&&A.forEach(M=>$n(i,M,d,!0));for(var x in s)if(m&&x==="expose")ue('"expose" option is ignored when declared in mixins or extends. It should only be declared in the base component itself.');else{var V=Cr[x]||d&&d[x];i[x]=V?V(i[x],s[x]):s[x]}return i}var Cr={data:Ya,props:Ja,emits:Ja,methods:Ho,computed:Ho,beforeCreate:Gt,created:Gt,beforeMount:Gt,mounted:Gt,beforeUpdate:Gt,updated:Gt,beforeDestroy:Gt,beforeUnmount:Gt,destroyed:Gt,unmounted:Gt,activated:Gt,deactivated:Gt,errorCaptured:Gt,serverPrefetch:Gt,components:Ho,directives:Ho,watch:bs,provide:Ya,inject:_s};function Ya(i,s){return s?i?function(){return h.extend(h.isFunction(i)?i.call(this,this):i,h.isFunction(s)?s.call(this,this):s)}:s:i}function _s(i,s){return Ho(Ur(i),Ur(s))}function Ur(i){if(h.isArray(i)){for(var s={},d=0;d<i.length;d++)s[i[d]]=i[d];return s}return i}function Gt(i,s){return i?[...new Set([].concat(i,s))]:s}function Ho(i,s){return i?h.extend(Object.create(null),i,s):s}function Ja(i,s){return i?h.isArray(i)&&h.isArray(s)?[...new Set([...i,...s])]:h.extend(Object.create(null),Tt(i),Tt(s!=null?s:{})):s}function bs(i,s){if(!i)return s;if(!s)return i;var d=h.extend(Object.create(null),i);for(var m in s)d[m]=Gt(i[m],s[m]);return d}function ys(){return{app:null,config:{isNativeTag:h.NO,performance:!1,globalProperties:{},optionMergeStrategies:{},errorHandler:void 0,warnHandler:void 0,compilerOptions:{}},mixins:[],components:{},directives:{},provides:Object.create(null),optionsCache:new WeakMap,propsCache:new WeakMap,emitsCache:new WeakMap}}var Zr=0;function jo(i,s){return function(m){var A=arguments.length>1&&arguments[1]!==void 0?arguments[1]:null;h.isFunction(m)||(m=h.extend({},m)),A!=null&&!h.isObject(A)&&(ue("root props passed to app.mount() must be an object."),A=null);var C=ys(),x=new WeakSet,V=!1,M=C.app={_uid:Zr++,_component:m,_props:A,_container:null,_context:C,_instance:null,version:ss,get config(){return C.config},set config(J){ue("app.config cannot be replaced. Modify individual options instead.")},use(J){for(var Q=arguments.length,ee=new Array(Q>1?Q-1:0),Y=1;Y<Q;Y++)ee[Y-1]=arguments[Y];return x.has(J)?ue("Plugin has already been applied to target app."):J&&h.isFunction(J.install)?(x.add(J),J.install(M,...ee)):h.isFunction(J)?(x.add(J),J(M,...ee)):ue('A plugin must either be a function or an object with an "install" function.'),M},mixin(J){return C.mixins.includes(J)?ue("Mixin has already been applied to target app"+(J.name?": ".concat(J.name):"")):C.mixins.push(J),M},component(J,Q){return da(J,C.config),Q?(C.components[J]&&ue('Component "'.concat(J,'" has already been registered in target app.')),C.components[J]=Q,M):C.components[J]},directive(J,Q){return gs(J),Q?(C.directives[J]&&ue('Directive "'.concat(J,'" has already been registered in target app.')),C.directives[J]=Q,M):C.directives[J]},mount(J,Q,ee){if(V)ue("App has already been mounted.\nIf you want to remount the same app, move your app creation logic into a factory function and create fresh app instances for each mount - e.g. `const createMyApp = () => createApp(App)`");else{J.__vue_app__&&ue("There is already an app instance mounted on the host container.\n If you want to mount another app on the same host container, you need to unmount the previous app by calling `app.unmount()` first.");var Y=sr(m,A);return Y.appContext=C,ee===!0?ee="svg":ee===!1&&(ee=void 0),C.reload=()=>{i(ji(Y),J,ee)},Q&&s?s(Y,J):i(Y,J,ee),V=!0,M._container=J,J.__vue_app__=M,M._instance=Y.component,Jo(M,ss),Xl(Y.component)||Y.component.proxy}},unmount(){V?(i(null,M._container),M._instance=null,vi(M),delete M._container.__vue_app__):ue("Cannot unmount an app that is not mounted.")},provide(J,Q){return J in C.provides&&ue('App already provides property with key "'.concat(String(J),'". It will be overwritten with the new value.')),C.provides[J]=Q,M},runWithContext(J){var Q=Mn;Mn=M;try{return J()}finally{Mn=Q}}};return M}}var Mn=null;function Gn(i,s){if(!Pn)ue("provide() can only be used inside setup().");else{var d=Pn.provides,m=Pn.parent&&Pn.parent.provides;m===d&&(d=Pn.provides=Object.create(m)),d[i]=s,Pn.type.mpType==="app"&&Pn.appContext.app.provide(i,s)}}function oa(i,s){var d=arguments.length>2&&arguments[2]!==void 0?arguments[2]:!1,m=Pn||An;if(m||Mn){var A=m?m.parent==null?m.vnode.appContext&&m.vnode.appContext.provides:m.parent.provides:Mn._context.provides;if(A&&i in A)return A[i];if(arguments.length>1)return d&&h.isFunction(s)?s.call(m&&m.proxy):s;ue('injection "'.concat(String(i),'" not found.'))}else ue("inject() can only be used inside setup() or functional components.")}function Ka(){return!!(Pn||An||Mn)}function Za(i,s,d){var m=arguments.length>3&&arguments[3]!==void 0?arguments[3]:!1,A={},C={};h.def(C,Qs,1),i.propsDefaults=Object.create(null),Xr(i,s,A,C);for(var x in i.propsOptions[0])x in A||(A[x]=void 0);Ul(s||{},A,i),d?i.props=m?A:v.shallowReactive(A):i.type.props?i.props=A:i.props=C,i.attrs=C}function io(i){for(;i;){if(i.type.__hmrId)return!0;i=i.parent}}function zo(i,s,d,m){var{props:A,attrs:C,vnode:{patchFlag:x}}=i,V=v.toRaw(A),[M]=i.propsOptions,J=!1;if(!io(i)&&(m||x>0)&&!(x&16)){if(x&8)for(var Q=i.vnode.dynamicProps,ee=0;ee<Q.length;ee++){var Y=Q[ee];if(!hn(i.emitsOptions,Y)){var me=s[Y];if(M)if(h.hasOwn(C,Y))me!==C[Y]&&(C[Y]=me,J=!0);else{var Te=h.camelize(Y);A[Te]=js(M,V,Te,me,i,!1)}else me!==C[Y]&&(C[Y]=me,J=!0)}}}else{Xr(i,s,A,C)&&(J=!0);var dt;for(var qe in V)(!s||!h.hasOwn(s,qe)&&((dt=h.hyphenate(qe))===qe||!h.hasOwn(s,dt)))&&(M?d&&(d[qe]!==void 0||d[dt]!==void 0)&&(A[qe]=js(M,V,qe,void 0,i,!0)):delete A[qe]);if(C!==V)for(var Pt in C)(!s||!h.hasOwn(s,Pt)&&!0)&&(delete C[Pt],J=!0)}J&&v.trigger(i,"set","$attrs"),Ul(s||{},A,i)}function Xr(i,s,d,m){var[A,C]=i.propsOptions,x=!1,V;if(s){for(var M in s)if(!h.isReservedProp(M)){var J=s[M],Q=void 0;A&&h.hasOwn(A,Q=h.camelize(M))?!C||!C.includes(Q)?d[Q]=J:(V||(V={}))[Q]=J:hn(i.emitsOptions,M)||(!(M in m)||J!==m[M])&&(m[M]=J,x=!0)}}if(C)for(var ee=v.toRaw(d),Y=V||h.EMPTY_OBJ,me=0;me<C.length;me++){var Te=C[me];d[Te]=js(A,ee,Te,Y[Te],i,!h.hasOwn(Y,Te))}return x}function js(i,s,d,m,A,C){var x=i[d];if(x!=null){var V=h.hasOwn(x,"default");if(V&&m===void 0){var M=x.default;if(x.type!==Function&&!x.skipFactory&&h.isFunction(M)){var{propsDefaults:J}=A;if(d in J)m=J[d];else{var Q=ua(A);m=J[d]=M.call(null,s),Q()}}else m=M}x[0]&&(C&&!V?m=!1:x[1]&&(m===""||m===h.hyphenate(d))&&(m=!0))}return m}function _l(i,s){var d=arguments.length>2&&arguments[2]!==void 0?arguments[2]:!1,m=s.propsCache,A=m.get(i);if(A)return A;var C=i.props,x={},V=[],M=!1;if(!h.isFunction(i)){var J=oe=>{M=!0;var[he,_e]=_l(oe,s,!0);h.extend(x,he),_e&&V.push(..._e)};!d&&s.mixins.length&&s.mixins.forEach(J),i.extends&&J(i.extends),i.mixins&&i.mixins.forEach(J)}if(!C&&!M)return h.isObject(i)&&m.set(i,h.EMPTY_ARR),h.EMPTY_ARR;if(h.isArray(C))for(var Q=0;Q<C.length;Q++){h.isString(C[Q])||ue("props must be strings when using array syntax.",C[Q]);var ee=h.camelize(C[Q]);Xa(ee)&&(x[ee]=h.EMPTY_OBJ)}else if(C){h.isObject(C)||ue("invalid props options",C);for(var Y in C){var me=h.camelize(Y);if(Xa(me)){var Te=C[Y],dt=x[me]=h.isArray(Te)||h.isFunction(Te)?{type:Te}:h.extend({},Te);if(dt){var qe=Ws(Boolean,dt.type),Pt=Ws(String,dt.type);dt[0]=qe>-1,dt[1]=Pt<0||qe<Pt,(qe>-1||h.hasOwn(dt,"default"))&&V.push(me)}}}}var Mt=[x,V];return h.isObject(i)&&m.set(i,Mt),Mt}function Xa(i){return i[0]!=="$"&&!h.isReservedProp(i)?!0:(ue('Invalid prop name: "'.concat(i,'" is a reserved property.')),!1)}function zs(i){if(i===null)return"null";if(typeof i=="function")return i.name||"";if(typeof i=="object"){var s=i.constructor&&i.constructor.name;return s||""}return""}function bl(i,s){return zs(i)===zs(s)}function Ws(i,s){return h.isArray(s)?s.findIndex(d=>bl(d,i)):h.isFunction(s)&&bl(s,i)?0:-1}function Ul(i,s,d){var m=v.toRaw(s),A=d.propsOptions[0];for(var C in A){var x=A[C];x!=null&&Gs(C,m[C],x,v.shallowReadonly(m),!h.hasOwn(i,C)&&!h.hasOwn(i,h.hyphenate(C)))}}function Gs(i,s,d,m,A){var{type:C,required:x,validator:V,skipCheck:M}=d;if(x&&A){ue('Missing required prop: "'+i+'"');return}if(!(s==null&&!x)){if(C!=null&&C!==!0&&!M){for(var J=!1,Q=h.isArray(C)?C:[C],ee=[],Y=0;Y<Q.length&&!J;Y++){var{valid:me,expectedType:Te}=Vl(s,Q[Y]);ee.push(Te||""),J=me}if(!J){ue(Ys(i,s,ee));return}}V&&!V(s,m)&&ue('Invalid prop: custom validator check failed for prop "'+i+'".')}}var qs=h.makeMap("String,Number,Boolean,Function,Symbol,BigInt");function Vl(i,s){var d,m=zs(s);if(qs(m)){var A=typeof i;d=A===m.toLowerCase(),!d&&A==="object"&&(d=i instanceof s)}else m==="Object"?d=h.isObject(i):m==="Array"?d=h.isArray(i):m==="null"?d=i===null:d=i instanceof s;return{valid:d,expectedType:m}}function Ys(i,s,d){if(d.length===0)return'Prop type [] for prop "'.concat(i,`" won't match anything. Did you mean to use type Array instead?`);var m='Invalid prop: type check failed for prop "'.concat(i,'". Expected ').concat(d.map(h.capitalize).join(" | ")),A=d[0],C=h.toRawType(s),x=bi(s,A),V=bi(s,C);return d.length===1&&Qa(A)&&!Es(A,C)&&(m+=" with value ".concat(x)),m+=", got ".concat(C," "),Qa(C)&&(m+="with value ".concat(V,".")),m}function bi(i,s){return s==="String"?'"'.concat(i,'"'):s==="Number"?"".concat(Number(i)):"".concat(i)}function Qa(i){var s=["string","number","boolean"];return s.some(d=>i.toLowerCase()===d)}function Es(){for(var i=arguments.length,s=new Array(i),d=0;d<i;d++)s[d]=arguments[d];return s.some(m=>m.toLowerCase()==="boolean")}var Ss=i=>i[0]==="_"||i==="$stable",Ui=i=>h.isArray(i)?i.map(Ir):[Ir(i)],ws=(i,s,d)=>{if(s._n)return s;var m=xe(function(){return Pn&&(!d||d.root===Pn.root)&&ue('Slot "'.concat(i,'" invoked outside of the render function: this will not track dependencies used in the slot. Invoke the slot function inside the render function instead.')),Ui(s(...arguments))},d);return m._c=!1,m},es=(i,s,d)=>{var m=i._ctx;for(var A in i)if(!Ss(A)){var C=i[A];h.isFunction(C)?s[A]=ws(A,C,m):C!=null&&function(){ue('Non-function value encountered for slot "'.concat(A,'". Prefer function slots for better performance.'));var x=Ui(C);s[A]=()=>x}()}},gc=(i,s)=>{Do(i.vnode)||ue("Non-function value encountered for default slot. Prefer function slots for better performance.");var d=Ui(s);i.slots.default=()=>d},Ge=(i,s)=>{if(i.vnode.shapeFlag&32){var d=s._;d?(i.slots=v.toRaw(s),h.def(s,"_",d)):es(s,i.slots={})}else i.slots={},s&&gc(i,s);h.def(i.slots,Qs,1)},$t=(i,s,d)=>{var{vnode:m,slots:A}=i,C=!0,x=h.EMPTY_OBJ;if(m.shapeFlag&32){var V=s._;V?Tr?(h.extend(A,s),v.trigger(i,"set","$slots")):d&&V===1?C=!1:(h.extend(A,s),!d&&V===1&&delete A._):(C=!s.$stable,es(s,A)),x=s}else s&&(gc(i,s),x={default:1});if(C)for(var M in A)!Ss(M)&&x[M]==null&&delete A[M]};function It(i,s,d,m){var A=arguments.length>4&&arguments[4]!==void 0?arguments[4]:!1;if(h.isArray(i)){i.forEach((dt,qe)=>It(dt,s&&(h.isArray(s)?s[qe]:s),d,m,A));return}if(!(bo(m)&&!A)){var C=m.shapeFlag&4?Xl(m.component)||m.component.proxy:m.el,x=A?null:C,{i:V,r:M}=i;if(!V){ue("Missing ref owner context. ref cannot be used on hoisted vnodes. A vnode with ref must be created inside the render function.");return}var J=s&&s.r,Q=V.refs===h.EMPTY_OBJ?V.refs={}:V.refs,ee=V.setupState;if(J!=null&&J!==M&&(h.isString(J)?(Q[J]=null,h.hasOwn(ee,J)&&(ee[J]=null)):v.isRef(J)&&(J.value=null)),h.isFunction(M))Jn(M,V,12,[x,Q]);else{var Y=h.isString(M),me=v.isRef(M);if(Y||me){var Te=()=>{if(i.f){var dt=Y?h.hasOwn(ee,M)?ee[M]:Q[M]:M.value;A?h.isArray(dt)&&h.remove(dt,C):h.isArray(dt)?dt.includes(C)||dt.push(C):Y?(Q[M]=[C],h.hasOwn(ee,M)&&(ee[M]=Q[M])):(M.value=[C],i.k&&(Q[i.k]=M.value))}else Y?(Q[M]=x,h.hasOwn(ee,M)&&(ee[M]=x)):me?(M.value=x,i.k&&(Q[i.k]=x)):ue("Invalid template ref type:",M,"(".concat(typeof M,")"))};x?(Te.id=-1,Ar(Te,d)):Te()}else ue("Invalid template ref type:",M,"(".concat(typeof M,")"))}}}var gn=!1,qn=i=>i.namespaceURI.includes("svg")&&i.tagName!=="foreignObject",Nr=i=>i.namespaceURI.includes("MathML"),ar=i=>{if(qn(i))return"svg";if(Nr(i))return"mathml"},yi=i=>i.nodeType===8;function yl(i){var{mt:s,p:d,o:{patchProp:m,createText:A,nextSibling:C,parentNode:x,remove:V,insert:M,createComment:J}}=i,Q=(oe,he)=>{if(!he.hasChildNodes()){ue("Attempting to hydrate existing markup but container is empty. Performing full mount instead."),d(null,oe,he),Vr(),he._vnode=oe;return}gn=!1,ee(he.firstChild,oe,null,null,null),Vr(),he._vnode=oe,gn&&console.error("Hydration completed but contains mismatches.")},ee=function(oe,he,_e,He,at){var tt=arguments.length>5&&arguments[5]!==void 0?arguments[5]:!1,bt=yi(oe)&&oe.data==="[",Ye=()=>dt(oe,he,_e,He,at,bt),{type:L,ref:G,shapeFlag:te,patchFlag:be}=he,Se=oe.nodeType;he.el=oe,"__vnode"in oe||Object.defineProperty(oe,"__vnode",{value:he,enumerable:!1}),"__vueParentComponent"in oe||Object.defineProperty(oe,"__vueParentComponent",{value:_e,enumerable:!1}),be===-2&&(tt=!1,he.dynamicChildren=null);var Ce=null;switch(L){case Ln:Se!==3?he.children===""?(M(he.el=A("",oe.parentNode),x(oe),oe),Ce=oe):Ce=Ye():(oe.data!==he.children&&(gn=!0,ue("Hydration text mismatch in",oe.parentNode,`
  - rendered on server: `.concat(JSON.stringify(oe.data),`
  - expected on client: `).concat(JSON.stringify(he.children))),oe.data=he.children),Ce=C(oe));break;case Fn:Mt(oe)?(Ce=C(oe),Pt(he.el=oe.content.firstChild,oe,_e)):Se!==8||bt?Ce=Ye():Ce=C(oe);break;case $i:if(bt&&(oe=C(oe),Se=oe.nodeType),Se===1||Se===3){Ce=oe;for(var nt=!he.children.length,We=0;We<he.staticCount;We++)nt&&(he.children+=Ce.nodeType===1?Ce.outerHTML:Ce.data),We===he.staticCount-1&&(he.anchor=Ce),Ce=C(Ce);return bt?C(Ce):Ce}else Ye();break;case Bn:bt?Ce=Te(oe,he,_e,He,at,tt):Ce=Ye();break;default:if(te&1)(Se!==1||he.type.toLowerCase()!==oe.tagName.toLowerCase())&&!Mt(oe)?Ce=Ye():Ce=Y(oe,he,_e,He,at,tt);else if(te&6){he.slotScopeIds=at;var Qe=x(oe);if(bt?Ce=qe(oe):yi(oe)&&oe.data==="teleport start"?Ce=qe(oe,oe.data,"teleport end"):Ce=C(oe),s(he,Qe,null,_e,He,ar(Qe),tt),bo(he)){var Ue;bt?(Ue=sr(Bn),Ue.anchor=Ce?Ce.previousSibling:Qe.lastChild):Ue=oe.nodeType===3?bc(""):sr("div"),Ue.el=oe,he.component.subTree=Ue}}else te&64?Se!==8?Ce=Ye():Ce=he.type.hydrate(oe,he,_e,He,at,tt,i,me):te&128?Ce=he.type.hydrate(oe,he,_e,He,ar(x(oe)),at,tt,i,ee):ue("Invalid HostVNode type:",L,"(".concat(typeof L,")"))}return G!=null&&It(G,null,He,he),Ce},Y=(oe,he,_e,He,at,tt)=>{tt=tt||!!he.dynamicChildren;var{type:bt,props:Ye,patchFlag:L,shapeFlag:G,dirs:te,transition:be}=he,Se=bt==="input"||bt==="option";{te&&Sr(he,null,_e,"created");var Ce=!1;if(Mt(oe)){Ce=As(He,be)&&_e&&_e.vnode.props&&_e.vnode.props.appear;var nt=oe.content.firstChild;Ce&&be.beforeEnter(nt),Pt(nt,oe,_e),he.el=oe=nt}if(G&16&&!(Ye&&(Ye.innerHTML||Ye.textContent)))for(var We=me(oe.firstChild,he,oe,_e,He,at,tt),Qe=!1;We;){gn=!0,Qe||(ue("Hydration children mismatch on",oe,`
Server rendered element contains more child nodes than client vdom.`),Qe=!0);var Ue=We;We=We.nextSibling,V(Ue)}else G&8&&oe.textContent!==he.children&&(gn=!0,ue("Hydration text content mismatch on",oe,`
  - rendered on server: `.concat(oe.textContent,`
  - expected on client: `).concat(he.children)),oe.textContent=he.children);if(Ye)for(var wt in Ye)$l(oe,wt,Ye[wt],he,_e)&&(gn=!0),(Se&&(wt.endsWith("value")||wt==="indeterminate")||h.isOn(wt)&&!h.isReservedProp(wt)||wt[0]===".")&&m(oe,wt,null,Ye[wt],void 0,void 0,_e);var jt;(jt=Ye&&Ye.onVnodeBeforeMount)&&zi(jt,_e,he),te&&Sr(he,null,_e,"beforeMount"),((jt=Ye&&Ye.onVnodeMounted)||te||Ce)&&U(()=>{jt&&zi(jt,_e,he),Ce&&be.enter(oe),te&&Sr(he,null,_e,"mounted")},He)}return oe.nextSibling},me=(oe,he,_e,He,at,tt,bt)=>{bt=bt||!!he.dynamicChildren;for(var Ye=he.children,L=Ye.length,G=!1,te=0;te<L;te++){var be=bt?Ye[te]:Ye[te]=Ir(Ye[te]);if(oe)oe=ee(oe,be,He,at,tt,bt);else{if(be.type===Ln&&!be.children)continue;gn=!0,G||(ue("Hydration children mismatch on",_e,`
Server rendered element contains fewer child nodes than client vdom.`),G=!0),d(null,be,_e,null,He,at,ar(_e),tt)}}return oe},Te=(oe,he,_e,He,at,tt)=>{var{slotScopeIds:bt}=he;bt&&(at=at?at.concat(bt):bt);var Ye=x(oe),L=me(C(oe),he,Ye,_e,He,at,tt);return L&&yi(L)&&L.data==="]"?C(he.anchor=L):(gn=!0,M(he.anchor=J("]",Ye),Ye,L),L)},dt=(oe,he,_e,He,at,tt)=>{if(gn=!0,ue(`Hydration node mismatch:
- rendered on server:`,oe,oe.nodeType===3?"(text)":yi(oe)&&oe.data==="["?"(start of fragment)":"",`
- expected on client:`,he.type),he.el=null,tt)for(var bt=qe(oe);;){var Ye=C(oe);if(Ye&&Ye!==bt)V(Ye);else break}var L=C(oe),G=x(oe);return V(oe),d(null,he,G,L,_e,He,ar(G),at),L},qe=function(oe){for(var he=arguments.length>1&&arguments[1]!==void 0?arguments[1]:"[",_e=arguments.length>2&&arguments[2]!==void 0?arguments[2]:"]",He=0;oe;)if(oe=C(oe),oe&&yi(oe)&&(oe.data===he&&He++,oe.data===_e)){if(He===0)return C(oe);He--}return oe},Pt=(oe,he,_e)=>{var He=he.parentNode;He&&He.replaceChild(oe,he);for(var at=_e;at;)at.vnode.el===he&&(at.vnode.el=at.subTree.el=oe),at=at.parent},Mt=oe=>oe.nodeType===1&&oe.tagName.toLowerCase()==="template";return[Q,ee]}function $l(i,s,d,m,A){var C,x,V,M,J;if(s==="class")M=i.getAttribute("class"),J=h.normalizeClass(d),mc(El(M||""),El(J))||(x=V="class");else if(s==="style"){M=i.getAttribute("style"),J=h.isString(d)?d:h.stringifyStyle(h.normalizeStyle(d));var Q=qc(M),ee=qc(J);if(m.dirs)for(var{dir:Y,value:me}of m.dirs)Y.name==="show"&&!me&&ee.set("display","none");var Te=A==null?void 0:A.subTree;if(m===Te||(Te==null?void 0:Te.type)===Bn&&Te.children.includes(m)){var dt=(C=A==null?void 0:A.getCssVars)==null?void 0:C.call(A);for(var qe in dt)ee.set("--".concat(qe),String(dt[qe]))}aa(Q,ee)||(x=V="style")}else(i instanceof SVGElement&&h.isKnownSvgAttr(s)||i instanceof HTMLElement&&(h.isBooleanAttr(s)||h.isKnownHtmlAttr(s)))&&(h.isBooleanAttr(s)?(M=i.hasAttribute(s),J=h.includeBooleanAttr(d)):d==null?(M=i.hasAttribute(s),J=!1):(i.hasAttribute(s)?M=i.getAttribute(s):s==="value"&&i.tagName==="TEXTAREA"?M=i.value:M=!1,J=h.isRenderableAttrValue(d)?String(d):!1),M!==J&&(x="attribute",V=s));if(x){var Pt=he=>he===!1?"(not rendered)":"".concat(V,'="').concat(he,'"'),Mt="Hydration ".concat(x," mismatch on"),oe=`
  - rendered on server: `.concat(Pt(M),`
  - expected on client: `).concat(Pt(J),`
  Note: this mismatch is check-only. The DOM will not be rectified in production due to performance overhead.
  You should fix the source of the mismatch.`);return ue(Mt,i,oe),!0}return!1}function El(i){return new Set(i.trim().split(/\s+/))}function mc(i,s){if(i.size!==s.size)return!1;for(var d of i)if(!s.has(d))return!1;return!0}function qc(i){var s=new Map;for(var d of i.split(";")){var[m,A]=d.split(":");m=m==null?void 0:m.trim(),A=A==null?void 0:A.trim(),m&&A&&s.set(m,A)}return s}function aa(i,s){if(i.size!==s.size)return!1;for(var[d,m]of i)if(m!==s.get(d))return!1;return!0}var Co,li;function ci(i,s){i.appContext.config.performance&&Hl()&&li.mark("vue-".concat(s,"-").concat(i.uid)),Oa(i,s,Hl()?li.now():Date.now())}function Ao(i,s){if(i.appContext.config.performance&&Hl()){var d="vue-".concat(s,"-").concat(i.uid),m=d+":end";li.mark(m),li.measure("<".concat(as(i,i.type),"> ").concat(s),d,m),li.clearMarks(d),li.clearMarks(m)}Li(i,s,Hl()?li.now():Date.now())}function Hl(){return Co!==void 0||(typeof window!="undefined"&&window.performance?(Co=!0,li=window.performance):Co=!1),Co}function jr(){var i=[];if(i.length){var s=i.length>1;console.warn("Feature flag".concat(s?"s":""," ").concat(i.join(", ")," ").concat(s?"are":"is",` not explicitly defined. You are running the esm-bundler build of Vue, which expects these compile-time feature flags to be globally injected via the bundler config in order to get better tree-shaking in the production bundle.

For more details, see https://link.vuejs.org/feature-flags.`))}}var Ar=U;function Js(i){return Ks(i)}function Cs(i){return Ks(i,yl)}function Ks(i,s){jr();var d=h.getGlobalThis();d.__VUE__=!0,Yo(d.__VUE_DEVTOOLS_GLOBAL_HOOK__,d);var{insert:m,remove:A,patchProp:C,forcePatchProp:x,createElement:V,createText:M,createComment:J,setText:Q,setElementText:ee,parentNode:Y,nextSibling:me,setScopeId:Te=h.NOOP,insertStaticContent:dt}=i,qe=function(j,re,Pe){var Fe=arguments.length>3&&arguments[3]!==void 0?arguments[3]:null,je=arguments.length>4&&arguments[4]!==void 0?arguments[4]:null,rt=arguments.length>5&&arguments[5]!==void 0?arguments[5]:null,pt=arguments.length>6&&arguments[6]!==void 0?arguments[6]:void 0,Le=arguments.length>7&&arguments[7]!==void 0?arguments[7]:null,it=arguments.length>8&&arguments[8]!==void 0?arguments[8]:Tr?!1:!!re.dynamicChildren;if(j!==re){j&&!oo(j,re)&&(Fe=ei(j),Bt(j,je,rt,!0),j=null),re.patchFlag===-2&&(it=!1,re.dynamicChildren=null);var{type:Ke,ref:Lt,shapeFlag:Kt}=re;switch(Ke){case Ln:Pt(j,re,Pe,Fe);break;case Fn:Mt(j,re,Pe,Fe);break;case $i:j==null?oe(re,Pe,Fe,pt):he(j,re,Pe,pt);break;case Bn:be(j,re,Pe,Fe,je,rt,pt,Le,it);break;default:Kt&1?at(j,re,Pe,Fe,je,rt,pt,Le,it):Kt&6?Se(j,re,Pe,Fe,je,rt,pt,Le,it):Kt&64||Kt&128?Ke.process(j,re,Pe,Fe,je,rt,pt,Le,it,Si):ue("Invalid VNode type:",Ke,"(".concat(typeof Ke,")"))}Lt!=null&&je&&It(Lt,j&&j.ref,rt,re||j,!re)}},Pt=(j,re,Pe,Fe)=>{if(j==null)m(re.el=M(re.children,Pe),Pe,Fe);else{var je=re.el=j.el;re.children!==j.children&&Q(je,re.children)}},Mt=(j,re,Pe,Fe)=>{j==null?m(re.el=J(re.children||"",Pe),Pe,Fe):re.el=j.el},oe=(j,re,Pe,Fe)=>{[j.el,j.anchor]=dt(j.children,re,Pe,Fe,j.el,j.anchor)},he=(j,re,Pe,Fe)=>{if(re.children!==j.children){var je=me(j.anchor);He(j),[re.el,re.anchor]=dt(re.children,Pe,je,Fe)}else re.el=j.el,re.anchor=j.anchor},_e=(j,re,Pe)=>{for(var{el:Fe,anchor:je}=j,rt;Fe&&Fe!==je;)rt=me(Fe),m(Fe,re,Pe),Fe=rt;m(je,re,Pe)},He=j=>{for(var{el:re,anchor:Pe}=j,Fe;re&&re!==Pe;)Fe=me(re),A(re),re=Fe;A(Pe)},at=(j,re,Pe,Fe,je,rt,pt,Le,it)=>{re.type==="svg"?pt="svg":re.type==="math"&&(pt="mathml"),j==null?tt(re,Pe,Fe,je,rt,pt,Le,it):L(j,re,je,rt,pt,Le,it)},tt=(j,re,Pe,Fe,je,rt,pt,Le)=>{var it,Ke,{props:Lt,shapeFlag:Kt,transition:Yt,dirs:Nn}=j;if(it=j.el=V(j.type,re),Kt&8?ee(it,j.children):Kt&16&&Ye(j.children,it,null,Fe,je,sa(j,rt),pt,Le),Nn&&Sr(j,null,Fe,"created"),bt(it,j,j.scopeId,pt,Fe),Lt){for(var ti in Lt)ti!=="value"&&!h.isReservedProp(ti)&&C(it,ti,null,Lt[ti],rt,j.children,Fe,je,Sn);"value"in Lt&&C(it,"value",null,Lt.value,rt),(Ke=Lt.onVnodeBeforeMount)&&zi(Ke,Fe,j)}Object.defineProperty(it,"__vnode",{value:j,enumerable:!1}),Object.defineProperty(it,"__vueParentComponent",{value:Fe,enumerable:!1}),Nn&&Sr(j,null,Fe,"beforeMount");var mr=As(je,Yt);mr&&Yt.beforeEnter(it),m(it,re,Pe),((Ke=Lt&&Lt.onVnodeMounted)||mr||Nn)&&Ar(()=>{Ke&&zi(Ke,Fe,j),mr&&Yt.enter(it),Nn&&Sr(j,null,Fe,"mounted")},je)},bt=(j,re,Pe,Fe,je)=>{if(Pe&&Te(j,Pe),Fe)for(var rt=0;rt<Fe.length;rt++)Te(j,Fe[rt]);if(je){var pt=je.subTree;if(pt.patchFlag>0&&pt.patchFlag&2048&&(pt=Oi(pt.children)||pt),re===pt){var Le=je.vnode;bt(j,Le,Le.scopeId,Le.slotScopeIds,je.parent)}}},Ye=function(j,re,Pe,Fe,je,rt,pt,Le){for(var it=arguments.length>8&&arguments[8]!==void 0?arguments[8]:0,Ke=it;Ke<j.length;Ke++){var Lt=j[Ke]=Le?Wo(j[Ke]):Ir(j[Ke]);qe(null,Lt,re,Pe,Fe,je,rt,pt,Le)}},L=(j,re,Pe,Fe,je,rt,pt)=>{var Le=re.el=j.el,{patchFlag:it,dynamicChildren:Ke,dirs:Lt}=re;it|=j.patchFlag&16;var Kt=j.props||h.EMPTY_OBJ,Yt=re.props||h.EMPTY_OBJ,Nn;if(Pe&&Vi(Pe,!1),(Nn=Yt.onVnodeBeforeUpdate)&&zi(Nn,Pe,re,j),Lt&&Sr(re,j,Pe,"beforeUpdate"),Pe&&Vi(Pe,!0),Tr&&(it=0,pt=!1,Ke=null),Ke?(G(j.dynamicChildren,Ke,Le,Pe,Fe,sa(re,je),rt),jl(j,re)):pt||Ue(j,re,Le,null,Pe,Fe,sa(re,je),rt,!1),it>0){if(it&16)te(Le,re,Kt,Yt,Pe,Fe,je);else if(it&2&&Kt.class!==Yt.class&&C(Le,"class",null,Yt.class,je),it&4&&C(Le,"style",Kt.style,Yt.style,je),it&8)for(var ti=re.dynamicProps,mr=0;mr<ti.length;mr++){var Wi=ti[mr],Rs=Kt[Wi],al=Yt[Wi];(al!==Rs||Wi==="value"||x&&x(Le,Wi))&&C(Le,Wi,Rs,al,je,j.children,Pe,Fe,Sn)}it&1&&j.children!==re.children&&ee(Le,re.children)}else!pt&&Ke==null&&te(Le,re,Kt,Yt,Pe,Fe,je);((Nn=Yt.onVnodeUpdated)||Lt)&&Ar(()=>{Nn&&zi(Nn,Pe,re,j),Lt&&Sr(re,j,Pe,"updated")},Fe)},G=(j,re,Pe,Fe,je,rt,pt)=>{for(var Le=0;Le<re.length;Le++){var it=j[Le],Ke=re[Le],Lt=it.el&&(it.type===Bn||!oo(it,Ke)||it.shapeFlag&(6|64))?Y(it.el):Pe;qe(it,Ke,Lt,null,Fe,je,rt,pt,!0)}},te=(j,re,Pe,Fe,je,rt,pt)=>{if(Pe!==Fe){if(Pe!==h.EMPTY_OBJ)for(var Le in Pe)!h.isReservedProp(Le)&&!(Le in Fe)&&C(j,Le,Pe[Le],null,pt,re.children,je,rt,Sn);for(var it in Fe)if(!h.isReservedProp(it)){var Ke=Fe[it],Lt=Pe[it];(Ke!==Lt&&it!=="value"||x&&x(j,it))&&C(j,it,Lt,Ke,pt,re.children,je,rt,Sn)}"value"in Fe&&C(j,"value",Pe.value,Fe.value,pt)}},be=(j,re,Pe,Fe,je,rt,pt,Le,it)=>{var Ke=re.el=j?j.el:M("",Pe),Lt=re.anchor=j?j.anchor:M("",Pe),{patchFlag:Kt,dynamicChildren:Yt,slotScopeIds:Nn}=re;(Tr||Kt&2048)&&(Kt=0,it=!1,Yt=null),Nn&&(Le=Le?Le.concat(Nn):Nn),j==null?(m(Ke,Pe,Fe),m(Lt,Pe,Fe),Ye(re.children||[],Pe,Lt,je,rt,pt,Le,it)):Kt>0&&Kt&64&&Yt&&j.dynamicChildren?(G(j.dynamicChildren,Yt,Pe,je,rt,pt,Le),jl(j,re)):Ue(j,re,Pe,Lt,je,rt,pt,Le,it)},Se=(j,re,Pe,Fe,je,rt,pt,Le,it)=>{re.slotScopeIds=Le,j==null?re.shapeFlag&512?je.ctx.activate(re,Pe,Fe,pt,it):Ce(re,Pe,Fe,je,rt,pt,it):nt(j,re,it)},Ce=(j,re,Pe,Fe,je,rt,pt)=>{var Le=j.component=pr(j,Fe,je);if(Le.type.__hmrId&&xo(Le),gt(j),ci(Le,"mount"),Do(j)&&(Le.ctx.renderer=Si),ci(Le,"init"),Yc(Le),Ao(Le,"init"),Le.asyncDep){if(je&&je.registerDep(Le,We),!j.el){var it=Le.subTree=sr(Fn);Mt(null,it,re,Pe)}}else We(Le,j,re,Pe,je,rt,pt);if(Le.$wxsModules){var Ke=k.resolveOwnerEl(Le,!0);Ke.length&&Ke.forEach(Lt=>{Lt.setAttribute(k.ATTR_V_OWNER_ID,Le.uid);var{$renderjsModules:Kt}=Le.type;Kt&&Lt.setAttribute(k.ATTR_V_RENDERJS,Kt)})}Ot(),Ao(Le,"mount")},nt=(j,re,Pe)=>{var Fe=re.component=j.component;if(Fi(j,re,Pe))if(Fe.asyncDep&&!Fe.asyncResolved){gt(re),Qe(Fe,re,Pe),Ot();return}else Fe.next=re,Fr(Fe.update),Fe.effect.dirty=!0,Fe.update();else re.el=j.el,Fe.vnode=re},We=(j,re,Pe,Fe,je,rt,pt)=>{var Le=()=>{if(j.isMounted){var{next:xr,bu:Nl,u:Ms,parent:co,vnode:sl}=j;{var ll=vc(j);if(ll){xr&&(xr.el=sl.el,Qe(j,xr,pt)),ll.asyncDep.then(()=>{j.isUnmounted||Le()});return}}var Ic=xr,Il;gt(xr||j.vnode),Vi(j,!1),xr?(xr.el=sl.el,Qe(j,xr,pt)):xr=sl,Nl&&h.invokeArrayFns(Nl),(Il=xr.props&&xr.props.onVnodeBeforeUpdate)&&zi(Il,co,xr,sl),Vi(j,!0),ci(j,"render");var us=vo(j);Ao(j,"render");var fs=j.subTree;j.subTree=us,ci(j,"patch"),qe(fs,us,Y(fs.el),ei(fs),j,je,rt),Ao(j,"patch"),xr.el=us.el,Ic===null&&br(j,us.el),Ms&&Ar(Ms,je),(Il=xr.props&&xr.props.onVnodeUpdated)&&Ar(()=>zi(Il,co,xr,sl),je),Aa(j),Ot()}else{var Lt,{el:Kt,props:Yt}=re,{bm:Nn,m:ti,parent:mr}=j,Wi=bo(re);if(Vi(j,!1),Nn&&h.invokeArrayFns(Nn),!Wi&&(Lt=Yt&&Yt.onVnodeBeforeMount)&&zi(Lt,mr,re),Vi(j,!0),Kt&&wi){var Rs=()=>{ci(j,"render"),j.subTree=vo(j),Ao(j,"render"),ci(j,"hydrate"),wi(Kt,j.subTree,j,je,null),Ao(j,"hydrate")};Wi?re.type.__asyncLoader().then(()=>!j.isUnmounted&&Rs()):Rs()}else{ci(j,"render");var al=j.subTree=vo(j);Ao(j,"render"),ci(j,"patch"),qe(null,al,Pe,Fe,j,je,rt),Ao(j,"patch"),re.el=al.el}if(ti&&Ar(ti,je),!Wi&&(Lt=Yt&&Yt.onVnodeMounted)){var uu=re;Ar(()=>zi(Lt,mr,uu),je)}(re.shapeFlag&256||mr&&bo(mr.vnode)&&mr.vnode.shapeFlag&256)&&j.a&&Ar(j.a,je),j.isMounted=!0,Yr(j),re=Pe=Fe=null}},it=j.effect=new v.ReactiveEffect(Le,h.NOOP,()=>an(Ke),j.scope),Ke=j.update=()=>{it.dirty&&it.run()};Ke.id=j.uid,Vi(j,!0),it.onTrack=j.rtc?Lt=>h.invokeArrayFns(j.rtc,Lt):void 0,it.onTrigger=j.rtg?Lt=>h.invokeArrayFns(j.rtg,Lt):void 0,Ke.ownerInstance=j,Ke()},Qe=(j,re,Pe)=>{re.component=j;var Fe=j.vnode.props;j.vnode=re,j.next=null,zo(j,re.props,Fe,Pe),$t(j,re.children,Pe),v.pauseTracking(),qr(j),v.resetTracking()},Ue=function(j,re,Pe,Fe,je,rt,pt,Le){var it=arguments.length>8&&arguments[8]!==void 0?arguments[8]:!1,Ke=j&&j.children,Lt=j?j.shapeFlag:0,Kt=re.children,{patchFlag:Yt,shapeFlag:Nn}=re;if(Yt>0){if(Yt&128){jt(Ke,Kt,Pe,Fe,je,rt,pt,Le,it);return}else if(Yt&256){wt(Ke,Kt,Pe,Fe,je,rt,pt,Le,it);return}}Nn&8?(Lt&16&&Sn(Ke,je,rt),Kt!==Ke&&ee(Pe,Kt)):Lt&16?Nn&16?jt(Ke,Kt,Pe,Fe,je,rt,pt,Le,it):Sn(Ke,je,rt,!0):(Lt&8&&ee(Pe,""),Nn&16&&Ye(Kt,Pe,Fe,je,rt,pt,Le,it))},wt=(j,re,Pe,Fe,je,rt,pt,Le,it)=>{j=j||h.EMPTY_ARR,re=re||h.EMPTY_ARR;var Ke=j.length,Lt=re.length,Kt=Math.min(Ke,Lt),Yt;for(Yt=0;Yt<Kt;Yt++){var Nn=re[Yt]=it?Wo(re[Yt]):Ir(re[Yt]);qe(j[Yt],Nn,Pe,null,je,rt,pt,Le,it)}Ke>Lt?Sn(j,je,rt,!0,!1,Kt):Ye(re,Pe,Fe,je,rt,pt,Le,it,Kt)},jt=(j,re,Pe,Fe,je,rt,pt,Le,it)=>{for(var Ke=0,Lt=re.length,Kt=j.length-1,Yt=Lt-1;Ke<=Kt&&Ke<=Yt;){var Nn=j[Ke],ti=re[Ke]=it?Wo(re[Ke]):Ir(re[Ke]);if(oo(Nn,ti))qe(Nn,ti,Pe,null,je,rt,pt,Le,it);else break;Ke++}for(;Ke<=Kt&&Ke<=Yt;){var mr=j[Kt],Wi=re[Yt]=it?Wo(re[Yt]):Ir(re[Yt]);if(oo(mr,Wi))qe(mr,Wi,Pe,null,je,rt,pt,Le,it);else break;Kt--,Yt--}if(Ke>Kt){if(Ke<=Yt)for(var Rs=Yt+1,al=Rs<Lt?re[Rs].el:Fe;Ke<=Yt;)qe(null,re[Ke]=it?Wo(re[Ke]):Ir(re[Ke]),Pe,al,je,rt,pt,Le,it),Ke++}else if(Ke>Yt)for(;Ke<=Kt;)Bt(j[Ke],je,rt,!0),Ke++;else{var uu=Ke,xr=Ke,Nl=new Map;for(Ke=xr;Ke<=Yt;Ke++){var Ms=re[Ke]=it?Wo(re[Ke]):Ir(re[Ke]);Ms.key!=null&&(Nl.has(Ms.key)&&ue("Duplicate keys found during update:",JSON.stringify(Ms.key),"Make sure keys are unique."),Nl.set(Ms.key,Ke))}var co,sl=0,ll=Yt-xr+1,Ic=!1,Il=0,us=new Array(ll);for(Ke=0;Ke<ll;Ke++)us[Ke]=0;for(Ke=uu;Ke<=Kt;Ke++){var fs=j[Ke];if(sl>=ll){Bt(fs,je,rt,!0);continue}var cl=void 0;if(fs.key!=null)cl=Nl.get(fs.key);else for(co=xr;co<=Yt;co++)if(us[co-xr]===0&&oo(fs,re[co])){cl=co;break}cl===void 0?Bt(fs,je,rt,!0):(us[cl-xr]=Ke+1,cl>=Il?Il=cl:Ic=!0,qe(fs,re[cl],Pe,null,je,rt,pt,Le,it),sl++)}var gf=Ic?zl(us):h.EMPTY_ARR;for(co=gf.length-1,Ke=ll-1;Ke>=0;Ke--){var $u=xr+Ke,kl=re[$u],oc=$u+1<Lt?re[$u+1].el:Fe;us[Ke]===0?qe(null,kl,Pe,oc,je,rt,pt,Le,it):Ic&&(co<0||Ke!==gf[co]?Vt(kl,Pe,oc,2):co--)}}},Vt=function(j,re,Pe,Fe){var je=arguments.length>4&&arguments[4]!==void 0?arguments[4]:null,{el:rt,type:pt,transition:Le,children:it,shapeFlag:Ke}=j;if(Ke&6){Vt(j.component.subTree,re,Pe,Fe);return}if(Ke&128){j.suspense.move(re,Pe,Fe);return}if(Ke&64){pt.move(j,re,Pe,Si);return}if(pt===Bn){m(rt,re,Pe);for(var Lt=0;Lt<it.length;Lt++)Vt(it[Lt],re,Pe,Fe);m(j.anchor,re,Pe);return}if(pt===$i){_e(j,re,Pe);return}var Kt=Fe!==2&&Ke&1&&Le;if(Kt)if(Fe===0)Le.beforeEnter(rt),m(rt,re,Pe),Ar(()=>Le.enter(rt),je);else{var{leave:Yt,delayLeave:Nn,afterLeave:ti}=Le,mr=()=>m(rt,re,Pe),Wi=()=>{Yt(rt,()=>{mr(),ti&&ti()})};Nn?Nn(rt,mr,Wi):Wi()}else m(rt,re,Pe)},Bt=function(j,re,Pe){var Fe=arguments.length>3&&arguments[3]!==void 0?arguments[3]:!1,je=arguments.length>4&&arguments[4]!==void 0?arguments[4]:!1,{type:rt,props:pt,ref:Le,children:it,dynamicChildren:Ke,shapeFlag:Lt,patchFlag:Kt,dirs:Yt}=j;if(Le!=null&&It(Le,null,Pe,j,!0),Lt&256){re.ctx.deactivate(j);return}var Nn=Lt&1&&Yt,ti=!bo(j),mr;if(ti&&(mr=pt&&pt.onVnodeBeforeUnmount)&&zi(mr,re,j),Lt&6)un(j.component,Pe,Fe);else{if(Lt&128){j.suspense.unmount(Pe,Fe);return}Nn&&Sr(j,null,re,"beforeUnmount"),Lt&64?j.type.remove(j,re,Pe,je,Si,Fe):Ke&&(rt!==Bn||Kt>0&&Kt&64)?Sn(Ke,re,Pe,!1,!0):(rt===Bn&&Kt&(128|256)||!je&&Lt&16)&&Sn(it,re,Pe),Fe&&lr(j)}(ti&&(mr=pt&&pt.onVnodeUnmounted)||Nn)&&Ar(()=>{mr&&zi(mr,re,j),Nn&&Sr(j,null,re,"unmounted")},Pe)},lr=j=>{var{type:re,el:Pe,anchor:Fe,transition:je}=j;if(re===Bn){j.patchFlag>0&&j.patchFlag&2048&&je&&!je.persisted?j.children.forEach(Ke=>{Ke.type===Fn?A(Ke.el):lr(Ke)}):Hn(Pe,Fe);return}if(re===$i){He(j);return}var rt=()=>{A(Pe),je&&!je.persisted&&je.afterLeave&&je.afterLeave()};if(j.shapeFlag&1&&je&&!je.persisted){var{leave:pt,delayLeave:Le}=je,it=()=>pt(Pe,rt);Le?Le(j.el,rt,it):it()}else rt()},Hn=(j,re)=>{for(var Pe;j!==re;)Pe=me(j),A(j),j=Pe;A(re)},un=(j,re,Pe)=>{j.type.__hmrId&&Ji(j);var{bum:Fe,scope:je,update:rt,subTree:pt,um:Le}=j;Fe&&h.invokeArrayFns(Fe),je.stop(),rt&&(rt.active=!1,Bt(pt,j,re,Pe)),Le&&Ar(Le,re),Ar(()=>{j.isUnmounted=!0},re),re&&re.pendingBranch&&!re.isUnmounted&&j.asyncDep&&!j.asyncResolved&&j.suspenseId===re.pendingId&&(re.deps--,re.deps===0&&re.resolve()),_r(j)},Sn=function(j,re,Pe){for(var Fe=arguments.length>3&&arguments[3]!==void 0?arguments[3]:!1,je=arguments.length>4&&arguments[4]!==void 0?arguments[4]:!1,rt=arguments.length>5&&arguments[5]!==void 0?arguments[5]:0,pt=rt;pt<j.length;pt++)Bt(j[pt],re,Pe,Fe,je)},ei=j=>j.shapeFlag&6?ei(j.component.subTree):j.shapeFlag&128?j.suspense.next():me(j.anchor||j.el),lo=!1,Yn=(j,re,Pe)=>{j==null?re._vnode&&Bt(re._vnode,null,null,!0):qe(re._vnode||null,j,re,null,null,null,Pe),lo||(lo=!0,qr(),Vr(),lo=!1),re._vnode=j},Si={p:qe,um:Bt,m:Vt,r:lr,mt:Ce,mc:Ye,pc:Ue,pbc:G,n:ei,o:i},No,wi;return s&&([No,wi]=s(Si)),{render:Yn,hydrate:No,createApp:jo(Yn,No)}}function sa(i,s){var{type:d,props:m}=i;return s==="svg"&&d==="foreignObject"||s==="mathml"&&d==="annotation-xml"&&m&&m.encoding&&m.encoding.includes("html")?void 0:s}function Vi(i,s){var{effect:d,update:m}=i;d.allowRecurse=m.allowRecurse=s}function As(i,s){return(!i||i&&!i.pendingBranch)&&s&&!s.persisted}function jl(i,s){var d=arguments.length>2&&arguments[2]!==void 0?arguments[2]:!1,m=i.children,A=s.children;if(h.isArray(m)&&h.isArray(A))for(var C=0;C<m.length;C++){var x=m[C],V=A[C];V.shapeFlag&1&&!V.dynamicChildren&&((V.patchFlag<=0||V.patchFlag===32)&&(V=A[C]=Wo(A[C]),V.el=x.el),d||jl(x,V)),V.type===Ln&&(V.el=x.el),V.type===Fn&&!V.el&&(V.el=x.el)}}function zl(i){var s=i.slice(),d=[0],m,A,C,x,V,M=i.length;for(m=0;m<M;m++){var J=i[m];if(J!==0){if(A=d[d.length-1],i[A]<J){s[m]=A,d.push(m);continue}for(C=0,x=d.length-1;C<x;)V=C+x>>1,i[d[V]]<J?C=V+1:x=V;J<i[d[C]]&&(C>0&&(s[m]=d[C-1]),d[C]=m)}}for(C=d.length,x=d[C-1];C-- >0;)d[C]=x,x=s[x];return d}function vc(i){var s=i.subTree.component;if(s)return s.asyncDep&&!s.asyncResolved?s:vc(s)}var Os=i=>i.__isTeleport,ts=i=>i&&(i.disabled||i.disabled===""),Sl=i=>typeof SVGElement!="undefined"&&i instanceof SVGElement,Ts=i=>typeof MathMLElement=="function"&&i instanceof MathMLElement,_c=(i,s)=>{var d=i&&i.to;if(h.isString(d))if(s){var m=s(d);return m||ue('Failed to locate Teleport target with selector "'.concat(d,'". Note the target element must exist before the component is mounted - i.e. the target cannot be rendered by the component itself, and ideally should be outside of the entire Vue component tree.')),m}else return ue("Current renderer does not support string target for Teleports. (missing querySelector renderer option)"),null;else return!d&&!ts(i)&&ue("Invalid Teleport target: ".concat(d)),d},wl={name:"Teleport",__isTeleport:!0,process(i,s,d,m,A,C,x,V,M,J){var{mc:Q,pc:ee,pbc:Y,o:{insert:me,querySelector:Te,createText:dt,createComment:qe}}=J,Pt=ts(s.props),{shapeFlag:Mt,children:oe,dynamicChildren:he}=s;if(Tr&&(M=!1,he=null),i==null){var _e=s.el=qe("teleport start",d),He=s.anchor=qe("teleport end",d);me(_e,d,m),me(He,d,m);var at=s.target=_c(s.props,Te),tt=s.targetAnchor=dt("",d);at?(me(tt,at),x==="svg"||Sl(at)?x="svg":(x==="mathml"||Ts(at))&&(x="mathml")):Pt||ue("Invalid Teleport target on mount:",at,"(".concat(typeof at,")"));var bt=(nt,We)=>{Mt&16&&Q(oe,nt,We,A,C,x,V,M)};Pt?bt(d,He):at&&bt(at,tt)}else{s.el=i.el;var Ye=s.anchor=i.anchor,L=s.target=i.target,G=s.targetAnchor=i.targetAnchor,te=ts(i.props),be=te?d:L,Se=te?Ye:G;if(x==="svg"||Sl(L)?x="svg":(x==="mathml"||Ts(L))&&(x="mathml"),he?(Y(i.dynamicChildren,he,be,A,C,x,V),jl(i,s,!0)):M||ee(i,s,be,Se,A,C,x,V,!1),Pt)te?s.props&&i.props&&s.props.to!==i.props.to&&(s.props.to=i.props.to):Wl(s,d,Ye,J,1);else if((s.props&&s.props.to)!==(i.props&&i.props.to)){var Ce=s.target=_c(s.props,Te);Ce?Wl(s,Ce,null,J,0):ue("Invalid Teleport target on update:",L,"(".concat(typeof L,")"))}else te&&Wl(s,L,G,J,1)}gr(s)},remove(i,s,d,m,A,C){var{um:x,o:{remove:V}}=A,{shapeFlag:M,children:J,anchor:Q,targetAnchor:ee,target:Y,props:me}=i;if(Y&&V(ee),C&&V(Q),M&16)for(var Te=C||!ts(me),dt=0;dt<J.length;dt++){var qe=J[dt];x(qe,s,d,Te,!!qe.dynamicChildren)}},move:Wl,hydrate:Ra};function Wl(i,s,d,m){var{o:{insert:A},m:C}=m,x=arguments.length>4&&arguments[4]!==void 0?arguments[4]:2;x===0&&A(i.targetAnchor,s,d);var{el:V,anchor:M,shapeFlag:J,children:Q,props:ee}=i,Y=x===2;if(Y&&A(V,s,d),(!Y||ts(ee))&&J&16)for(var me=0;me<Q.length;me++)C(Q[me],s,d,2);Y&&A(M,s,d)}function Ra(i,s,d,m,A,C,x,V){var{o:{nextSibling:M,parentNode:J,querySelector:Q}}=x,ee=s.target=_c(s.props,Q);if(ee){var Y=ee._lpa||ee.firstChild;if(s.shapeFlag&16)if(ts(s.props))s.anchor=V(M(i),s,J(i),d,m,A,C),s.targetAnchor=Y;else{s.anchor=M(i);for(var me=Y;me;)if(me=M(me),me&&me.nodeType===8&&me.data==="teleport anchor"){s.targetAnchor=me,ee._lpa=s.targetAnchor&&M(s.targetAnchor);break}V(Y,s,ee,d,m,A,C)}gr(s)}return s.anchor&&M(s.anchor)}var Zs=wl;function gr(i){var s=i.ctx;if(s&&s.ut){for(var d=i.children[0].el;d&&d!==i.targetAnchor;)d.nodeType===1&&d.setAttribute("data-v-owner",s.uid),d=d.nextSibling;s.ut()}}var Bn=Symbol.for("v-fgt"),Ln=Symbol.for("v-txt"),Fn=Symbol.for("v-cmt"),$i=Symbol.for("v-stc"),zr=[],Qr=null;function Xs(){var i=arguments.length>0&&arguments[0]!==void 0?arguments[0]:!1;zr.push(Qr=i?null:[])}function la(){zr.pop(),Qr=zr[zr.length-1]||null}var ca=1;function ns(i){ca+=i}function Ni(i){return i.dynamicChildren=ca>0?Qr||h.EMPTY_ARR:null,la(),ca>0&&Qr&&Qr.push(i),i}function Oo(i,s,d,m,A,C){return Ni(Xn(i,s,d,m,A,C,!0))}function To(i,s,d,m,A){return Ni(sr(i,s,d,m,A,!0))}function Wr(i){return i?i.__v_isVNode===!0:!1}function oo(i,s){return s.shapeFlag&6&&Pr.has(s.type)?(i.shapeFlag&=~256,s.shapeFlag&=~512,!1):i.type===s.type&&i.key===s.key}var Gl;function Iu(i){Gl=i}var Cl=function(){for(var i=arguments.length,s=new Array(i),d=0;d<i;d++)s[d]=arguments[d];return ql(...Gl?Gl(s,An):s)},Qs="__vInternal",Al=i=>{var{key:s}=i;return s!=null?s:null},Ps=i=>{var{ref:s,ref_key:d,ref_for:m}=i;return typeof s=="number"&&(s=""+s),s!=null?h.isString(s)||v.isRef(s)||h.isFunction(s)?{i:An,r:s,k:d,f:!!m}:s:null};function Xn(i){var s=arguments.length>1&&arguments[1]!==void 0?arguments[1]:null,d=arguments.length>2&&arguments[2]!==void 0?arguments[2]:null,m=arguments.length>3&&arguments[3]!==void 0?arguments[3]:0,A=arguments.length>4&&arguments[4]!==void 0?arguments[4]:null,C=arguments.length>5&&arguments[5]!==void 0?arguments[5]:i===Bn?0:1,x=arguments.length>6&&arguments[6]!==void 0?arguments[6]:!1,V=arguments.length>7&&arguments[7]!==void 0?arguments[7]:!1,M={__v_isVNode:!0,__v_skip:!0,type:i,props:s,key:s&&Al(s),ref:s&&Ps(s),scopeId:Jr,slotScopeIds:null,children:d,component:null,suspense:null,ssContent:null,ssFallback:null,dirs:null,transition:null,el:null,anchor:null,target:null,targetAnchor:null,staticCount:0,shapeFlag:C,patchFlag:m,dynamicProps:A,dynamicChildren:null,appContext:null,ctx:An};return V?(Jl(M,d),C&128&&i.normalize(M)):d&&(M.shapeFlag|=h.isString(d)?8:16),M.key!==M.key&&ue("VNode created with invalid key (NaN). VNode type:",M.type),ca>0&&!x&&Qr&&(M.patchFlag>0||C&6)&&M.patchFlag!==32&&Qr.push(M),M}var sr=Cl;function ql(i){var s=arguments.length>1&&arguments[1]!==void 0?arguments[1]:null,d=arguments.length>2&&arguments[2]!==void 0?arguments[2]:null,m=arguments.length>3&&arguments[3]!==void 0?arguments[3]:0,A=arguments.length>4&&arguments[4]!==void 0?arguments[4]:null,C=arguments.length>5&&arguments[5]!==void 0?arguments[5]:!1;if((!i||i===rn)&&(i||ue("Invalid vnode type when creating vnode: ".concat(i,".")),i=Fn),Wr(i)){var x=ji(i,s,!0);return d&&Jl(x,d),ca>0&&!C&&Qr&&(x.shapeFlag&6?Qr[Qr.indexOf(i)]=x:Qr.push(x)),x.patchFlag|=-2,x}if(Cc(i)&&(i=i.__vccOpts),s){s=Hi(s);var{class:V,style:M}=s;V&&!h.isString(V)&&(s.class=h.normalizeClass(V)),h.isObject(M)&&(v.isProxy(M)&&!h.isArray(M)&&(M=h.extend({},M)),s.style=h.normalizeStyle(M))}var J=h.isString(i)?1:ea(i)?128:Os(i)?64:h.isObject(i)?4:h.isFunction(i)?2:0;return J&4&&v.isProxy(i)&&(i=v.toRaw(i),ue("Vue received a Component that was made a reactive object. This can lead to unnecessary performance overhead and should be avoided by marking the component with `markRaw` or using `shallowRef` instead of `ref`.",`
Component that was made reactive: `,i)),Xn(i,s,d,m,A,J,C,!0)}function Hi(i){return i?v.isProxy(i)||Qs in i?h.extend({},i):i:null}function ji(i,s){var d=arguments.length>2&&arguments[2]!==void 0?arguments[2]:!1,{props:m,ref:A,patchFlag:C,children:x}=i,V=s?ki(m||{},s):m,M={__v_isVNode:!0,__v_skip:!0,type:i.type,props:V,key:V&&Al(V),ref:s&&s.ref?d&&A?h.isArray(A)?A.concat(Ps(s)):[A,Ps(s)]:Ps(s):A,scopeId:i.scopeId,slotScopeIds:i.slotScopeIds,children:C===-1&&h.isArray(x)?x.map(Yl):x,target:i.target,targetAnchor:i.targetAnchor,staticCount:i.staticCount,shapeFlag:i.shapeFlag,patchFlag:s&&i.type!==Bn?C===-1?16:C|16:C,dynamicProps:i.dynamicProps,dynamicChildren:i.dynamicChildren,appContext:i.appContext,dirs:i.dirs,transition:i.transition,component:i.component,suspense:i.suspense,ssContent:i.ssContent&&ji(i.ssContent),ssFallback:i.ssFallback&&ji(i.ssFallback),el:i.el,anchor:i.anchor,ctx:i.ctx,ce:i.ce};return M}function Yl(i){var s=ji(i);return h.isArray(i.children)&&(s.children=i.children.map(Yl)),s}function bc(){var i=arguments.length>0&&arguments[0]!==void 0?arguments[0]:" ",s=arguments.length>1&&arguments[1]!==void 0?arguments[1]:0;return sr(Ln,null,i,s)}function ku(i,s){var d=sr($i,null,i);return d.staticCount=s,d}function Ii(){var i=arguments.length>0&&arguments[0]!==void 0?arguments[0]:"",s=arguments.length>1&&arguments[1]!==void 0?arguments[1]:!1;return s?(Xs(),To(Fn,null,i)):sr(Fn,null,i)}function Ir(i){return i==null||typeof i=="boolean"?sr(Fn):h.isArray(i)?sr(Bn,null,i.slice()):typeof i=="object"?Wo(i):sr(Ln,null,String(i))}function Wo(i){return i.el===null&&i.patchFlag!==-1||i.memo?i:ji(i)}function Jl(i,s){var d=0,{shapeFlag:m}=i;if(s==null)s=null;else if(h.isArray(s))d=16;else if(typeof s=="object")if(m&(1|64)){var A=s.default;A&&(A._c&&(A._d=!1),Jl(i,A()),A._c&&(A._d=!0));return}else{d=32;var C=s._;!C&&!(Qs in s)?s._ctx=An:C===3&&An&&(An.slots._===1?s._=1:(s._=2,i.patchFlag|=1024))}else h.isFunction(s)?(s={default:s,_ctx:An},d=32):(s=String(s),m&64?(d=16,s=[bc(s)]):d=8);i.children=s,i.shapeFlag|=d}function ki(){for(var i={},s=0;s<arguments.length;s++){var d=s<0||arguments.length<=s?void 0:arguments[s];for(var m in d)if(m==="class")i.class!==d.class&&(i.class=h.normalizeClass([i.class,d.class]));else if(m==="style")i.style=h.normalizeStyle([i.style,d.style]);else if(h.isOn(m)){var A=i[m],C=d[m];C&&A!==C&&!(h.isArray(A)&&A.includes(C))&&(i[m]=A?[].concat(A,C):C)}else m!==""&&(i[m]=d[m])}return i}function zi(i,s,d){var m=arguments.length>3&&arguments[3]!==void 0?arguments[3]:null;sn(i,s,7,[d,m])}var xu=ys(),yc=0;function pr(i,s,d){var m=i.type,A=(s?s.appContext:i.appContext)||xu,C={uid:yc++,vnode:i,type:m,parent:s,appContext:A,root:null,next:null,subTree:null,effect:null,update:null,scope:new v.EffectScope(!0),render:null,proxy:null,exposed:null,exposeProxy:null,withProxy:null,provides:s?s.provides:Object.create(A.provides),accessCache:null,renderCache:[],components:null,directives:null,propsOptions:_l(m,A),emitsOptions:mo(m,A),emit:null,emitted:null,propsDefaults:h.EMPTY_OBJ,inheritAttrs:m.inheritAttrs,ctx:h.EMPTY_OBJ,data:h.EMPTY_OBJ,props:h.EMPTY_OBJ,attrs:h.EMPTY_OBJ,slots:h.EMPTY_OBJ,refs:h.EMPTY_OBJ,setupState:h.EMPTY_OBJ,setupContext:null,attrsProxy:null,slotsProxy:null,suspense:d,suspenseId:d?d.pendingId:0,asyncDep:null,asyncResolved:!1,isMounted:!1,isUnmounted:!1,isDeactivated:!1,bc:null,c:null,bm:null,m:null,bu:null,u:null,um:null,bum:null,da:null,a:null,rtg:null,rtc:null,ec:null,sp:null};return C.ctx=Gc(C),C.root=s?s.root:C,C.emit=Ko.bind(null,C),i.ce&&i.ce(C),C}var Pn=null,ao=()=>Pn||An,Ns,el;{var ui=h.getGlobalThis(),Gr=(i,s)=>{var d;return(d=ui[i])||(d=ui[i]=[]),d.push(s),m=>{d.length>1?d.forEach(A=>A(m)):d[0](m)}};Ns=Gr("__VUE_INSTANCE_SETTERS__",i=>Pn=i),el=Gr("__VUE_SSR_SETTERS__",i=>y.isInSSRComponentSetup=i)}var ua=i=>{var s=Pn;return Ns(i),i.scope.on(),()=>{i.scope.off(),Ns(s)}},fa=()=>{Pn&&Pn.scope.off(),Ns(null)},Ec=h.makeMap("slot,component");function da(i,s){var{isNativeTag:d}=s;(Ec(i)||d(i))&&ue("Do not use built-in or reserved HTML elements as component id: "+i)}function Sc(i){return i.vnode.shapeFlag&4}y.isInSSRComponentSetup=!1;function Yc(i){var s=arguments.length>1&&arguments[1]!==void 0?arguments[1]:!1;s&&el(s);var{props:d,children:m}=i.vnode,A=Sc(i);Za(i,d,A,s),Ge(i,m);var C=A?pa(i,s):void 0;return s&&el(!1),C}function pa(i,s){var d,m=i.type;{if(m.name&&da(m.name,i.appContext.config),m.components)for(var A=Object.keys(m.components),C=0;C<A.length;C++)da(A[C],i.appContext.config);if(m.directives)for(var x=Object.keys(m.directives),V=0;V<x.length;V++)gs(x[V]);m.compilerOptions&&wc()&&ue('"compilerOptions" is only supported when using a build of Vue that includes the runtime compiler. Since you are using a runtime-only build, the options should be passed via your build tool config instead.')}i.accessCache=Object.create(null),i.proxy=v.markRaw(new Proxy(i.ctx,vs)),S(i);var{setup:M}=m;if(M){var J=i.setupContext=M.length>1?is(i):null,Q=ua(i);v.pauseTracking();var ee=Jn(M,i,0,[v.shallowReadonly(i.props),J]);if(v.resetTracking(),Q(),h.isPromise(ee)){if(ee.then(fa,fa),s)return ee.then(me=>{rs(i,me,s)}).catch(me=>{In(me,i,0)});if(i.asyncDep=ee,!i.suspense){var Y=(d=m.name)!=null?d:"Anonymous";ue("Component <".concat(Y,">: setup function returned a promise, but no <Suspense> boundary was found in the parent component tree. A component with async setup() must be nested in a <Suspense> in order to be rendered."))}}else rs(i,ee,s)}else Zl(i,s)}function rs(i,s,d){h.isFunction(s)?i.type.__ssrInlineRender?i.ssrRender=s:i.render=s:h.isObject(s)?(Wr(s)&&ue("setup() should not return VNodes directly - return a render function instead."),i.devtoolsRawSetupState=s,i.setupState=v.proxyRefs(s),F(i)):s!==void 0&&ue("setup() should return an object. Received: ".concat(s===null?"null":typeof s)),Zl(i,d)}var Ei,Kl;function so(i){Ei=i,Kl=s=>{s.render._rc&&(s.withProxy=new Proxy(s.ctx,Dl))}}var wc=()=>!Ei;function Zl(i,s,d){var m=i.type;if(!i.render){if(!s&&Ei&&!m.render){var A=m.template||On(i).template;if(A){ci(i,"compile");var{isCustomElement:C,compilerOptions:x}=i.appContext.config,{delimiters:V,compilerOptions:M}=m,J=h.extend(h.extend({isCustomElement:C,delimiters:V},x),M);m.render=Ei(A,J),Ao(i,"compile")}}i.render=m.render||h.NOOP,Kl&&Kl(i)}{var Q=ua(i);v.pauseTracking();try{At(i)}finally{v.resetTracking(),Q()}}!m.render&&i.render===h.NOOP&&!s&&(!Ei&&m.template?ue('Component provided template option but runtime compilation is not supported in this build of Vue. Configure your bundler to alias "vue" to "vue/dist/vue.esm-bundler.js".'):ue("Component is missing template or render function."))}function Ru(i){return i.attrsProxy||(i.attrsProxy=new Proxy(i.attrs,{get(s,d){return tn(),v.track(i,"get","$attrs"),s[d]},set(){return ue("setupContext.attrs is readonly."),!1},deleteProperty(){return ue("setupContext.attrs is readonly."),!1}}))}function Jc(i){return i.slotsProxy||(i.slotsProxy=new Proxy(i.slots,{get(s,d){return v.track(i,"get","$slots"),s[d]}}))}function is(i){var s=d=>{if(i.exposed&&ue("expose() should be called only once per setup()."),d!=null){var m=typeof d;m==="object"&&(h.isArray(d)?m="array":v.isRef(d)&&(m="ref")),m!=="object"&&ue("expose() should be passed a plain object, received ".concat(m,"."))}i.exposed=d||{}};return Object.freeze({get attrs(){return Ru(i)},get slots(){return Jc(i)},get emit(){return function(d){for(var m=arguments.length,A=new Array(m>1?m-1:0),C=1;C<m;C++)A[C-1]=arguments[C];return i.emit(d,...A)}},expose:s})}function Xl(i){if(i.exposed)return i.exposeProxy||(i.exposeProxy=new Proxy(v.proxyRefs(v.markRaw(i.exposed)),{get(s,d){if(d in s)return s[d];if(d in ro)return ro[d](i);if(d==="$scope")return i.ctx.$scope},has(s,d){return d in s||d in ro||d==="$scope"}}))}var Mu=/(?:^|[-_])(\w)/g,Ol=i=>i.replace(Mu,s=>s.toUpperCase()).replace(/[-_]/g,"");function os(i){var s=arguments.length>1&&arguments[1]!==void 0?arguments[1]:!0;return h.isFunction(i)?i.displayName||i.name:i.name||s&&i.__name}function as(i,s){var d=arguments.length>2&&arguments[2]!==void 0?arguments[2]:!1,m=os(s);if(!m&&s.__file){var A=s.__file.match(/([^/\\]+)\.\w+$/);A&&(m=A[1])}if(!m&&i&&i.parent){var C=x=>{for(var V in x)if(x[V]===s)return V};m=C(i.components||i.parent.type.components)||C(i.appContext.components)}return m?Ol(m):d?"App":"Anonymous"}function Cc(i){return h.isFunction(i)&&"__vccOpts"in i}var Kc=(i,s)=>{var d=v.computed(i,s,y.isInSSRComponentSetup);{var m=ao();m&&m.appContext.config.warnRecursiveComputed&&(d._warnRecursive=!0)}return d};function Bu(i,s){var d=arguments.length>2&&arguments[2]!==void 0?arguments[2]:h.EMPTY_OBJ,m=ao();if(!m)return ue("useModel() called without active instance."),v.ref();if(!m.propsOptions[0][s])return ue('useModel() called with prop "'.concat(s,'" which is not declared.')),v.ref();var A=h.camelize(s),C=h.hyphenate(s),x=v.customRef((M,J)=>{var Q;return st(()=>{var ee=i[s];h.hasChanged(Q,ee)&&(Q=ee,J())}),{get(){return M(),d.get?d.get(Q):Q},set(ee){var Y=m.vnode.props;!(Y&&(s in Y||A in Y||C in Y)&&("onUpdate:".concat(s)in Y||"onUpdate:".concat(A)in Y||"onUpdate:".concat(C)in Y))&&h.hasChanged(ee,Q)&&(Q=ee,J()),m.emit("update:".concat(s),d.set?d.set(ee):ee)}}}),V=s==="modelValue"?"modelModifiers":"".concat(s,"Modifiers");return x[Symbol.iterator]=()=>{var M=0;return{next(){return M<2?{value:M++?i[V]||{}:x,done:!1}:{done:!0}}}},x}function Zc(i,s,d){var m=arguments.length;return m===2?h.isObject(s)&&!h.isArray(s)?Wr(s)?sr(i,null,[s]):sr(i,s):sr(i,null,s):(m>3?d=Array.prototype.slice.call(arguments,2):m===3&&Wr(d)&&(d=[d]),sr(i,s,d))}function Lu(){if(typeof window=="undefined")return;var i={style:"color:#3ba776"},s={style:"color:#1677ff"},d={style:"color:#f5222d"},m={style:"color:#eb2f96"},A={header(ee){return h.isObject(ee)?ee.__isVue?["div",i,"VueInstance"]:v.isRef(ee)?["div",{},["span",i,Q(ee)],"<",V(ee.value),">"]:v.isReactive(ee)?["div",{},["span",i,v.isShallow(ee)?"ShallowReactive":"Reactive"],"<",V(ee),">".concat(v.isReadonly(ee)?" (readonly)":"")]:v.isReadonly(ee)?["div",{},["span",i,v.isShallow(ee)?"ShallowReadonly":"Readonly"],"<",V(ee),">"]:null:null},hasBody(ee){return ee&&ee.__isVue},body(ee){if(ee&&ee.__isVue)return["div",{},...C(ee.$)]}};function C(ee){var Y=[];ee.type.props&&ee.props&&Y.push(x("props",v.toRaw(ee.props))),ee.setupState!==h.EMPTY_OBJ&&Y.push(x("setup",ee.setupState)),ee.data!==h.EMPTY_OBJ&&Y.push(x("data",v.toRaw(ee.data)));var me=M(ee,"computed");me&&Y.push(x("computed",me));var Te=M(ee,"inject");return Te&&Y.push(x("injected",Te)),Y.push(["div",{},["span",{style:m.style+";opacity:0.66"},"$ (internal): "],["object",{object:ee}]]),Y}function x(ee,Y){return Y=h.extend({},Y),Object.keys(Y).length?["div",{style:"line-height:1.25em;margin-bottom:0.6em"},["div",{style:"color:#476582"},ee],["div",{style:"padding-left:1.25em"},...Object.keys(Y).map(me=>["div",{},["span",m,me+": "],V(Y[me],!1)])]]:["span",{}]}function V(ee){var Y=arguments.length>1&&arguments[1]!==void 0?arguments[1]:!0;return typeof ee=="number"?["span",s,ee]:typeof ee=="string"?["span",d,JSON.stringify(ee)]:typeof ee=="boolean"?["span",m,ee]:h.isObject(ee)?["object",{object:Y?v.toRaw(ee):ee}]:["span",d,String(ee)]}function M(ee,Y){var me=ee.type;if(!h.isFunction(me)){var Te={};for(var dt in ee.ctx)J(me,dt,Y)&&(Te[dt]=ee.ctx[dt]);return Te}}function J(ee,Y,me){var Te=ee[me];if(h.isArray(Te)&&Te.includes(Y)||h.isObject(Te)&&Y in Te||ee.extends&&J(ee.extends,Y,me)||ee.mixins&&ee.mixins.some(dt=>J(dt,Y,me)))return!0}function Q(ee){return v.isShallow(ee)?"ShallowRef":ee.effect?"ComputedRef":"Ref"}window.devtoolsFormatters?window.devtoolsFormatters.push(A):window.devtoolsFormatters=[A]}function Ql(i,s,d,m){var A=d[m];if(A&&ec(A,i))return A;var C=s();return C.memo=i.slice(),d[m]=C}function ec(i,s){var d=i.memo;if(d.length!=s.length)return!1;for(var m=0;m<d.length;m++)if(h.hasChanged(d[m],s[m]))return!1;return ca>0&&Qr&&Qr.push(i),!0}var ss="3.4.21",ls=ue,Fu=Br,yn=Cn,cs=Yo,Go={createComponentInstance:pr,setupComponent:Yc,renderComponentRoot:vo,setCurrentRenderingInstance:Dn,isVNode:Wr,normalizeVNode:Ir},Du=Go,tc=null,Ac=null,nc=null;function ha(i,s){return i==="input"?new k.UniInputElement(i,s):i==="textarea"?new k.UniTextAreaElement(i,s):new k.UniElement(i,s)}function Is(i,s){return new k.UniTextNode(i,s)}function ga(i,s){return new k.UniCommentNode(i,s)}var tl,kr={insert:(i,s,d)=>{s.insertBefore(i,d||null)},remove:i=>{var s=i.parentNode;s&&s.removeChild(i)},createElement:(i,s)=>ha(i,s),createText:(i,s)=>Is(i,s),createComment:(i,s)=>ga(i,s),setText:(i,s)=>{i.nodeValue=s},setElementText:(i,s)=>{i.textContent=s},parentNode:i=>i.parentNode,nextSibling:i=>i.nextSibling,setScopeId(i,s){i.setAttribute(s,"")},cloneNode(i){var s=i.cloneNode(!0);return"_value"in i&&(s._value=i._value),s},insertStaticContent(i,s,d){var m=tl||(tl=ha("div"));m.innerHTML=i;for(var A=m.firstChild,C=A,x=C;C;)x=C,kr.insert(C,s,d),C=m.firstChild;return[A,x]}};function nl(i,s){s==null&&(s=""),i.setAttribute("class",s)}function ks(i,s,d){if(!d)i.removeAttribute("style");else if(h.isString(d))s!==d&&i.setAttribute("style",d);else{var m={},A=s&&!h.isString(s);if(A){for(var C in s)d[C]==null&&(m[C]="");for(var x in d){var V=d[x];V!==s[x]&&(m[x]=V)}}else for(var M in d)m[M]=d[M];Object.keys(m).length&&i.setAttribute("style",m)}}function rl(i,s,d){d==null?i.removeAttribute(s):i.setAttribute(s,d)}function Xc(i,s,d,m){i.addEventListener(s,d,m)}function Ma(i,s,d,m){i.removeEventListener(s,d,m)}function Qc(i,s,d,m){var A=arguments.length>4&&arguments[4]!==void 0?arguments[4]:null,C=i._vei||(i._vei={}),x=C[s];if(m&&x)x.value=m;else{var[V,M]=Ba(s);if(m){var J=C[s]=fi(m,A);Xc(i,V,J,M)}else x&&(Ma(i,V,x,M),C[s]=void 0)}}var ma=/(?:Once|Passive|Capture)$/;function Ba(i){var s;if(ma.test(i)){s={};for(var d;d=i.match(ma);)i=i.slice(0,i.length-d[0].length),s[d[0].toLowerCase()]=!0}return[h.hyphenate(i.slice(2)),s]}function fi(i,s){var d=A=>{sn(d.value,s,5,[A])};d.value=i;var m=new Set;return h.isArray(d.value)?d.value.forEach(A=>{A.modifiers&&A.modifiers.forEach(C=>{m.add(C)})}):(d.value.modifiers&&d.value.modifiers.forEach(A=>{m.add(A)}),En(d,s)),d.modifiers=[...m],d}function En(i,s){if(!!s){var{$wxsModules:d}=s;if(!!d){var m=i.value.toString();!d.find(A=>m.indexOf("."+A+".")>-1)||(i.wxsEvent=i.value())}}}var il=(i,s,d,m,A,C,x,V,M)=>{switch(s){case"class":nl(i,m);break;case"style":ks(i,d,m);break;default:if(h.isOn(s))h.isModelListener(s)||Qc(i,s,d,m,x);else{if(h.isObject(m)){var J=d===m;if(m=k.JSON_PROTOCOL+JSON.stringify(m),J&&i.getAttribute(s)===m)return}else if(d===m)return;rl(i,s,m)}break}};function eu(){var i=arguments.length>0&&arguments[0]!==void 0?arguments[0]:"$style";{var s=ao();if(!s)return ls("useCssModule must be called inside setup()"),h.EMPTY_OBJ;var d=s.type.__cssModules;if(!d)return ls("Current instance does not have CSS modules injected."),h.EMPTY_OBJ;var m=d[i];return m||(ls('Current instance does not have CSS module named "'.concat(i,'".')),h.EMPTY_OBJ)}}function tu(i){var s=ao();if(!s){ls("useCssVars is called without current active component instance.");return}var d=()=>La(s.subTree,i(s.proxy));no(()=>mt(d,{flush:"post"})),Uo(d)}function La(i,s){if(i.shapeFlag&128){var d=i.suspense;i=d.activeBranch,d.pendingBranch&&!d.isHydrating&&d.effects.push(()=>{La(d.activeBranch,s)})}for(;i.component;)i=i.component.subTree;if(i.shapeFlag&1&&i.el)nu(i.el,s);else if(i.type===Bn)i.children.forEach(C=>La(C,s));else if(i.type===$i)for(var{el:m,anchor:A}=i;m&&(nu(m,s),m!==A);)m=m.nextSibling}function nu(i,s){if(i.nodeType===1)for(var d in s)i.setAttribute("--".concat(d),s[d])}var va="transition",_a="animation",Oc=(i,s)=>{var{slots:d}=s;return Zc(ft,Tc(i),d)};Oc.displayName="Transition";var ru={name:String,type:String,css:{type:Boolean,default:!0},duration:[String,Number,Object],enterFromClass:String,enterActiveClass:String,enterToClass:String,appearFromClass:String,appearActiveClass:String,appearToClass:String,leaveFromClass:String,leaveActiveClass:String,leaveToClass:String},ba=Oc.props=h.extend({},ft.props,ru),Po=function(i){var s=arguments.length>1&&arguments[1]!==void 0?arguments[1]:[];h.isArray(i)?i.forEach(d=>d(...s)):i&&i(...s)},iu=i=>i?h.isArray(i)?i.some(s=>s.length>1):i.length>1:!1;function Tc(i){var s={};for(var d in i)d in ru||(s[d]=i[d]);if(i.css===!1)return s;var{name:m="v",type:A,duration:C,enterFromClass:x="".concat(m,"-enter-from"),enterActiveClass:V="".concat(m,"-enter-active"),enterToClass:M="".concat(m,"-enter-to"),appearFromClass:J=x,appearActiveClass:Q=V,appearToClass:ee=M,leaveFromClass:Y="".concat(m,"-leave-from"),leaveActiveClass:me="".concat(m,"-leave-active"),leaveToClass:Te="".concat(m,"-leave-to")}=i,dt=ou(C),qe=dt&&dt[0],Pt=dt&&dt[1],{onBeforeEnter:Mt,onEnter:oe,onEnterCancelled:he,onLeave:_e,onLeaveCancelled:He,onBeforeAppear:at=Mt,onAppear:tt=oe,onAppearCancelled:bt=he}=s,Ye=(te,be,Se)=>{xs(te,be?ee:M),xs(te,be?Q:V),Se&&Se()},L=(te,be)=>{xs(te,Te),xs(te,me),be&&be()},G=te=>(be,Se)=>{var Ce=te?tt:oe,nt=()=>Ye(be,te,Se);Po(Ce,[be,nt]),au(()=>{xs(be,te?J:x),ya(be,te?ee:M),iu(Ce)||su(be,A,qe,nt)})};return h.extend(s,{onBeforeEnter(te){Po(Mt,[te]),ya(te,x),ya(te,V)},onBeforeAppear(te){Po(at,[te]),ya(te,J),ya(te,Q)},onEnter:G(!1),onAppear:G(!0),onLeave(te,be){var Se=()=>L(te,be);ya(te,Y),Nc(),ya(te,me),au(()=>{xs(te,Y),ya(te,Te),iu(_e)||su(te,A,Pt,Se)}),Po(_e,[te,Se])},onEnterCancelled(te){Ye(te,!1),Po(he,[te])},onAppearCancelled(te){Ye(te,!0),Po(bt,[te])},onLeaveCancelled(te){L(te),Po(He,[te])}})}function ou(i){if(i==null)return null;if(h.isObject(i))return[rc(i.enter),rc(i.leave)];var s=rc(i);return[s,s]}function rc(i){var s=h.toNumber(i);return Uu(s),s}function Uu(i){typeof i!="number"?ls("<transition> explicit duration is not a valid number - got ".concat(JSON.stringify(i),".")):isNaN(i)&&ls("<transition> explicit duration is NaN - the duration expression might be incorrect.")}function ya(i,s){s.split(/\s+/).forEach(d=>d&&i.classList.add(d)),(i._vtc||(i._vtc=new Set)).add(s)}function xs(i,s){s.split(/\s+/).forEach(m=>m&&i.classList.remove(m));var{_vtc:d}=i;d&&(d.delete(s),d.size||(i._vtc=void 0))}function au(i){requestAnimationFrame(()=>{requestAnimationFrame(i)})}var Vu=0;function su(i,s,d,m){var A=i._endId=++Vu,C=()=>{A===i._endId&&m()};if(d)return setTimeout(C,d);var{type:x,timeout:V,propCount:M}=Ea(i,s);if(!x)return m();var J=x+"end",Q=0,ee=()=>{i.removeEventListener(J,Y),C()},Y=me=>{me.target===i&&++Q>=M&&ee()};setTimeout(()=>{Q<M&&ee()},V+1),i.addEventListener(J,Y)}function Ea(i,s){var d=window.getComputedStyle(i),m=Te=>(d[Te]||"").split(", "),A=m(va+"Delay"),C=m(va+"Duration"),x=Tl(A,C),V=m(_a+"Delay"),M=m(_a+"Duration"),J=Tl(V,M),Q=null,ee=0,Y=0;s===va?x>0&&(Q=va,ee=x,Y=C.length):s===_a?J>0&&(Q=_a,ee=J,Y=M.length):(ee=Math.max(x,J),Q=ee>0?x>J?va:_a:null,Y=Q?Q===va?C.length:M.length:0);var me=Q===va&&/\b(transform|all)(,|$)/.test(d[va+"Property"]);return{type:Q,timeout:ee,propCount:Y,hasTransform:me}}function Tl(i,s){for(;i.length<s.length;)i=i.concat(i);return Math.max(...s.map((d,m)=>Pc(d)+Pc(i[m])))}function Pc(i){return Number(i.slice(0,-1).replace(",","."))*1e3}function Nc(){return document.body.offsetHeight}var ol=new WeakMap,Fa=new WeakMap,ic={name:"TransitionGroup",props:h.extend({},ba,{tag:String,moveClass:String}),setup(i,s){var{slots:d}=s,m=ao(),A=le(),C,x;return Uo(()=>{if(!!C.length){var V=i.moveClass||"".concat(i.name||"v","-move");if(!!g(C[0].el,m.vnode.el,V)){C.forEach(Pl),C.forEach(o);var M=C.filter(c);Nc(),M.forEach(J=>{var Q=J.el,ee=Q.style;ya(Q,V),ee.transform=ee.webkitTransform=ee.transitionDuration="";var Y=Q._moveCb=me=>{me&&me.target!==Q||(!me||/transform$/.test(me.propertyName))&&(Q.removeEventListener("transitionend",Y),Q._moveCb=null,xs(Q,V))};Q.addEventListener("transitionend",Y)})}}}),()=>{var V=v.toRaw(i),M=Tc(V),J=V.tag||Bn;C=x,x=d.default?to(d.default()):[];for(var Q=0;Q<x.length;Q++){var ee=x[Q];ee.key!=null?dr(ee,Kn(ee,M,A,m)):ls("<TransitionGroup> children must be keyed.")}if(C)for(var Y=0;Y<C.length;Y++){var me=C[Y];dr(me,Kn(me,M,A,m)),ol.set(me,me.el.getBoundingClientRect())}return sr(J,null,x)}}},lu=i=>delete i.mode;ic.props;var cu=ic;function Pl(i){var s=i.el;s._moveCb&&s._moveCb(),s._enterCb&&s._enterCb()}function o(i){Fa.set(i,i.el.getBoundingClientRect())}function c(i){var s=ol.get(i),d=Fa.get(i),m=s.left-d.left,A=s.top-d.top;if(m||A){var C=i.el.style;return C.transform=C.webkitTransform="translate(".concat(m,"px,").concat(A,"px)"),C.transitionDuration="0s",i}}function g(i,s,d){var m=i.cloneNode();i._vtc&&i._vtc.forEach(x=>{x.split(/\s+/).forEach(V=>V&&m.classList.remove(V))}),d.split(/\s+/).forEach(x=>x&&m.classList.add(x)),m.style.display="none";var A=s.nodeType===1?s:s.parentNode;A.appendChild(m);var{hasTransform:C}=Ea(m);return A.removeChild(m),C}var E=i=>{var s=i.props["onUpdate:modelValue"];return h.isArray(s)?d=>h.invokeArrayFns(s,d):s},N={created(i,s,d){var{value:m,modifiers:{trim:A,number:C}}=s;i.value=m==null?"":m,i._assign=E(d),Xc(i,"input",x=>{var V=x.detail.value,M=i.pageNode;i.pageNode=null,i.value=V,i.pageNode=M,A?V=V.trim():C&&(V=h.toNumber(V)),i._assign(V)})},beforeUpdate(i,s,d){var{value:m}=s;i._assign=E(d);var A=m==null?"":m;i.value!==A&&(i.value=A)}},T=N,R=["ctrl","shift","alt","meta"],z={stop:i=>i.stopPropagation(),prevent:i=>i.preventDefault(),self:i=>i.target!==i.currentTarget,ctrl:i=>!i.ctrlKey,shift:i=>!i.shiftKey,alt:i=>!i.altKey,meta:i=>!i.metaKey,left:i=>"button"in i&&i.button!==0,middle:i=>"button"in i&&i.button!==1,right:i=>"button"in i&&i.button!==2,exact:(i,s)=>R.some(d=>i["".concat(d,"Key")]&&!s.includes(d))},$=(i,s)=>{var d=function(m){for(var A=0;A<s.length;A++){var C=z[s[A]];if(C&&C(m,s))return}for(var x=arguments.length,V=new Array(x>1?x-1:0),M=1;M<x;M++)V[M-1]=arguments[M];return i(m,...V)};return d.modifiers=s,d},X={esc:"escape",space:" ",up:"arrow-up",left:"arrow-left",right:"arrow-right",down:"arrow-down",delete:"backspace"},ye=(i,s)=>d=>{if("key"in d){var m=h.hyphenate(d.key);if(s.some(A=>A===m||X[A]===m))return i(d)}},ce={beforeMount(i,s){var{value:d}=s;ae(i,d)},updated(i,s){var{value:d,oldValue:m}=s;!d!=!m&&ae(i,d)},beforeUnmount(i,s){var{value:d}=s;ae(i,d)}};function ae(i,s){i.setAttribute(".vShow",!!s)}var ke=h.extend({patchProp:il,forcePatchProp:k.forcePatchProp},kr),Be;function Et(){return Be||(Be=Js(ke))}var ct=function(){Et().render(...arguments)},kt=function(){var i=Et().createApp(...arguments);fe(i);var{mount:s}=i;return i.mount=d=>(h.isString(d)&&(d==="#app"&&Jo(i,ss),d=ga(d)),d&&s(d,!1,!1)),i},xt=kt;function fe(i){Object.defineProperty(i.config,"isNativeTag",{value:s=>h.isHTMLTag(s)||h.isSVGTag(s),writable:!1})}function Ie(){}function Ne(){}function Xe(i){return h.isObject(i)?k.JSON_PROTOCOL+JSON.stringify(i):i}var lt=i=>Xe(i);return Object.defineProperty(y,"camelize",{enumerable:!0,get:function(){return h.camelize}}),Object.defineProperty(y,"capitalize",{enumerable:!0,get:function(){return h.capitalize}}),Object.defineProperty(y,"normalizeClass",{enumerable:!0,get:function(){return h.normalizeClass}}),Object.defineProperty(y,"normalizeProps",{enumerable:!0,get:function(){return h.normalizeProps}}),Object.defineProperty(y,"normalizeStyle",{enumerable:!0,get:function(){return h.normalizeStyle}}),Object.defineProperty(y,"toDisplayString",{enumerable:!0,get:function(){return h.toDisplayString}}),Object.defineProperty(y,"toHandlerKey",{enumerable:!0,get:function(){return h.toHandlerKey}}),Object.defineProperty(y,"EffectScope",{enumerable:!0,get:function(){return v.EffectScope}}),Object.defineProperty(y,"ReactiveEffect",{enumerable:!0,get:function(){return v.ReactiveEffect}}),Object.defineProperty(y,"TrackOpTypes",{enumerable:!0,get:function(){return v.TrackOpTypes}}),Object.defineProperty(y,"TriggerOpTypes",{enumerable:!0,get:function(){return v.TriggerOpTypes}}),Object.defineProperty(y,"customRef",{enumerable:!0,get:function(){return v.customRef}}),Object.defineProperty(y,"effect",{enumerable:!0,get:function(){return v.effect}}),Object.defineProperty(y,"effectScope",{enumerable:!0,get:function(){return v.effectScope}}),Object.defineProperty(y,"getCurrentScope",{enumerable:!0,get:function(){return v.getCurrentScope}}),Object.defineProperty(y,"isProxy",{enumerable:!0,get:function(){return v.isProxy}}),Object.defineProperty(y,"isReactive",{enumerable:!0,get:function(){return v.isReactive}}),Object.defineProperty(y,"isReadonly",{enumerable:!0,get:function(){return v.isReadonly}}),Object.defineProperty(y,"isRef",{enumerable:!0,get:function(){return v.isRef}}),Object.defineProperty(y,"isShallow",{enumerable:!0,get:function(){return v.isShallow}}),Object.defineProperty(y,"markRaw",{enumerable:!0,get:function(){return v.markRaw}}),Object.defineProperty(y,"onScopeDispose",{enumerable:!0,get:function(){return v.onScopeDispose}}),Object.defineProperty(y,"proxyRefs",{enumerable:!0,get:function(){return v.proxyRefs}}),Object.defineProperty(y,"reactive",{enumerable:!0,get:function(){return v.reactive}}),Object.defineProperty(y,"readonly",{enumerable:!0,get:function(){return v.readonly}}),Object.defineProperty(y,"ref",{enumerable:!0,get:function(){return v.ref}}),Object.defineProperty(y,"shallowReactive",{enumerable:!0,get:function(){return v.shallowReactive}}),Object.defineProperty(y,"shallowReadonly",{enumerable:!0,get:function(){return v.shallowReadonly}}),Object.defineProperty(y,"shallowRef",{enumerable:!0,get:function(){return v.shallowRef}}),Object.defineProperty(y,"stop",{enumerable:!0,get:function(){return v.stop}}),Object.defineProperty(y,"toRaw",{enumerable:!0,get:function(){return v.toRaw}}),Object.defineProperty(y,"toRef",{enumerable:!0,get:function(){return v.toRef}}),Object.defineProperty(y,"toRefs",{enumerable:!0,get:function(){return v.toRefs}}),Object.defineProperty(y,"toValue",{enumerable:!0,get:function(){return v.toValue}}),Object.defineProperty(y,"triggerRef",{enumerable:!0,get:function(){return v.triggerRef}}),Object.defineProperty(y,"unref",{enumerable:!0,get:function(){return v.unref}}),y.BaseTransition=ft,y.BaseTransitionPropsValidators=de,y.Comment=Fn,y.DeprecationTypes=nc,y.ErrorCodes=dn,y.ErrorTypeStrings=Fu,y.Fragment=Bn,y.KeepAlive=ra,y.Static=$i,y.Suspense=Mo,y.Teleport=Zs,y.Text=Ln,y.Transition=Oc,y.TransitionGroup=cu,y.assertNumber=se,y.callWithAsyncErrorHandling=sn,y.callWithErrorHandling=Jn,y.cloneVNode=ji,y.compatUtils=Ac,y.computed=Kc,y.createApp=kt,y.createBlock=To,y.createComment=ga,y.createCommentVNode=Ii,y.createElement=ha,y.createElementBlock=Oo,y.createElementVNode=Xn,y.createHydrationRenderer=Cs,y.createPropsRestProxy=vt,y.createRenderer=Js,y.createSSRApp=xt,y.createSlots=hc,y.createStaticVNode=ku,y.createTextNode=Is,y.createTextVNode=bc,y.createVNode=sr,y.createVueApp=kt,y.defineAsyncComponent=Ia,y.defineComponent=Zn,y.defineEmits=ne,y.defineExpose=ie,y.defineModel=Me,y.defineOptions=ge,y.defineProps=H,y.defineSlots=we,y.devtools=yn,y.devtoolsInitApp=Jo,y.getCurrentInstance=ao,y.getTransitionRawChildren=to,y.guardReactiveProps=Hi,y.h=Zc,y.handleError=In,y.hasInjectionContext=Ka,y.initCustomFormatter=Lu,y.inject=oa,y.injectHook=Pi,y.isMemoSame=ec,y.isRuntimeOnly=wc,y.isVNode=Wr,y.logError=Lr,y.mergeDefaults=Rt,y.mergeModels=yt,y.mergeProps=ki,y.nextTick=cn,y.onActivated=gl,y.onBeforeActivate=Ie,y.onBeforeDeactivate=Ne,y.onBeforeMount=xa,y.onBeforeUnmount=Vo,y.onBeforeUpdate=Wa,y.onDeactivated=rr,y.onErrorCaptured=Fl,y.onMounted=no,y.onRenderTracked=ml,y.onRenderTriggered=qa,y.onServerPrefetch=ms,y.onUnmounted=Ga,y.onUpdated=Uo,y.openBlock=Xs,y.popScopeId=Dr,y.provide=Gn,y.pushScopeId=ii,y.queuePostFlushCb=nr,y.registerRuntimeCompiler=so,y.render=ct,y.renderList=Eo,y.renderSlot=vl,y.resolveComponent=Qo,y.resolveDirective=Wn,y.resolveDynamicComponent=yr,y.resolveFilter=tc,y.resolveTransitionHooks=Kn,y.setBlockTracking=ns,y.setDevtoolsHook=cs,y.setTransitionHooks=dr,y.ssrContextKey=Ze,y.ssrUtils=Du,y.toHandlers=Hs,y.transformVNodeArgs=Iu,y.useAttrs=De,y.useCssModule=eu,y.useCssVars=tu,y.useModel=Bu,y.useSSRContext=Je,y.useSlots=Ee,y.useTransitionState=le,y.vModelDynamic=T,y.vModelText=N,y.vShow=ce,y.version=ss,y.warn=ls,y.watch=$r,y.watchEffect=mt,y.watchPostEffect=et,y.watchSyncEffect=st,y.withAsyncContext=Ut,y.withCtx=xe,y.withDefaults=$e,y.withDirectives=Di,y.withKeys=ye,y.withMemo=Ql,y.withModifiers=$,y.withScopeId=Ht,y.wp=lt,y}({},p,b,a);return O.__TYPE__="vue",O}function Lv(u,a,p){let b=p.Vue,O=p.setTimeout,y=p.clearTimeout,h=p.setInterval,v=p.clearInterval,k=p.__uniConfig,Oe=p.__uniRoutes,gt=p.VueShared,Ot=p.UniShared;var ue=function(Z,se,dn){"use strict";var Br="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",Jn=function(){let e=new Uint8Array(256);for(var t=0;t<Br.length;t++)e[Br.charCodeAt(t)]=t;return e}();function sn(e){var t=new Uint8Array(e),n,r=t.length,l="";for(n=0;n<r;n+=3)l+=Br[t[n]>>2],l+=Br[(t[n]&3)<<4|t[n+1]>>4],l+=Br[(t[n+1]&15)<<2|t[n+2]>>6],l+=Br[t[n+2]&63];return r%3===2?l=l.substring(0,l.length-1)+"=":r%3===1&&(l=l.substring(0,l.length-2)+"=="),l}function In(e){var t=e.length*.75,n=e.length,r,l=0,f,_,w,D;e[e.length-1]==="="&&(t--,e[e.length-2]==="="&&t--);var I=new ArrayBuffer(t),B=new Uint8Array(I);for(r=0;r<n;r+=4)f=Jn[e.charCodeAt(r)],_=Jn[e.charCodeAt(r+1)],w=Jn[e.charCodeAt(r+2)],D=Jn[e.charCodeAt(r+3)],B[l++]=f<<2|_>>4,B[l++]=(_&15)<<4|w>>2,B[l++]=(w&3)<<6|D&63;return I}let Lr=["original","compressed"],Or=["album","camera"],er=["GET","OPTIONS","HEAD","POST","PUT","DELETE","TRACE","CONNECT","PATCH"];function pn(e,t){return!e||t.indexOf(e)===-1?t[0]:e}function en(e,t){return!Z.isArray(e)||e.length===0||e.find(n=>t.indexOf(n)===-1)?t:e}function kn(e,t){console.warn(`${e}: ${t}`)}function tr(e,t,n,r){r||(r=kn);for(let l in n){let f=jn(l,t[l],n[l],!Z.hasOwn(t,l));Z.isString(f)&&r(e,f)}}function xn(e,t,n,r){if(!n)return;if(!Z.isArray(n))return tr(e,t[0]||Object.create(null),n,r);let l=n.length,f=t.length;for(let _=0;_<l;_++){let w=n[_],D=Object.create(null);f>_&&(D[w.name]=t[_]),tr(e,D,{[w.name]:w},r)}}function jn(e,t,n,r){Z.isPlainObject(n)||(n={type:n});let{type:l,required:f,validator:_}=n;if(f&&r)return'Missing required args: "'+e+'"';if(!(t==null&&!f)){if(l!=null){let w=!1,D=Z.isArray(l)?l:[l],I=[];for(let B=0;B<D.length&&!w;B++){let{valid:ve,expectedType:Ae}=ze(t,D[B]);I.push(Ae||""),w=ve}if(!w)return ot(e,t,I)}if(_)return _(t)}}let hi=Z.makeMap("String,Number,Boolean,Function,Symbol");function ze(e,t){let n,r=Dt(t);if(hi(r)){let l=typeof e;n=l===r.toLowerCase(),!n&&l==="object"&&(n=e instanceof t)}else r==="Object"?n=Z.isObject(e):r==="Array"?n=Z.isArray(e):n=e instanceof t||Z.toRawType(e)===Dt(t);return{valid:n,expectedType:r}}function ot(e,t,n){let r=`Invalid args: type check failed for args "${e}". Expected ${n.map(Z.capitalize).join(", ")}`,l=n[0],f=Z.toRawType(t),_=cn(t,l),w=cn(t,f);return n.length===1&&nn(l)&&!an(l,f)&&(r+=` with value ${_}`),r+=`, got ${f} `,nn(f)&&(r+=`with value ${w}.`),r}function Dt(e){let t=e&&e.toString().match(/^\s*function (\w+)/);return t?t[1]:""}function cn(e,t){return t==="String"?`"${e}"`:t==="Number"?`${Number(e)}`:`${e}`}function nn(e){return["string","number","boolean"].some(n=>e.toLowerCase()===n)}function an(...e){return e.some(t=>t.toLowerCase()==="boolean")}function zn(e){return function(){try{return e.apply(e,arguments)}catch(t){console.error(t)}}}let Fr=1,nr={};function qr(e,t,n,r=!1){return nr[e]={name:t,keepAlive:r,callback:n},e}function Vr(e,t,n){if(typeof e=="number"){let r=nr[e];if(r)return r.keepAlive||delete nr[e],r.callback(t,n)}return t}function Ci(e){for(let t in nr)if(nr[t].name===e)return!0;return!1}function $a(e,t){for(let n in nr){let r=nr[n];r.callback===t&&r.name===e&&delete nr[n]}}function qo(e){St.off("api."+e)}function gi(e){St.on("api."+e,t=>{for(let n in nr){let r=nr[n];r.name===e&&r.callback(t)}})}function Tr(e,t){return qr(Fr++,e,t,!0)}let Pr="success",ur="fail",xo="complete";function Ji(e){let t={};for(let n in e){let r=e[n];Z.isFunction(r)&&(t[n]=zn(r),delete e[n])}return t}function Ki(e,t){return!e||e.indexOf(":fail")===-1?t+":ok":t+e.substring(e.indexOf(":fail"))}function ho(e,t={},{beforeAll:n,beforeSuccess:r}={}){Z.isPlainObject(t)||(t={});let{success:l,fail:f,complete:_}=Ji(t),w=Z.isFunction(l),D=Z.isFunction(f),I=Z.isFunction(_),B=Fr++;return qr(B,e,ve=>{ve=ve||{},ve.errMsg=Ki(ve.errMsg,e),Z.isFunction(n)&&n(ve),ve.errMsg===e+":ok"?(Z.isFunction(r)&&r(ve,t),w&&l(ve)):D&&f(ve),I&&_(ve)}),B}let Zi="success",Ca="fail",Mi="complete",mn={},Cn={};function Bi(e,t){return function(n){return e(n,t)||n}}function or(e,t,n){let r=!1;for(let l=0;l<e.length;l++){let f=e[l];if(r)r=Promise.resolve(Bi(f,n));else{let _=f(t,n);if(Z.isPromise(_)&&(r=Promise.resolve(_)),_===!1)return{then(){},catch(){}}}}return r||{then(l){return l(t)},catch(){}}}function mi(e,t={}){return[Zi,Ca,Mi].forEach(n=>{let r=e[n];if(!Z.isArray(r))return;let l=t[n];t[n]=function(_){or(r,_,t).then(w=>Z.isFunction(l)&&l(w)||w)}}),t}function Yo(e,t){let n=[];Z.isArray(mn.returnValue)&&n.push(...mn.returnValue);let r=Cn[e];return r&&Z.isArray(r.returnValue)&&n.push(...r.returnValue),n.forEach(l=>{t=l(t)||t}),t}function Jo(e){let t=Object.create(null);Object.keys(mn).forEach(r=>{r!=="returnValue"&&(t[r]=mn[r].slice())});let n=Cn[e];return n&&Object.keys(n).forEach(r=>{r!=="returnValue"&&(t[r]=(t[r]||[]).concat(n[r]))}),t}function vi(e,t,n,r){let l=Jo(e);return l&&Object.keys(l).length?Z.isArray(l.invoke)?or(l.invoke,n).then(_=>t(mi(Jo(e),_),...r)):t(mi(l,n),...r):t(n,...r)}function Yr(e){return!!(Z.isPlainObject(e)&&[Pr,ur,xo].find(t=>Z.isFunction(e[t])))}function Aa(e){return e}function ri(e,t){return(n={},...r)=>Yr(n)?Yo(e,vi(e,t,n,r)):Yo(e,new Promise((l,f)=>{vi(e,t,Z.extend(n,{success:l,fail:f}),r)}))}function _r(e,t){let n=e[0];if(!t||!t.formatArgs||!Z.isPlainObject(t.formatArgs)&&Z.isPlainObject(n))return;let r=t.formatArgs,l=Object.keys(r);for(let f=0;f<l.length;f++){let _=l[f],w=r[_];if(Z.isFunction(w)){let D=w(e[0][_],n);if(Z.isString(D))return D}else Z.hasOwn(n,_)||(n[_]=w)}}function go(e,t,n){let r={errMsg:t+":ok"};return Vr(e,Z.extend(n||{},r))}function Oa(e,t,n,r={}){let l=t+":fail",f="";n?n.indexOf(l)===0?f=n:f=l+" "+n:f=l,delete r.errCode;let _=Z.extend({errMsg:f},r);return Vr(e,_)}function Li(e,t,n,r){if(r&&r.beforeInvoke){let f=r.beforeInvoke(t);if(Z.isString(f))return f}let l=_r(t,r);if(l)return l}function Ai(e){if(!Z.isFunction(e))throw new Error('Invalid args: type check failed for args "callback". Expected Function')}function Ro(e,t,n){return r=>{Ai(r);let l=Li(e,[r],void 0,n);if(l)throw new Error(l);let f=!Ci(e);Tr(e,r),f&&(gi(e),t())}}function Ko(e,t,n){return r=>{Ai(r);let l=Li(e,[r],void 0,n);if(l)throw new Error(l);e=e.replace("off","on"),$a(e,r),Ci(e)||(qo(e),t())}}function mo(e){return!e||Z.isString(e)?e:e.stack?((typeof globalThis=="undefined"||!globalThis.harmonyChannel)&&console.error(e.message+`
`+e.stack),e.message):e}function hn(e,t,n,r){return l=>{let f=ho(e,l,r),_=Li(e,[l],n,r);return _?Oa(f,e,_):t(l,{resolve:w=>go(f,e,w),reject:(w,D)=>Oa(f,e,mo(w),D)})}}function An(e,t,n,r){return(...l)=>{let f=Li(e,l,n,r);if(f)throw new Error(f);return t.apply(null,l)}}function Jr(e,t,n,r){return hn(e,t,n,r)}function Dn(e,t,n){return Ro(e,t,n)}function ii(e,t,n){return Ko(e,t,n)}function Dr(e,t,n,r){return ri(e,hn(e,t,void 0,r))}function Ht(e,t,n,r){return An(e,t,void 0,r)}function xe(e,t,n,r){return ri(e,Jr(e,t,void 0,r))}let Xi="base64ToArrayBuffer",tn=[{name:"base64",type:String,required:!0}],vo="arrayBufferToBase64",oi=[{name:"arrayBuffer",type:[ArrayBuffer,Uint8Array],required:!0}],Oi=Ht(Xi,e=>In(e),tn),Zo=Ht(vo,e=>sn(e),oi);function Xo(){if(typeof __SYSTEM_INFO__!="undefined")return window.__SYSTEM_INFO__;let{resolutionWidth:e}=a.screen.getCurrentSize()||{resolutionWidth:0};return{platform:(a.os.name||"").toLowerCase(),pixelRatio:a.screen.scale,windowWidth:Math.round(e)}}let Ta=e=>e!==null&&typeof e=="object",Fi=["{","}"];class ai{constructor(){this._caches=Object.create(null)}interpolate(t,n,r=Fi){if(!n)return[t];let l=this._caches[t];return l||(l=ds(t,r),this._caches[t]=l),Qo(l,n)}}let br=/^(?:\d)+/,_o=/^(?:\w)+/;function ds(e,[t,n]){let r=[],l=0,f="";for(;l<e.length;){let _=e[l++];if(_===t){f&&r.push({type:"text",value:f}),f="";let w="";for(_=e[l++];_!==void 0&&_!==n;)w+=_,_=e[l++];let D=_===n,I=br.test(w)?"list":D&&_o.test(w)?"named":"unknown";r.push({value:w,type:I})}else f+=_}return f&&r.push({type:"text",value:f}),r}function Qo(e,t){let n=[],r=0,l=Array.isArray(t)?"list":Ta(t)?"named":"unknown";if(l==="unknown")return n;for(;r<e.length;){let f=e[r];switch(f.type){case"text":n.push(f.value);break;case"list":n.push(t[parseInt(f.value,10)]);break;case"named":l==="named"&&n.push(t[f.value]);break;case"unknown":break}r++}return n}let rn="zh-Hans",yr="zh-Hant",Wn="en",Er="fr",Kr="es",ea=Object.prototype.hasOwnProperty,ta=(e,t)=>ea.call(e,t),ps=new ai;function Mo(e,t){return!!t.find(n=>e.indexOf(n)!==-1)}function Bo(e,t){return t.find(n=>e.indexOf(n)===0)}function Ha(e,t){if(!e)return;if(e=e.trim().replace(/_/g,"-"),t&&t[e])return e;if(e=e.toLowerCase(),e==="chinese")return rn;if(e.indexOf("zh")===0)return e.indexOf("-hans")>-1?rn:e.indexOf("-hant")>-1||Mo(e,["-tw","-hk","-mo","-cht"])?yr:rn;let n=[Wn,Er,Kr];t&&Object.keys(t).length>0&&(n=Object.keys(t));let r=Bo(e,n);if(r)return r}class ja{constructor({locale:t,fallbackLocale:n,messages:r,watcher:l,formater:f}){this.locale=Wn,this.fallbackLocale=Wn,this.message={},this.messages={},this.watchers=[],n&&(this.fallbackLocale=n),this.formater=f||ps,this.messages=r||{},this.setLocale(t||Wn),l&&this.watchLocale(l)}setLocale(t){let n=this.locale;this.locale=Ha(t,this.messages)||this.fallbackLocale,this.messages[this.locale]||(this.messages[this.locale]={}),this.message=this.messages[this.locale],n!==this.locale&&this.watchers.forEach(r=>{r(this.locale,n)})}getLocale(){return this.locale}watchLocale(t){let n=this.watchers.push(t)-1;return()=>{this.watchers.splice(n,1)}}add(t,n,r=!0){let l=this.messages[t];l?r?Object.assign(l,n):Object.keys(n).forEach(f=>{ta(l,f)||(l[f]=n[f])}):this.messages[t]=n}f(t,n,r){return this.formater.interpolate(t,n,r).join("")}t(t,n,r){let l=this.message;return typeof n=="string"?(n=Ha(n,this.messages),n&&(l=this.messages[n])):r=n,ta(l,t)?this.formater.interpolate(l[t],r).join(""):(console.warn(`Cannot translate the value of keypath ${t}. Use the value of keypath as default.`),t)}}function Lo(e,t){e.$watchLocale?e.$watchLocale(n=>{t.setLocale(n)}):e.$watch(()=>e.$locale,n=>{t.setLocale(n)})}function Pa(){return typeof P!="undefined"&&P.getLocale?P.getLocale():typeof global!="undefined"&&global.getLocale?global.getLocale():Wn}function hs(e,t={},n,r){if(typeof e!="string"){let _=[t,e];e=_[0],t=_[1]}typeof e!="string"&&(e=Pa()),typeof n!="string"&&(n=typeof k!="undefined"&&k.fallbackLocale||Wn);let l=new ja({locale:e,fallbackLocale:n,messages:t,watcher:r}),f=(_,w)=>{if(typeof Nt!="function")f=function(D,I){return l.t(D,I)};else{let D=!1;f=function(I,B){let ve=Nt().$vm;return ve&&(ve.$locale,D||(D=!0,Lo(ve,l))),l.t(I,B)}}return f(_,w)};return{i18n:l,f(_,w,D){return l.f(_,w,D)},t(_,w){return f(_,w)},add(_,w,D=!0){return l.add(_,w,D)},watch(_){return l.watchLocale(_)},getLocale(){return l.getLocale()},setLocale(_){return l.setLocale(_)}}}function na(e,t){return e.indexOf(t[0])>-1}let Fo=se.once(()=>typeof k!="undefined"&&k.locales&&!!Object.keys(k.locales).length),U;function q(){let e=P.getLocale(),t=k.locales;return t[e]||t[k.fallbackLocale]||t.en||{}}function pe(e){return na(e,se.I18N_JSON_DELIMITERS)?et().f(e,q(),se.I18N_JSON_DELIMITERS):e}function Ze(e,t){if(t.length===1){if(e){let r=w=>Z.isString(w)&&na(w,se.I18N_JSON_DELIMITERS),l=t[0],f=[];if(Z.isArray(e)&&(f=e.filter(w=>r(w[l]))).length)return f;let _=e[t[0]];if(r(_))return e}return}let n=t.shift();return Ze(e&&e[n],t)}function Je(e,t){return t.map(n=>mt(e,n))}function mt(e,t){let n=Ze(e,t);if(!n)return!1;let r=t[t.length-1];if(Z.isArray(n))n.forEach(l=>mt(l,[r]));else{let l=n[r];Object.defineProperty(n,r,{get(){return pe(l)},set(f){l=f}})}return!0}function et(){if(!U){let e;if(typeof Nt=="function"?e=u.requireModule("plus").getLanguage():e=a.webview.currentWebview().getStyle().locale,U=hs(e),Fo()){let t=Object.keys(k.locales||{});t.length&&t.forEach(n=>U.add(n,k.locales[n])),U.setLocale(e)}}return U}function st(e,t,n){return t.reduce((r,l,f)=>(r[e+l]=n[f],r),{})}let fr=se.once(()=>{let e="uni.app.",t=["quit"];et().add(Wn,st(e,t,["Press back button again to exit"]),!1),et().add(Kr,st(e,t,["Pulse otra vez para salir"]),!1),et().add(Er,st(e,t,["Appuyez \xE0 nouveau pour quitter l'application"]),!1),et().add(rn,st(e,t,["\u518D\u6309\u4E00\u6B21\u9000\u51FA\u5E94\u7528"]),!1),et().add(yr,st(e,t,["\u518D\u6309\u4E00\u6B21\u9000\u51FA\u61C9\u7528"]),!1)}),$r=se.once(()=>{let e="uni.showActionSheet.",t=["cancel"];et().add(Wn,st(e,t,["Cancel"]),!1),et().add(Kr,st(e,t,["Cancelar"]),!1),et().add(Er,st(e,t,["Annuler"]),!1),et().add(rn,st(e,t,["\u53D6\u6D88"]),!1),et().add(yr,st(e,t,["\u53D6\u6D88"]),!1)}),Hr=se.once(()=>{let e="uni.showModal.",t=["cancel","confirm"];et().add(Wn,st(e,t,["Cancel","OK"]),!1),et().add(Kr,st(e,t,["Cancelar","OK"]),!1),et().add(Er,st(e,t,["Annuler","OK"]),!1),et().add(rn,st(e,t,["\u53D6\u6D88","\u786E\u5B9A"]),!1),et().add(yr,st(e,t,["\u53D6\u6D88","\u78BA\u5B9A"]),!1)}),Qi=se.once(()=>{let e="uni.chooseImage.",t=["cancel","sourceType.album","sourceType.camera"];et().add(Wn,st(e,t,["Cancel","Album","Camera"]),!1),et().add(Kr,st(e,t,["Cancelar","\xC1lbum","C\xE1mara"]),!1),et().add(Er,st(e,t,["Annuler","Album","Cam\xE9ra"]),!1),et().add(rn,st(e,t,["\u53D6\u6D88","\u4ECE\u76F8\u518C\u9009\u62E9","\u62CD\u6444"]),!1),et().add(yr,st(e,t,["\u53D6\u6D88","\u5F9E\u76F8\u518A\u9078\u64C7","\u62CD\u651D"]),!1)}),_i=se.once(()=>{let e="uni.chooseVideo.",t=["cancel","sourceType.album","sourceType.camera"];et().add(Wn,st(e,t,["Cancel","Album","Camera"]),!1),et().add(Kr,st(e,t,["Cancelar","\xC1lbum","C\xE1mara"]),!1),et().add(Er,st(e,t,["Annuler","Album","Cam\xE9ra"]),!1),et().add(rn,st(e,t,["\u53D6\u6D88","\u4ECE\u76F8\u518C\u9009\u62E9","\u62CD\u6444"]),!1),et().add(yr,st(e,t,["\u53D6\u6D88","\u5F9E\u76F8\u518A\u9078\u64C7","\u62CD\u651D"]),!1)}),eo=se.once(()=>{let e="uni.previewImage.",t=["cancel","button.save","save.success","save.fail"];et().add(Wn,st(e,t,["Cancel","Save Image","Saved successfully","Save failed"]),!1),et().add(Kr,st(e,t,["Cancelar","Guardar imagen","Guardado exitosamente","Error al guardar"]),!1),et().add(Er,st(e,t,["Annuler","Guardar imagen","Enregistr\xE9 avec succ\xE8s","\xC9chec de la sauvegarde"]),!1),et().add(rn,st(e,t,["\u53D6\u6D88","\u4FDD\u5B58\u56FE\u50CF","\u4FDD\u5B58\u56FE\u50CF\u5230\u76F8\u518C\u6210\u529F","\u4FDD\u5B58\u56FE\u50CF\u5230\u76F8\u518C\u5931\u8D25"]),!1),et().add(yr,st(e,t,["\u53D6\u6D88","\u4FDD\u5B58\u5716\u50CF","\u4FDD\u5B58\u5716\u50CF\u5230\u76F8\u518A\u6210\u529F","\u4FDD\u5B58\u5716\u50CF\u5230\u76F8\u518A\u5931\u6557"]),!1)}),gs=se.once(()=>{let e="uni.setClipboardData.",t=["success","fail"];et().add(Wn,st(e,t,["Content copied","Copy failed, please copy manually"]),!1),et().add(Kr,st(e,t,["Contenido copiado","Error al copiar, copie manualmente"]),!1),et().add(Er,st(e,t,["Contenu copi\xE9","\xC9chec de la copie, copiez manuellement"]),!1),et().add(rn,st(e,t,["\u5185\u5BB9\u5DF2\u590D\u5236","\u590D\u5236\u5931\u8D25\uFF0C\u8BF7\u624B\u52A8\u590D\u5236"]),!1),et().add(yr,st(e,t,["\u5167\u5BB9\u5DF2\u5FA9\u5236","\u5FA9\u5236\u5931\u6557\uFF0C\u8ACB\u624B\u52D5\u5FA9\u88FD"]),!1)}),Di=se.once(()=>{let e="uni.scanCode.",t=["title","album","fail","flash.on","flash.off"];et().add(Wn,st(e,t,["Scan code","Album","Recognition failure","Tap to turn light on","Tap to turn light off"]),!1),et().add(Kr,st(e,t,["C\xF3digo de escaneo","\xC1lbum","\xC9chec de la reconnaissance","Toque para encender la luz","Toque para apagar la luz"]),!1),et().add(Er,st(e,t,["Code d\u2019analyse","Album","Fallo de reconocimiento","Appuyez pour activer l'\xE9clairage","Appuyez pour d\xE9sactiver l'\xE9clairage"]),!1),et().add(rn,st(e,t,["\u626B\u7801","\u76F8\u518C","\u8BC6\u522B\u5931\u8D25","\u8F7B\u89E6\u7167\u4EAE","\u8F7B\u89E6\u5173\u95ED"]),!1),et().add(yr,st(e,t,["\u6383\u78BC","\u76F8\u518A","\u8B58\u5225\u5931\u6557","\u8F15\u89F8\u7167\u4EAE","\u8F15\u89F8\u95DC\u9589"]),!1)}),Sr=se.once(()=>{let e="uni.startSoterAuthentication.",t=["authContent","waitingContent"];et().add(Wn,st(e,t,["Fingerprint recognition","Unrecognizable"]),!1),et().add(Kr,st(e,t,["Reconocimiento de huellas dactilares","Irreconocible"]),!1),et().add(Er,st(e,t,["Reconnaissance de l'empreinte digitale","M\xE9connaissable"]),!1),et().add(rn,st(e,t,["\u6307\u7EB9\u8BC6\u522B\u4E2D...","\u65E0\u6CD5\u8BC6\u522B"]),!1),et().add(yr,st(e,t,["\u6307\u7D0B\u8B58\u5225\u4E2D...","\u7121\u6CD5\u8B58\u5225"]),!1)});function si(e){if(Fo())return Je(e,[["titleText"],["searchInput","placeholder"],["buttons","text"]])}function Na(e){if(Fo()){let t="caption";return Je(e,[["contentdown",t],["contentover",t],["contentrefresh",t]])}}function le(e){let t=new se.Emitter;return{on(n,r){return t.on(n,r)},once(n,r){return t.once(n,r)},off(n,r){return t.off(n,r)},emit(n,...r){return t.emit(n,...r)},subscribe(n,r,l=!1){t[l?"once":"on"](`${e}.${n}`,r)},unsubscribe(n,r){t.off(`${e}.${n}`,r)},subscribeHandler(n,r,l){t.emit(`${e}.${n}`,r,l)}}}let K="invokeViewApi",de="invokeServiceApi";function Ve(e){return e=e+"",e.indexOf("rpx")!==-1||e.indexOf("upx")!==-1}function ft(e,t=!1){if(t)return on(e);if(Z.isString(e)){let n=parseInt(e)||0;return Ve(e)?P.upx2px(n):n}return e}function on(e){return Ve(e)?e.replace(/(\d+(\.\d+)?)[ru]px/g,(t,n)=>P.upx2px(parseFloat(n))+"px"):e}function Kn(e){return e.$page}function vn(e){let t=se.resolveComponentInstance(e);if(t.$page)return ka(t);if(!t.$)return;let n=t.$.root.proxy;if(n&&n.$page)return ka(n)}function Un(){let e=Mr(),t=e.length;if(t)return e[t-1]}function dr(){var e;let t=(e=Un())===null||e===void 0?void 0:e.$page;if(t)return t.meta}function to(){let e=dr();return e?e.id:-1}function Zn(){let e=Un();if(e)return e.$vm}let bo=["navigationBar","pullToRefresh"];function Ia(){return JSON.parse(JSON.stringify(k.globalStyle||{}))}function yo(e,t){let n=Ia(),r=Z.extend({id:t},n,e);bo.forEach(f=>{r[f]=Z.extend({},n[f],e[f])});let{navigationBar:l}=r;return l.titleText&&l.titleImage&&(l.titleText=""),r}function Do(e){return JSON.parse(ft(JSON.stringify(e),!0))}function Bl(e){return e.offset&&(e.offset=ft(e.offset)),e.height&&(e.height=ft(e.height)),e.range&&(e.range=ft(e.range)),e}function ra(e,t,n,r,l,f){let{id:_,route:w}=r,D=se.normalizeStyles(r.navigationBar,k.themeConfig,f).titleColor;return{id:_,path:se.addLeadingSlash(w),route:w,fullPath:t,options:n,meta:r,openType:e,eventChannel:l,statusBarStyle:D==="#ffffff"?"light":"dark"}}function ka(e){var t,n;return((t=e.$page)===null||t===void 0?void 0:t.id)||((n=e.$basePage)===null||n===void 0?void 0:n.id)}function gl(e,t,n){let r=e.$[t];!Z.isArray(r)||n.__weh&&Z.remove(r,n.__weh)}function rr(e,t,n){if(Z.isString(e))n=t,t=e,e=Zn();else if(typeof e=="number"){let l=Mr().find(f=>Kn(f).id===e);l?e=l.$vm:e=Zn()}if(!e)return;if(e.__call_hook)return e.__call_hook(t,n);let r=e.$[t];return r&&se.invokeArrayFns(r,n)}function Ll(e){if(e.indexOf("/")===0||e.indexOf("uni:")===0)return e;let t="",n=Mr();return n.length&&(t=Kn(n[n.length-1]).route),za(t,e)}function za(e,t){if(t.indexOf("/")===0)return t;if(t.indexOf("./")===0)return za(e,t.slice(2));let n=t.split("/"),r=n.length,l=0;for(;l<r&&n[l]==="..";l++);n.splice(0,l),t=n.join("/");let f=e.length>0?e.split("/"):[];return f.splice(f.length-l-1,l+1),se.addLeadingSlash(f.concat(n).join("/"))}function Ti(e,t=!1){return t?Oe.find(n=>n.path===e||n.alias===e):Oe.find(n=>n.path===e)}function ia(e){let t=Ti(e);if(t)return t.meta}function Pi(e,t,n){let r=Ti(se.addLeadingSlash(t));if(r){let{meta:f}=r;delete f.tabBarIndex,f.isQuit=f.isTabBar=!1}let l=Ti(se.addLeadingSlash(n));if(l){let{meta:f}=l;f.tabBarIndex=e,f.isQuit=f.isTabBar=!0;let _=k.tabBar;_&&_.list&&_.list[e]&&(_.list[e].pagePath=se.removeLeadingSlash(n))}}let wr,xa,no;function Wa(){return typeof window=="object"&&typeof navigator=="object"&&typeof document=="object"?"webview":"v8"}function Uo(){return wr.webview.currentWebview().id}let Vo,Ga,ms={};function qa(e){let t=e.data&&e.data.__message;if(!t||!t.__page)return;let n=t.__page,r=ms[n];r&&r(t),t.keep||delete ms[n]}function ml(e,t){Wa()==="v8"?no?(Vo&&Vo.close(),Vo=new no(Uo()),Vo.onmessage=qa):Ga||(Ga=xa.requireModule("globalEvent"),Ga.addEventListener("plusMessage",qa)):window.__plusMessage=qa,ms[e]=t}class Fl{constructor(t){this.webview=t}sendMessage(t){let n=JSON.parse(JSON.stringify({__message:{data:t}})),r=this.webview.id;no?new no(r).postMessage(n):wr.webview.postMessageToUniNView&&wr.webview.postMessageToUniNView(n,r)}close(){this.webview.close()}}function Eo({context:e={},url:t,data:n={},style:r={},onMessage:l,onClose:f}){let _=k.darkmode;wr=e.plus||a,xa=e.weex||(typeof u=="object"?u:null),no=e.BroadcastChannel||(typeof BroadcastChannel=="object"?BroadcastChannel:null);let w={autoBackButton:!0,titleSize:"17px"},D=`page${Date.now()}`;r=Z.extend({},r),r.titleNView!==!1&&r.titleNView!=="none"&&(r.titleNView=Z.extend(w,r.titleNView));let I={top:0,bottom:0,usingComponents:{},popGesture:"close",scrollIndicator:"none",animationType:"pop-in",animationDuration:200,uniNView:{path:`/${t}.js`,defaultFontSize:16,viewport:wr.screen.resolutionWidth}};r=Z.extend(I,r);let B=wr.webview.create("",D,r,{extras:{from:Uo(),runtime:Wa(),data:Z.extend({},n,{darkmode:_}),useGlobalEvent:!no}});return B.addEventListener("close",f),ml(D,ve=>{Z.isFunction(l)&&l(ve.data),ve.keep||B.close("auto")}),B.show(r.animationType,r.animationDuration),new Fl(B)}let hc=(e,t)=>St.emit("api."+e,t),vl=1;function $s(e){return(e||to())+"."+K}let Hs=(e,t,n,r)=>{let{subscribe:l,publishHandler:f}=St,_=r?vl++:0;r&&l(K+"."+_,r,!0),f($s(n),{id:_,name:e,args:t},n)},$o=(e,t,n,r)=>{let{subscribe:l,unsubscribe:f,publishHandler:_}=St,w=vl++,D=K+"."+w;return l(D,n),_($s(r),{id:w,name:e,args:t},r),()=>{f(D)}},ro=Object.create(null);function So(){St.subscribe(de,vs)}function wo(e,t){ro[e]||(ro[e]=t)}function vs({id:e,name:t,args:n},r){let l=_=>{e&&St.publishHandler(de+"."+e,_,r)},f=ro[t];f?f(n,l):l({})}let Dl=Z.extend(le("view"),{invokeOnCallback:hc,invokeViewMethod:Hs,invokeViewMethodKeepAlive:$o});function Gc(){let{on:e}=St;e(se.ON_RESIZE,S),e(se.ON_APP_ENTER_FOREGROUND,F),e(se.ON_APP_ENTER_BACKGROUND,W)}function S(e){let t=Un();rr(t,se.ON_RESIZE,e),St.invokeOnCallback("onWindowResize",e)}function F(e){let t=Un();rr(Nt(),se.ON_SHOW,e),rr(t,se.ON_SHOW)}function W(){rr(Nt(),se.ON_HIDE),rr(Un(),se.ON_HIDE)}let H=[se.ON_PAGE_SCROLL,se.ON_REACH_BOTTOM];function ne(){H.forEach(e=>St.subscribe(e,ie(e)))}function ie(e){return(t,n)=>{rr(parseInt(n),e,t)}}function ge(){Gc(),ne()}function we(e){e.$vm=e,e.$mpType="app";let t=dn.ref(et().getLocale());Object.defineProperty(e,"$locale",{get(){return t.value},set(n){t.value=n}})}function Me(e,t){e.route=t.route,e.$vm=e,e.$page=t,e.$mpType="page",e.$fontFamilySet=new Set,t.meta.isTabBar&&(e.$.__isTabBar=!0,e.$.__isActive=!0)}function $e(){return{path:"",query:{},scene:1001,referrerInfo:{appId:"",extraData:{}}}}function Ee(e,t){let n=e.$options||{};n.globalData=Z.extend(n.globalData||{},t),Object.defineProperty(e,"globalData",{get(){return n.globalData},set(r){n.globalData=r}})}let De;function ht(){return De}function Tt(e){let t=e.$;Object.defineProperty(t.ctx,"$children",{get(){return _n().map(r=>r.$vm)}});let n=t.appContext;De=Z.extend(n.app,{mountPage(r,l,f){let _=dn.createVNode(r,l);_.appContext=n,_.__page_container__=f,dn.render(_,f);let w=_.component.proxy;return w.__page_container__=f,w},unmountPage:r=>{let{__page_container__:l}=r;l&&(l.isUnmounted=!0,dn.render(null,l))}})}function Rt(e){return e.$page}let yt=[];function vt(e){let t=Rt(e);if(!t.meta.isNVue)return yt.push(e);let n=yt.findIndex(r=>Rt(r).id===t.id);n>-1?yt.splice(n,1,e):yt.push(e)}function Ut(e){return yt.find(t=>Rt(t).id===e)}function _n(){return yt}function Rn(){return At()}function At(){let e=[];return yt.forEach(t=>{t.$.__isTabBar?t.$.__isActive&&e.push(t):e.push(t)}),e}function ln(){let e=Un();!e||Vn(e)}function Vn(e){let t=yt.findIndex(r=>r===e);if(t===-1)return;Rt(e).meta.isNVue||ht().unmountPage(e),yt.splice(t,1)}function ir(e,t,n){Rt(e).meta.isNVue?$n(e,t,n):On(e,t,n)}function On(e,t,n){St.invokeViewMethod("requestComponentInfo",{reqs:t.map(r=>(r.component&&(r.component=r.component.$el.nodeId),r))},Rt(e).id,n)}function $n(e,t,n){let r=Cr(t),l=new Array(r.length);Ya(r,e.$el,l),_s(e.$requireNativePlugin("dom"),l,0,[],f=>{n(f)})}function Cr(e){let t=[];for(let n=0;n<e.length;n++){let r=e[n].selector;r.indexOf("#")===0&&t.push(r.substring(1))}return t}function Ya(e,t,n){let r=t.children;if(!Z.isArray(r))return!1;for(let l=0;l<r.length;l++){let f=r[l];if(f.attr){let _=e.indexOf(f.attr.id);if(_>=0&&(n[_]={id:e[_],ref:f.ref,dataset:se.parseNVueDataset(f.attr)},e.length===1))break}f.children&&Ya(e,f,n)}}function _s(e,t,n,r,l){let f=t[n];e.getComponentRect(f.ref,_=>{_.size.id=f.id,_.size.dataset=f.dataset,r.push(_.size),n+=1,n<t.length?_s(e,t,n,r,l):l(r)})}function Ur(e,t){St.invokeViewMethod("setPageMeta",t,Rt(e).id)}function Gt(e){if(e.indexOf("//")===0)return"https:"+e;if(se.SCHEME_RE.test(e)||se.DATA_RE.test(e))return e;if(Ja(e))return"file://"+Ho(e);let t="file://"+Ho("_www");if(e.indexOf("/")===0)return e.startsWith("/storage/")||e.startsWith("/sdcard/")||e.includes("/Containers/Data/Application/")?"file://"+e:t+e;if(e.indexOf("../")===0||e.indexOf("./")===0){if(typeof __id__=="string")return t+za(se.addLeadingSlash(__id__),e);{let n=Un();if(n)return t+za(se.addLeadingSlash(n.route),e)}}return e}let Ho=se.cacheStringFunction(e=>a.io.convertLocalFileSystemURL(e).replace(/^\/?apps\//,"/android_asset/apps/").replace(/\/$/,""));function Ja(e){return e.indexOf("_www")===0||e.indexOf("_doc")===0||e.indexOf("_documents")===0||e.indexOf("_downloads")===0}let bs="success",ys="fail",jo=[bs,ys,"complete"];function Mn(e,t,n,r){if(!e)return;if(typeof n=="undefined")return e[t]();let[,l]=Za(n,r);return Object.keys(l).length?e[t](io(t,l)):e[t]()}function Gn(e,t,n,r){if(!e)return;let[l,f]=Za(n,r);return Object.keys(f).length?e[t](l,io(t,f)):e[t](l)}function oa(e,t){let n=Ka(e,t.$el);return n||console.error("Can not find `"+e+"`")}function Ka(e,t){if(!e||!t)return;if(t.attr&&t.attr.id===e)return t;let n=t.children;if(!!n)for(let r=0,l=n.length;r<l;r++){let f=Ka(e,n[r]);if(f)return f}}function Za(e={},t){let n=Object.create(null),r=function(f){let _=e[f];Z.isFunction(_)&&(n[f]=_,delete e[f])};return jo.forEach(r),t&&t.forEach(r),[e,n]}function io(e,t){return function(r){let l=r.type;delete r.type;let f=t[l];if(l===bs?r.errMsg=`${e}:ok`:l===ys&&(r.errMsg=e+":fail "+(r.msg?" "+r.msg:"")),delete r.code,delete r.msg,Z.isFunction(f)&&f(r),l===bs||l===ys){let _=t.complete;Z.isFunction(_)&&_(r)}}}let zo={play(e){return Mn(e,"play")},pause(e){return Mn(e,"pause")},seek(e,t){return Gn(e,"seek",t.position)},stop(e){return Mn(e,"stop")},sendDanmu(e,t){return Gn(e,"sendDanmu",t)},playbackRate(e,t){return Gn(e,"playbackRate",t.rate)},requestFullScreen(e,t={}){return Gn(e,"requestFullScreen",t)},exitFullScreen(e){return Mn(e,"exitFullScreen")},showStatusBar(e){return Mn(e,"showStatusBar")},hideStatusBar(e){return Mn(e,"hideStatusBar")}};function Xr(e,t,n,r){let l=Ut(t);if(l&&Rt(l).meta.isNVue){let f=l.$vm;return zo[n](oa(e,f),r)}St.invokeViewMethod("video."+e,{videoId:e,type:n,data:r},t)}let js={getCenterLocation(e,t){return Mn(e,"getCenterLocation",t)},moveToLocation(e,t){return Gn(e,"moveToLocation",t)},translateMarker(e,t){return Gn(e,"translateMarker",t,["animationEnd"])},includePoints(e,t){return Gn(e,"includePoints",t)},getRegion(e,t){return Mn(e,"getRegion",t)},getScale(e,t){return Mn(e,"getScale",t)},addCustomLayer(e,t){return Gn(e,"addCustomLayer",t)},removeCustomLayer(e,t){return Gn(e,"removeCustomLayer",t)},addGroundOverlay(e,t){return Gn(e,"addGroundOverlay",t)},removeGroundOverlay(e,t){return Gn(e,"removeGroundOverlay",t)},updateGroundOverlay(e,t){return Gn(e,"updateGroundOverlay",t)},initMarkerCluster(e,t){return Gn(e,"initMarkerCluster",t)},addMarkers(e,t){return Gn(e,"addMarkers",t)},removeMarkers(e,t){return Gn(e,"removeMarkers",t)},moveAlong(e,t){return Gn(e,"moveAlong",t)},setLocMarkerIcon(e,t){return Gn(e,"setLocMarkerIcon",t)},openMapApp(e,t){return Gn(e,"openMapApp",t)},on(e,t){return e.on(t.name,t.callback)}};function _l(e,t,n,r,l){let f=Ut(t);if(f&&Rt(f).meta.isNVue){let _=f.$vm;return js[n](oa(e,_),r)}St.invokeViewMethod("map."+e,{type:n,data:r},t,l)}function Xa(e){return`IntersectionObserver.${e}`}function zs({reqId:e,component:t,options:n,callback:r},l){let f=Xa(e);St.invokeViewMethod("addIntersectionObserver",{reqId:e,component:t.$el.nodeId,options:n,eventName:f},l),St.subscribe(f,r)}function bl({reqId:e,component:t},n){St.invokeViewMethod("removeIntersectionObserver",{reqId:e,component:t.$el.nodeId},n),St.unsubscribe(Xa(e))}function Ws(e){return`MediaQueryObserver.${e}`}function Ul({reqId:e,component:t,options:n,callback:r},l){let f=Ws(e);St.invokeViewMethod("addMediaQueryObserver",{reqId:e,component:t.$el.nodeId,options:n,eventName:f},l),St.subscribe(f,r)}function Gs({reqId:e,component:t},n){St.invokeViewMethod("removeMediaQueryObserver",{reqId:e,component:t.$el.nodeId},n),St.unsubscribe(Ws(e))}let qs=200,Vl=["unknown","none","ethernet","wifi","2g","3g","4g","5g"],Ys="_doc/uniapp_temp",bi=`${Ys}_${Date.now()}`;function Qa(e){let t=e.split("/");return t[t.length-1]}function Es(e){let t=e.split(".");return t.length>1?"."+t[t.length-1]:""}let Ss="backbutton";function Ui(){P.navigateBack({from:"backbutton",success(){}})}let ws=$e(),es=$e();function gc(){return Z.extend({},es)}function Ge(){return Z.extend({},ws)}function $t({path:e,query:t,referrerInfo:n}){Z.extend(ws,{path:e,query:t?se.parseQuery(t):{},referrerInfo:n||{}})}function It({path:e,query:t,referrerInfo:n}){return Z.extend(es,{path:e,query:t?se.parseQuery(t):{},referrerInfo:n||{},channel:a.runtime.channel,launcher:a.runtime.launcher}),Z.extend(ws,es),ws}function gn(){let e=u.requireModule("plus");if(e.getRedirectInfo){let{path:t,query:n,extraData:r,userAction:l,fromAppid:f}=e.getRedirectInfo()||{},_={appId:f,extraData:{}};return r&&(_.extraData=r),{path:t||"",query:n?"?"+n:"",referrerInfo:_,userAction:l}}}var qn={};(function(e){var t=typeof Uint8Array!="undefined"&&typeof Uint16Array!="undefined"&&typeof Int32Array!="undefined";function n(f,_){return Object.prototype.hasOwnProperty.call(f,_)}e.assign=function(f){for(var _=Array.prototype.slice.call(arguments,1);_.length;){var w=_.shift();if(!!w){if(typeof w!="object")throw new TypeError(w+"must be non-object");for(var D in w)n(w,D)&&(f[D]=w[D])}}return f},e.shrinkBuf=function(f,_){return f.length===_?f:f.subarray?f.subarray(0,_):(f.length=_,f)};var r={arraySet:function(f,_,w,D,I){if(_.subarray&&f.subarray){f.set(_.subarray(w,w+D),I);return}for(var B=0;B<D;B++)f[I+B]=_[w+B]},flattenChunks:function(f){var _,w,D,I,B,ve;for(D=0,_=0,w=f.length;_<w;_++)D+=f[_].length;for(ve=new Uint8Array(D),I=0,_=0,w=f.length;_<w;_++)B=f[_],ve.set(B,I),I+=B.length;return ve}},l={arraySet:function(f,_,w,D,I){for(var B=0;B<D;B++)f[I+B]=_[w+B]},flattenChunks:function(f){return[].concat.apply([],f)}};e.setTyped=function(f){f?(e.Buf8=Uint8Array,e.Buf16=Uint16Array,e.Buf32=Int32Array,e.assign(e,r)):(e.Buf8=Array,e.Buf16=Array,e.Buf32=Array,e.assign(e,l))},e.setTyped(t)})(qn);var Nr={},ar={},yi={},yl=qn,$l=4,El=0,mc=1,qc=2;function aa(e){for(var t=e.length;--t>=0;)e[t]=0}var Co=0,li=1,ci=2,Ao=3,Hl=258,jr=29,Ar=256,Js=Ar+1+jr,Cs=30,Ks=19,sa=2*Js+1,Vi=15,As=16,jl=7,zl=256,vc=16,Os=17,ts=18,Sl=[0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0],Ts=[0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13],_c=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7],wl=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15],Wl=512,Ra=new Array((Js+2)*2);aa(Ra);var Zs=new Array(Cs*2);aa(Zs);var gr=new Array(Wl);aa(gr);var Bn=new Array(Hl-Ao+1);aa(Bn);var Ln=new Array(jr);aa(Ln);var Fn=new Array(Cs);aa(Fn);function $i(e,t,n,r,l){this.static_tree=e,this.extra_bits=t,this.extra_base=n,this.elems=r,this.max_length=l,this.has_stree=e&&e.length}var zr,Qr,Xs;function la(e,t){this.dyn_tree=e,this.max_code=0,this.stat_desc=t}function ca(e){return e<256?gr[e]:gr[256+(e>>>7)]}function ns(e,t){e.pending_buf[e.pending++]=t&255,e.pending_buf[e.pending++]=t>>>8&255}function Ni(e,t,n){e.bi_valid>As-n?(e.bi_buf|=t<<e.bi_valid&65535,ns(e,e.bi_buf),e.bi_buf=t>>As-e.bi_valid,e.bi_valid+=n-As):(e.bi_buf|=t<<e.bi_valid&65535,e.bi_valid+=n)}function Oo(e,t,n){Ni(e,n[t*2],n[t*2+1])}function To(e,t){var n=0;do n|=e&1,e>>>=1,n<<=1;while(--t>0);return n>>>1}function Wr(e){e.bi_valid===16?(ns(e,e.bi_buf),e.bi_buf=0,e.bi_valid=0):e.bi_valid>=8&&(e.pending_buf[e.pending++]=e.bi_buf&255,e.bi_buf>>=8,e.bi_valid-=8)}function oo(e,t){var n=t.dyn_tree,r=t.max_code,l=t.stat_desc.static_tree,f=t.stat_desc.has_stree,_=t.stat_desc.extra_bits,w=t.stat_desc.extra_base,D=t.stat_desc.max_length,I,B,ve,Ae,Re,_t,Ct=0;for(Ae=0;Ae<=Vi;Ae++)e.bl_count[Ae]=0;for(n[e.heap[e.heap_max]*2+1]=0,I=e.heap_max+1;I<sa;I++)B=e.heap[I],Ae=n[n[B*2+1]*2+1]+1,Ae>D&&(Ae=D,Ct++),n[B*2+1]=Ae,!(B>r)&&(e.bl_count[Ae]++,Re=0,B>=w&&(Re=_[B-w]),_t=n[B*2],e.opt_len+=_t*(Ae+Re),f&&(e.static_len+=_t*(l[B*2+1]+Re)));if(Ct!==0){do{for(Ae=D-1;e.bl_count[Ae]===0;)Ae--;e.bl_count[Ae]--,e.bl_count[Ae+1]+=2,e.bl_count[D]--,Ct-=2}while(Ct>0);for(Ae=D;Ae!==0;Ae--)for(B=e.bl_count[Ae];B!==0;)ve=e.heap[--I],!(ve>r)&&(n[ve*2+1]!==Ae&&(e.opt_len+=(Ae-n[ve*2+1])*n[ve*2],n[ve*2+1]=Ae),B--)}}function Gl(e,t,n){var r=new Array(Vi+1),l=0,f,_;for(f=1;f<=Vi;f++)r[f]=l=l+n[f-1]<<1;for(_=0;_<=t;_++){var w=e[_*2+1];w!==0&&(e[_*2]=To(r[w]++,w))}}function Iu(){var e,t,n,r,l,f=new Array(Vi+1);for(n=0,r=0;r<jr-1;r++)for(Ln[r]=n,e=0;e<1<<Sl[r];e++)Bn[n++]=r;for(Bn[n-1]=r,l=0,r=0;r<16;r++)for(Fn[r]=l,e=0;e<1<<Ts[r];e++)gr[l++]=r;for(l>>=7;r<Cs;r++)for(Fn[r]=l<<7,e=0;e<1<<Ts[r]-7;e++)gr[256+l++]=r;for(t=0;t<=Vi;t++)f[t]=0;for(e=0;e<=143;)Ra[e*2+1]=8,e++,f[8]++;for(;e<=255;)Ra[e*2+1]=9,e++,f[9]++;for(;e<=279;)Ra[e*2+1]=7,e++,f[7]++;for(;e<=287;)Ra[e*2+1]=8,e++,f[8]++;for(Gl(Ra,Js+1,f),e=0;e<Cs;e++)Zs[e*2+1]=5,Zs[e*2]=To(e,5);zr=new $i(Ra,Sl,Ar+1,Js,Vi),Qr=new $i(Zs,Ts,0,Cs,Vi),Xs=new $i(new Array(0),_c,0,Ks,jl)}function Cl(e){var t;for(t=0;t<Js;t++)e.dyn_ltree[t*2]=0;for(t=0;t<Cs;t++)e.dyn_dtree[t*2]=0;for(t=0;t<Ks;t++)e.bl_tree[t*2]=0;e.dyn_ltree[zl*2]=1,e.opt_len=e.static_len=0,e.last_lit=e.matches=0}function Qs(e){e.bi_valid>8?ns(e,e.bi_buf):e.bi_valid>0&&(e.pending_buf[e.pending++]=e.bi_buf),e.bi_buf=0,e.bi_valid=0}function Al(e,t,n,r){Qs(e),ns(e,n),ns(e,~n),yl.arraySet(e.pending_buf,e.window,t,n,e.pending),e.pending+=n}function Ps(e,t,n,r){var l=t*2,f=n*2;return e[l]<e[f]||e[l]===e[f]&&r[t]<=r[n]}function Xn(e,t,n){for(var r=e.heap[n],l=n<<1;l<=e.heap_len&&(l<e.heap_len&&Ps(t,e.heap[l+1],e.heap[l],e.depth)&&l++,!Ps(t,r,e.heap[l],e.depth));)e.heap[n]=e.heap[l],n=l,l<<=1;e.heap[n]=r}function sr(e,t,n){var r,l,f=0,_,w;if(e.last_lit!==0)do r=e.pending_buf[e.d_buf+f*2]<<8|e.pending_buf[e.d_buf+f*2+1],l=e.pending_buf[e.l_buf+f],f++,r===0?Oo(e,l,t):(_=Bn[l],Oo(e,_+Ar+1,t),w=Sl[_],w!==0&&(l-=Ln[_],Ni(e,l,w)),r--,_=ca(r),Oo(e,_,n),w=Ts[_],w!==0&&(r-=Fn[_],Ni(e,r,w)));while(f<e.last_lit);Oo(e,zl,t)}function ql(e,t){var n=t.dyn_tree,r=t.stat_desc.static_tree,l=t.stat_desc.has_stree,f=t.stat_desc.elems,_,w,D=-1,I;for(e.heap_len=0,e.heap_max=sa,_=0;_<f;_++)n[_*2]!==0?(e.heap[++e.heap_len]=D=_,e.depth[_]=0):n[_*2+1]=0;for(;e.heap_len<2;)I=e.heap[++e.heap_len]=D<2?++D:0,n[I*2]=1,e.depth[I]=0,e.opt_len--,l&&(e.static_len-=r[I*2+1]);for(t.max_code=D,_=e.heap_len>>1;_>=1;_--)Xn(e,n,_);I=f;do _=e.heap[1],e.heap[1]=e.heap[e.heap_len--],Xn(e,n,1),w=e.heap[1],e.heap[--e.heap_max]=_,e.heap[--e.heap_max]=w,n[I*2]=n[_*2]+n[w*2],e.depth[I]=(e.depth[_]>=e.depth[w]?e.depth[_]:e.depth[w])+1,n[_*2+1]=n[w*2+1]=I,e.heap[1]=I++,Xn(e,n,1);while(e.heap_len>=2);e.heap[--e.heap_max]=e.heap[1],oo(e,t),Gl(n,D,e.bl_count)}function Hi(e,t,n){var r,l=-1,f,_=t[0*2+1],w=0,D=7,I=4;for(_===0&&(D=138,I=3),t[(n+1)*2+1]=65535,r=0;r<=n;r++)f=_,_=t[(r+1)*2+1],!(++w<D&&f===_)&&(w<I?e.bl_tree[f*2]+=w:f!==0?(f!==l&&e.bl_tree[f*2]++,e.bl_tree[vc*2]++):w<=10?e.bl_tree[Os*2]++:e.bl_tree[ts*2]++,w=0,l=f,_===0?(D=138,I=3):f===_?(D=6,I=3):(D=7,I=4))}function ji(e,t,n){var r,l=-1,f,_=t[0*2+1],w=0,D=7,I=4;for(_===0&&(D=138,I=3),r=0;r<=n;r++)if(f=_,_=t[(r+1)*2+1],!(++w<D&&f===_)){if(w<I)do Oo(e,f,e.bl_tree);while(--w!==0);else f!==0?(f!==l&&(Oo(e,f,e.bl_tree),w--),Oo(e,vc,e.bl_tree),Ni(e,w-3,2)):w<=10?(Oo(e,Os,e.bl_tree),Ni(e,w-3,3)):(Oo(e,ts,e.bl_tree),Ni(e,w-11,7));w=0,l=f,_===0?(D=138,I=3):f===_?(D=6,I=3):(D=7,I=4)}}function Yl(e){var t;for(Hi(e,e.dyn_ltree,e.l_desc.max_code),Hi(e,e.dyn_dtree,e.d_desc.max_code),ql(e,e.bl_desc),t=Ks-1;t>=3&&e.bl_tree[wl[t]*2+1]===0;t--);return e.opt_len+=3*(t+1)+5+5+4,t}function bc(e,t,n,r){var l;for(Ni(e,t-257,5),Ni(e,n-1,5),Ni(e,r-4,4),l=0;l<r;l++)Ni(e,e.bl_tree[wl[l]*2+1],3);ji(e,e.dyn_ltree,t-1),ji(e,e.dyn_dtree,n-1)}function ku(e){var t=4093624447,n;for(n=0;n<=31;n++,t>>>=1)if(t&1&&e.dyn_ltree[n*2]!==0)return El;if(e.dyn_ltree[9*2]!==0||e.dyn_ltree[10*2]!==0||e.dyn_ltree[13*2]!==0)return mc;for(n=32;n<Ar;n++)if(e.dyn_ltree[n*2]!==0)return mc;return El}var Ii=!1;function Ir(e){Ii||(Iu(),Ii=!0),e.l_desc=new la(e.dyn_ltree,zr),e.d_desc=new la(e.dyn_dtree,Qr),e.bl_desc=new la(e.bl_tree,Xs),e.bi_buf=0,e.bi_valid=0,Cl(e)}function Wo(e,t,n,r){Ni(e,(Co<<1)+(r?1:0),3),Al(e,t,n)}function Jl(e){Ni(e,li<<1,3),Oo(e,zl,Ra),Wr(e)}function ki(e,t,n,r){var l,f,_=0;e.level>0?(e.strm.data_type===qc&&(e.strm.data_type=ku(e)),ql(e,e.l_desc),ql(e,e.d_desc),_=Yl(e),l=e.opt_len+3+7>>>3,f=e.static_len+3+7>>>3,f<=l&&(l=f)):l=f=n+5,n+4<=l&&t!==-1?Wo(e,t,n,r):e.strategy===$l||f===l?(Ni(e,(li<<1)+(r?1:0),3),sr(e,Ra,Zs)):(Ni(e,(ci<<1)+(r?1:0),3),bc(e,e.l_desc.max_code+1,e.d_desc.max_code+1,_+1),sr(e,e.dyn_ltree,e.dyn_dtree)),Cl(e),r&&Qs(e)}function zi(e,t,n){return e.pending_buf[e.d_buf+e.last_lit*2]=t>>>8&255,e.pending_buf[e.d_buf+e.last_lit*2+1]=t&255,e.pending_buf[e.l_buf+e.last_lit]=n&255,e.last_lit++,t===0?e.dyn_ltree[n*2]++:(e.matches++,t--,e.dyn_ltree[(Bn[n]+Ar+1)*2]++,e.dyn_dtree[ca(t)*2]++),e.last_lit===e.lit_bufsize-1}yi._tr_init=Ir,yi._tr_stored_block=Wo,yi._tr_flush_block=ki,yi._tr_tally=zi,yi._tr_align=Jl;function xu(e,t,n,r){for(var l=e&65535|0,f=e>>>16&65535|0,_=0;n!==0;){_=n>2e3?2e3:n,n-=_;do l=l+t[r++]|0,f=f+l|0;while(--_);l%=65521,f%=65521}return l|f<<16|0}var yc=xu;function pr(){for(var e,t=[],n=0;n<256;n++){e=n;for(var r=0;r<8;r++)e=e&1?3988292384^e>>>1:e>>>1;t[n]=e}return t}var Pn=pr();function ao(e,t,n,r){var l=Pn,f=r+n;e^=-1;for(var _=r;_<f;_++)e=e>>>8^l[(e^t[_])&255];return e^-1}var Ns=ao,el={2:"need dictionary",1:"stream end",0:"","-1":"file error","-2":"stream error","-3":"data error","-4":"insufficient memory","-5":"buffer error","-6":"incompatible version"},ui=qn,Gr=yi,ua=yc,fa=Ns,Ec=el,da=0,Sc=1,Yc=3,pa=4,rs=5,Ei=0,Kl=1,so=-2,wc=-3,Zl=-5,Ru=-1,Jc=1,is=2,Xl=3,Mu=4,Ol=0,os=2,as=8,Cc=9,Kc=15,Bu=8,Zc=29,Lu=256,Ql=Lu+1+Zc,ec=30,ss=19,ls=2*Ql+1,Fu=15,yn=3,cs=258,Go=cs+yn+1,Du=32,tc=42,Ac=69,nc=73,ha=91,Is=103,ga=113,tl=666,kr=1,nl=2,ks=3,rl=4,Xc=3;function Ma(e,t){return e.msg=Ec[t],t}function Qc(e){return(e<<1)-(e>4?9:0)}function ma(e){for(var t=e.length;--t>=0;)e[t]=0}function Ba(e){var t=e.state,n=t.pending;n>e.avail_out&&(n=e.avail_out),n!==0&&(ui.arraySet(e.output,t.pending_buf,t.pending_out,n,e.next_out),e.next_out+=n,t.pending_out+=n,e.total_out+=n,e.avail_out-=n,t.pending-=n,t.pending===0&&(t.pending_out=0))}function fi(e,t){Gr._tr_flush_block(e,e.block_start>=0?e.block_start:-1,e.strstart-e.block_start,t),e.block_start=e.strstart,Ba(e.strm)}function En(e,t){e.pending_buf[e.pending++]=t}function il(e,t){e.pending_buf[e.pending++]=t>>>8&255,e.pending_buf[e.pending++]=t&255}function eu(e,t,n,r){var l=e.avail_in;return l>r&&(l=r),l===0?0:(e.avail_in-=l,ui.arraySet(t,e.input,e.next_in,l,n),e.state.wrap===1?e.adler=ua(e.adler,t,l,n):e.state.wrap===2&&(e.adler=fa(e.adler,t,l,n)),e.next_in+=l,e.total_in+=l,l)}function tu(e,t){var n=e.max_chain_length,r=e.strstart,l,f,_=e.prev_length,w=e.nice_match,D=e.strstart>e.w_size-Go?e.strstart-(e.w_size-Go):0,I=e.window,B=e.w_mask,ve=e.prev,Ae=e.strstart+cs,Re=I[r+_-1],_t=I[r+_];e.prev_length>=e.good_match&&(n>>=2),w>e.lookahead&&(w=e.lookahead);do if(l=t,!(I[l+_]!==_t||I[l+_-1]!==Re||I[l]!==I[r]||I[++l]!==I[r+1])){r+=2,l++;do;while(I[++r]===I[++l]&&I[++r]===I[++l]&&I[++r]===I[++l]&&I[++r]===I[++l]&&I[++r]===I[++l]&&I[++r]===I[++l]&&I[++r]===I[++l]&&I[++r]===I[++l]&&r<Ae);if(f=cs-(Ae-r),r=Ae-cs,f>_){if(e.match_start=t,_=f,f>=w)break;Re=I[r+_-1],_t=I[r+_]}}while((t=ve[t&B])>D&&--n!==0);return _<=e.lookahead?_:e.lookahead}function La(e){var t=e.w_size,n,r,l,f,_;do{if(f=e.window_size-e.lookahead-e.strstart,e.strstart>=t+(t-Go)){ui.arraySet(e.window,e.window,t,t,0),e.match_start-=t,e.strstart-=t,e.block_start-=t,r=e.hash_size,n=r;do l=e.head[--n],e.head[n]=l>=t?l-t:0;while(--r);r=t,n=r;do l=e.prev[--n],e.prev[n]=l>=t?l-t:0;while(--r);f+=t}if(e.strm.avail_in===0)break;if(r=eu(e.strm,e.window,e.strstart+e.lookahead,f),e.lookahead+=r,e.lookahead+e.insert>=yn)for(_=e.strstart-e.insert,e.ins_h=e.window[_],e.ins_h=(e.ins_h<<e.hash_shift^e.window[_+1])&e.hash_mask;e.insert&&(e.ins_h=(e.ins_h<<e.hash_shift^e.window[_+yn-1])&e.hash_mask,e.prev[_&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=_,_++,e.insert--,!(e.lookahead+e.insert<yn)););}while(e.lookahead<Go&&e.strm.avail_in!==0)}function nu(e,t){var n=65535;for(n>e.pending_buf_size-5&&(n=e.pending_buf_size-5);;){if(e.lookahead<=1){if(La(e),e.lookahead===0&&t===da)return kr;if(e.lookahead===0)break}e.strstart+=e.lookahead,e.lookahead=0;var r=e.block_start+n;if((e.strstart===0||e.strstart>=r)&&(e.lookahead=e.strstart-r,e.strstart=r,fi(e,!1),e.strm.avail_out===0)||e.strstart-e.block_start>=e.w_size-Go&&(fi(e,!1),e.strm.avail_out===0))return kr}return e.insert=0,t===pa?(fi(e,!0),e.strm.avail_out===0?ks:rl):(e.strstart>e.block_start&&(fi(e,!1),e.strm.avail_out===0),kr)}function va(e,t){for(var n,r;;){if(e.lookahead<Go){if(La(e),e.lookahead<Go&&t===da)return kr;if(e.lookahead===0)break}if(n=0,e.lookahead>=yn&&(e.ins_h=(e.ins_h<<e.hash_shift^e.window[e.strstart+yn-1])&e.hash_mask,n=e.prev[e.strstart&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=e.strstart),n!==0&&e.strstart-n<=e.w_size-Go&&(e.match_length=tu(e,n)),e.match_length>=yn)if(r=Gr._tr_tally(e,e.strstart-e.match_start,e.match_length-yn),e.lookahead-=e.match_length,e.match_length<=e.max_lazy_match&&e.lookahead>=yn){e.match_length--;do e.strstart++,e.ins_h=(e.ins_h<<e.hash_shift^e.window[e.strstart+yn-1])&e.hash_mask,n=e.prev[e.strstart&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=e.strstart;while(--e.match_length!==0);e.strstart++}else e.strstart+=e.match_length,e.match_length=0,e.ins_h=e.window[e.strstart],e.ins_h=(e.ins_h<<e.hash_shift^e.window[e.strstart+1])&e.hash_mask;else r=Gr._tr_tally(e,0,e.window[e.strstart]),e.lookahead--,e.strstart++;if(r&&(fi(e,!1),e.strm.avail_out===0))return kr}return e.insert=e.strstart<yn-1?e.strstart:yn-1,t===pa?(fi(e,!0),e.strm.avail_out===0?ks:rl):e.last_lit&&(fi(e,!1),e.strm.avail_out===0)?kr:nl}function _a(e,t){for(var n,r,l;;){if(e.lookahead<Go){if(La(e),e.lookahead<Go&&t===da)return kr;if(e.lookahead===0)break}if(n=0,e.lookahead>=yn&&(e.ins_h=(e.ins_h<<e.hash_shift^e.window[e.strstart+yn-1])&e.hash_mask,n=e.prev[e.strstart&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=e.strstart),e.prev_length=e.match_length,e.prev_match=e.match_start,e.match_length=yn-1,n!==0&&e.prev_length<e.max_lazy_match&&e.strstart-n<=e.w_size-Go&&(e.match_length=tu(e,n),e.match_length<=5&&(e.strategy===Jc||e.match_length===yn&&e.strstart-e.match_start>4096)&&(e.match_length=yn-1)),e.prev_length>=yn&&e.match_length<=e.prev_length){l=e.strstart+e.lookahead-yn,r=Gr._tr_tally(e,e.strstart-1-e.prev_match,e.prev_length-yn),e.lookahead-=e.prev_length-1,e.prev_length-=2;do++e.strstart<=l&&(e.ins_h=(e.ins_h<<e.hash_shift^e.window[e.strstart+yn-1])&e.hash_mask,n=e.prev[e.strstart&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=e.strstart);while(--e.prev_length!==0);if(e.match_available=0,e.match_length=yn-1,e.strstart++,r&&(fi(e,!1),e.strm.avail_out===0))return kr}else if(e.match_available){if(r=Gr._tr_tally(e,0,e.window[e.strstart-1]),r&&fi(e,!1),e.strstart++,e.lookahead--,e.strm.avail_out===0)return kr}else e.match_available=1,e.strstart++,e.lookahead--}return e.match_available&&(r=Gr._tr_tally(e,0,e.window[e.strstart-1]),e.match_available=0),e.insert=e.strstart<yn-1?e.strstart:yn-1,t===pa?(fi(e,!0),e.strm.avail_out===0?ks:rl):e.last_lit&&(fi(e,!1),e.strm.avail_out===0)?kr:nl}function Oc(e,t){for(var n,r,l,f,_=e.window;;){if(e.lookahead<=cs){if(La(e),e.lookahead<=cs&&t===da)return kr;if(e.lookahead===0)break}if(e.match_length=0,e.lookahead>=yn&&e.strstart>0&&(l=e.strstart-1,r=_[l],r===_[++l]&&r===_[++l]&&r===_[++l])){f=e.strstart+cs;do;while(r===_[++l]&&r===_[++l]&&r===_[++l]&&r===_[++l]&&r===_[++l]&&r===_[++l]&&r===_[++l]&&r===_[++l]&&l<f);e.match_length=cs-(f-l),e.match_length>e.lookahead&&(e.match_length=e.lookahead)}if(e.match_length>=yn?(n=Gr._tr_tally(e,1,e.match_length-yn),e.lookahead-=e.match_length,e.strstart+=e.match_length,e.match_length=0):(n=Gr._tr_tally(e,0,e.window[e.strstart]),e.lookahead--,e.strstart++),n&&(fi(e,!1),e.strm.avail_out===0))return kr}return e.insert=0,t===pa?(fi(e,!0),e.strm.avail_out===0?ks:rl):e.last_lit&&(fi(e,!1),e.strm.avail_out===0)?kr:nl}function ru(e,t){for(var n;;){if(e.lookahead===0&&(La(e),e.lookahead===0)){if(t===da)return kr;break}if(e.match_length=0,n=Gr._tr_tally(e,0,e.window[e.strstart]),e.lookahead--,e.strstart++,n&&(fi(e,!1),e.strm.avail_out===0))return kr}return e.insert=0,t===pa?(fi(e,!0),e.strm.avail_out===0?ks:rl):e.last_lit&&(fi(e,!1),e.strm.avail_out===0)?kr:nl}function ba(e,t,n,r,l){this.good_length=e,this.max_lazy=t,this.nice_length=n,this.max_chain=r,this.func=l}var Po;Po=[new ba(0,0,0,0,nu),new ba(4,4,8,4,va),new ba(4,5,16,8,va),new ba(4,6,32,32,va),new ba(4,4,16,16,_a),new ba(8,16,32,32,_a),new ba(8,16,128,128,_a),new ba(8,32,128,256,_a),new ba(32,128,258,1024,_a),new ba(32,258,258,4096,_a)];function iu(e){e.window_size=2*e.w_size,ma(e.head),e.max_lazy_match=Po[e.level].max_lazy,e.good_match=Po[e.level].good_length,e.nice_match=Po[e.level].nice_length,e.max_chain_length=Po[e.level].max_chain,e.strstart=0,e.block_start=0,e.lookahead=0,e.insert=0,e.match_length=e.prev_length=yn-1,e.match_available=0,e.ins_h=0}function Tc(){this.strm=null,this.status=0,this.pending_buf=null,this.pending_buf_size=0,this.pending_out=0,this.pending=0,this.wrap=0,this.gzhead=null,this.gzindex=0,this.method=as,this.last_flush=-1,this.w_size=0,this.w_bits=0,this.w_mask=0,this.window=null,this.window_size=0,this.prev=null,this.head=null,this.ins_h=0,this.hash_size=0,this.hash_bits=0,this.hash_mask=0,this.hash_shift=0,this.block_start=0,this.match_length=0,this.prev_match=0,this.match_available=0,this.strstart=0,this.match_start=0,this.lookahead=0,this.prev_length=0,this.max_chain_length=0,this.max_lazy_match=0,this.level=0,this.strategy=0,this.good_match=0,this.nice_match=0,this.dyn_ltree=new ui.Buf16(ls*2),this.dyn_dtree=new ui.Buf16((2*ec+1)*2),this.bl_tree=new ui.Buf16((2*ss+1)*2),ma(this.dyn_ltree),ma(this.dyn_dtree),ma(this.bl_tree),this.l_desc=null,this.d_desc=null,this.bl_desc=null,this.bl_count=new ui.Buf16(Fu+1),this.heap=new ui.Buf16(2*Ql+1),ma(this.heap),this.heap_len=0,this.heap_max=0,this.depth=new ui.Buf16(2*Ql+1),ma(this.depth),this.l_buf=0,this.lit_bufsize=0,this.last_lit=0,this.d_buf=0,this.opt_len=0,this.static_len=0,this.matches=0,this.insert=0,this.bi_buf=0,this.bi_valid=0}function ou(e){var t;return!e||!e.state?Ma(e,so):(e.total_in=e.total_out=0,e.data_type=os,t=e.state,t.pending=0,t.pending_out=0,t.wrap<0&&(t.wrap=-t.wrap),t.status=t.wrap?tc:ga,e.adler=t.wrap===2?0:1,t.last_flush=da,Gr._tr_init(t),Ei)}function rc(e){var t=ou(e);return t===Ei&&iu(e.state),t}function Uu(e,t){return!e||!e.state||e.state.wrap!==2?so:(e.state.gzhead=t,Ei)}function ya(e,t,n,r,l,f){if(!e)return so;var _=1;if(t===Ru&&(t=6),r<0?(_=0,r=-r):r>15&&(_=2,r-=16),l<1||l>Cc||n!==as||r<8||r>15||t<0||t>9||f<0||f>Mu)return Ma(e,so);r===8&&(r=9);var w=new Tc;return e.state=w,w.strm=e,w.wrap=_,w.gzhead=null,w.w_bits=r,w.w_size=1<<w.w_bits,w.w_mask=w.w_size-1,w.hash_bits=l+7,w.hash_size=1<<w.hash_bits,w.hash_mask=w.hash_size-1,w.hash_shift=~~((w.hash_bits+yn-1)/yn),w.window=new ui.Buf8(w.w_size*2),w.head=new ui.Buf16(w.hash_size),w.prev=new ui.Buf16(w.w_size),w.lit_bufsize=1<<l+6,w.pending_buf_size=w.lit_bufsize*4,w.pending_buf=new ui.Buf8(w.pending_buf_size),w.d_buf=1*w.lit_bufsize,w.l_buf=(1+2)*w.lit_bufsize,w.level=t,w.strategy=f,w.method=n,rc(e)}function xs(e,t){return ya(e,t,as,Kc,Bu,Ol)}function au(e,t){var n,r,l,f;if(!e||!e.state||t>rs||t<0)return e?Ma(e,so):so;if(r=e.state,!e.output||!e.input&&e.avail_in!==0||r.status===tl&&t!==pa)return Ma(e,e.avail_out===0?Zl:so);if(r.strm=e,n=r.last_flush,r.last_flush=t,r.status===tc)if(r.wrap===2)e.adler=0,En(r,31),En(r,139),En(r,8),r.gzhead?(En(r,(r.gzhead.text?1:0)+(r.gzhead.hcrc?2:0)+(r.gzhead.extra?4:0)+(r.gzhead.name?8:0)+(r.gzhead.comment?16:0)),En(r,r.gzhead.time&255),En(r,r.gzhead.time>>8&255),En(r,r.gzhead.time>>16&255),En(r,r.gzhead.time>>24&255),En(r,r.level===9?2:r.strategy>=is||r.level<2?4:0),En(r,r.gzhead.os&255),r.gzhead.extra&&r.gzhead.extra.length&&(En(r,r.gzhead.extra.length&255),En(r,r.gzhead.extra.length>>8&255)),r.gzhead.hcrc&&(e.adler=fa(e.adler,r.pending_buf,r.pending,0)),r.gzindex=0,r.status=Ac):(En(r,0),En(r,0),En(r,0),En(r,0),En(r,0),En(r,r.level===9?2:r.strategy>=is||r.level<2?4:0),En(r,Xc),r.status=ga);else{var _=as+(r.w_bits-8<<4)<<8,w=-1;r.strategy>=is||r.level<2?w=0:r.level<6?w=1:r.level===6?w=2:w=3,_|=w<<6,r.strstart!==0&&(_|=Du),_+=31-_%31,r.status=ga,il(r,_),r.strstart!==0&&(il(r,e.adler>>>16),il(r,e.adler&65535)),e.adler=1}if(r.status===Ac)if(r.gzhead.extra){for(l=r.pending;r.gzindex<(r.gzhead.extra.length&65535)&&!(r.pending===r.pending_buf_size&&(r.gzhead.hcrc&&r.pending>l&&(e.adler=fa(e.adler,r.pending_buf,r.pending-l,l)),Ba(e),l=r.pending,r.pending===r.pending_buf_size));)En(r,r.gzhead.extra[r.gzindex]&255),r.gzindex++;r.gzhead.hcrc&&r.pending>l&&(e.adler=fa(e.adler,r.pending_buf,r.pending-l,l)),r.gzindex===r.gzhead.extra.length&&(r.gzindex=0,r.status=nc)}else r.status=nc;if(r.status===nc)if(r.gzhead.name){l=r.pending;do{if(r.pending===r.pending_buf_size&&(r.gzhead.hcrc&&r.pending>l&&(e.adler=fa(e.adler,r.pending_buf,r.pending-l,l)),Ba(e),l=r.pending,r.pending===r.pending_buf_size)){f=1;break}r.gzindex<r.gzhead.name.length?f=r.gzhead.name.charCodeAt(r.gzindex++)&255:f=0,En(r,f)}while(f!==0);r.gzhead.hcrc&&r.pending>l&&(e.adler=fa(e.adler,r.pending_buf,r.pending-l,l)),f===0&&(r.gzindex=0,r.status=ha)}else r.status=ha;if(r.status===ha)if(r.gzhead.comment){l=r.pending;do{if(r.pending===r.pending_buf_size&&(r.gzhead.hcrc&&r.pending>l&&(e.adler=fa(e.adler,r.pending_buf,r.pending-l,l)),Ba(e),l=r.pending,r.pending===r.pending_buf_size)){f=1;break}r.gzindex<r.gzhead.comment.length?f=r.gzhead.comment.charCodeAt(r.gzindex++)&255:f=0,En(r,f)}while(f!==0);r.gzhead.hcrc&&r.pending>l&&(e.adler=fa(e.adler,r.pending_buf,r.pending-l,l)),f===0&&(r.status=Is)}else r.status=Is;if(r.status===Is&&(r.gzhead.hcrc?(r.pending+2>r.pending_buf_size&&Ba(e),r.pending+2<=r.pending_buf_size&&(En(r,e.adler&255),En(r,e.adler>>8&255),e.adler=0,r.status=ga)):r.status=ga),r.pending!==0){if(Ba(e),e.avail_out===0)return r.last_flush=-1,Ei}else if(e.avail_in===0&&Qc(t)<=Qc(n)&&t!==pa)return Ma(e,Zl);if(r.status===tl&&e.avail_in!==0)return Ma(e,Zl);if(e.avail_in!==0||r.lookahead!==0||t!==da&&r.status!==tl){var D=r.strategy===is?ru(r,t):r.strategy===Xl?Oc(r,t):Po[r.level].func(r,t);if((D===ks||D===rl)&&(r.status=tl),D===kr||D===ks)return e.avail_out===0&&(r.last_flush=-1),Ei;if(D===nl&&(t===Sc?Gr._tr_align(r):t!==rs&&(Gr._tr_stored_block(r,0,0,!1),t===Yc&&(ma(r.head),r.lookahead===0&&(r.strstart=0,r.block_start=0,r.insert=0))),Ba(e),e.avail_out===0))return r.last_flush=-1,Ei}return t!==pa?Ei:r.wrap<=0?Kl:(r.wrap===2?(En(r,e.adler&255),En(r,e.adler>>8&255),En(r,e.adler>>16&255),En(r,e.adler>>24&255),En(r,e.total_in&255),En(r,e.total_in>>8&255),En(r,e.total_in>>16&255),En(r,e.total_in>>24&255)):(il(r,e.adler>>>16),il(r,e.adler&65535)),Ba(e),r.wrap>0&&(r.wrap=-r.wrap),r.pending!==0?Ei:Kl)}function Vu(e){var t;return!e||!e.state?so:(t=e.state.status,t!==tc&&t!==Ac&&t!==nc&&t!==ha&&t!==Is&&t!==ga&&t!==tl?Ma(e,so):(e.state=null,t===ga?Ma(e,wc):Ei))}function su(e,t){var n=t.length,r,l,f,_,w,D,I,B;if(!e||!e.state||(r=e.state,_=r.wrap,_===2||_===1&&r.status!==tc||r.lookahead))return so;for(_===1&&(e.adler=ua(e.adler,t,n,0)),r.wrap=0,n>=r.w_size&&(_===0&&(ma(r.head),r.strstart=0,r.block_start=0,r.insert=0),B=new ui.Buf8(r.w_size),ui.arraySet(B,t,n-r.w_size,r.w_size,0),t=B,n=r.w_size),w=e.avail_in,D=e.next_in,I=e.input,e.avail_in=n,e.next_in=0,e.input=t,La(r);r.lookahead>=yn;){l=r.strstart,f=r.lookahead-(yn-1);do r.ins_h=(r.ins_h<<r.hash_shift^r.window[l+yn-1])&r.hash_mask,r.prev[l&r.w_mask]=r.head[r.ins_h],r.head[r.ins_h]=l,l++;while(--f);r.strstart=l,r.lookahead=yn-1,La(r)}return r.strstart+=r.lookahead,r.block_start=r.strstart,r.insert=r.lookahead,r.lookahead=0,r.match_length=r.prev_length=yn-1,r.match_available=0,e.next_in=D,e.input=I,e.avail_in=w,r.wrap=_,Ei}ar.deflateInit=xs,ar.deflateInit2=ya,ar.deflateReset=rc,ar.deflateResetKeep=ou,ar.deflateSetHeader=Uu,ar.deflate=au,ar.deflateEnd=Vu,ar.deflateSetDictionary=su,ar.deflateInfo="pako deflate (from Nodeca project)";var Ea={},Tl=qn,Pc=!0,Nc=!0;try{String.fromCharCode.apply(null,[0])}catch(e){Pc=!1}try{String.fromCharCode.apply(null,new Uint8Array(1))}catch(e){Nc=!1}for(var ol=new Tl.Buf8(256),Fa=0;Fa<256;Fa++)ol[Fa]=Fa>=252?6:Fa>=248?5:Fa>=240?4:Fa>=224?3:Fa>=192?2:1;ol[254]=ol[254]=1,Ea.string2buf=function(e){var t,n,r,l,f,_=e.length,w=0;for(l=0;l<_;l++)n=e.charCodeAt(l),(n&64512)===55296&&l+1<_&&(r=e.charCodeAt(l+1),(r&64512)===56320&&(n=65536+(n-55296<<10)+(r-56320),l++)),w+=n<128?1:n<2048?2:n<65536?3:4;for(t=new Tl.Buf8(w),f=0,l=0;f<w;l++)n=e.charCodeAt(l),(n&64512)===55296&&l+1<_&&(r=e.charCodeAt(l+1),(r&64512)===56320&&(n=65536+(n-55296<<10)+(r-56320),l++)),n<128?t[f++]=n:n<2048?(t[f++]=192|n>>>6,t[f++]=128|n&63):n<65536?(t[f++]=224|n>>>12,t[f++]=128|n>>>6&63,t[f++]=128|n&63):(t[f++]=240|n>>>18,t[f++]=128|n>>>12&63,t[f++]=128|n>>>6&63,t[f++]=128|n&63);return t};function ic(e,t){if(t<65534&&(e.subarray&&Nc||!e.subarray&&Pc))return String.fromCharCode.apply(null,Tl.shrinkBuf(e,t));for(var n="",r=0;r<t;r++)n+=String.fromCharCode(e[r]);return n}Ea.buf2binstring=function(e){return ic(e,e.length)},Ea.binstring2buf=function(e){for(var t=new Tl.Buf8(e.length),n=0,r=t.length;n<r;n++)t[n]=e.charCodeAt(n);return t},Ea.buf2string=function(e,t){var n,r,l,f,_=t||e.length,w=new Array(_*2);for(r=0,n=0;n<_;){if(l=e[n++],l<128){w[r++]=l;continue}if(f=ol[l],f>4){w[r++]=65533,n+=f-1;continue}for(l&=f===2?31:f===3?15:7;f>1&&n<_;)l=l<<6|e[n++]&63,f--;if(f>1){w[r++]=65533;continue}l<65536?w[r++]=l:(l-=65536,w[r++]=55296|l>>10&1023,w[r++]=56320|l&1023)}return ic(w,r)},Ea.utf8border=function(e,t){var n;for(t=t||e.length,t>e.length&&(t=e.length),n=t-1;n>=0&&(e[n]&192)===128;)n--;return n<0||n===0?t:n+ol[e[n]]>t?n:t};function lu(){this.input=null,this.next_in=0,this.avail_in=0,this.total_in=0,this.output=null,this.next_out=0,this.avail_out=0,this.total_out=0,this.msg="",this.state=null,this.data_type=2,this.adler=0}var cu=lu,Pl=ar,o=qn,c=Ea,g=el,E=cu,N=Object.prototype.toString,T=0,R=4,z=0,$=1,X=2,ye=-1,ce=0,ae=8;function ke(e){if(!(this instanceof ke))return new ke(e);this.options=o.assign({level:ye,method:ae,chunkSize:16384,windowBits:15,memLevel:8,strategy:ce,to:""},e||{});var t=this.options;t.raw&&t.windowBits>0?t.windowBits=-t.windowBits:t.gzip&&t.windowBits>0&&t.windowBits<16&&(t.windowBits+=16),this.err=0,this.msg="",this.ended=!1,this.chunks=[],this.strm=new E,this.strm.avail_out=0;var n=Pl.deflateInit2(this.strm,t.level,t.method,t.windowBits,t.memLevel,t.strategy);if(n!==z)throw new Error(g[n]);if(t.header&&Pl.deflateSetHeader(this.strm,t.header),t.dictionary){var r;if(typeof t.dictionary=="string"?r=c.string2buf(t.dictionary):N.call(t.dictionary)==="[object ArrayBuffer]"?r=new Uint8Array(t.dictionary):r=t.dictionary,n=Pl.deflateSetDictionary(this.strm,r),n!==z)throw new Error(g[n]);this._dict_set=!0}}ke.prototype.push=function(e,t){var n=this.strm,r=this.options.chunkSize,l,f;if(this.ended)return!1;f=t===~~t?t:t===!0?R:T,typeof e=="string"?n.input=c.string2buf(e):N.call(e)==="[object ArrayBuffer]"?n.input=new Uint8Array(e):n.input=e,n.next_in=0,n.avail_in=n.input.length;do{if(n.avail_out===0&&(n.output=new o.Buf8(r),n.next_out=0,n.avail_out=r),l=Pl.deflate(n,f),l!==$&&l!==z)return this.onEnd(l),this.ended=!0,!1;(n.avail_out===0||n.avail_in===0&&(f===R||f===X))&&(this.options.to==="string"?this.onData(c.buf2binstring(o.shrinkBuf(n.output,n.next_out))):this.onData(o.shrinkBuf(n.output,n.next_out)))}while((n.avail_in>0||n.avail_out===0)&&l!==$);return f===R?(l=Pl.deflateEnd(this.strm),this.onEnd(l),this.ended=!0,l===z):(f===X&&(this.onEnd(z),n.avail_out=0),!0)},ke.prototype.onData=function(e){this.chunks.push(e)},ke.prototype.onEnd=function(e){e===z&&(this.options.to==="string"?this.result=this.chunks.join(""):this.result=o.flattenChunks(this.chunks)),this.chunks=[],this.err=e,this.msg=this.strm.msg};function Be(e,t){var n=new ke(t);if(n.push(e,!0),n.err)throw n.msg||g[n.err];return n.result}function Et(e,t){return t=t||{},t.raw=!0,Be(e,t)}function ct(e,t){return t=t||{},t.gzip=!0,Be(e,t)}Nr.Deflate=ke,Nr.deflate=Be,Nr.deflateRaw=Et,Nr.gzip=ct;var kt={},xt={},fe=30,Ie=12,Ne=function(t,n){var r,l,f,_,w,D,I,B,ve,Ae,Re,_t,Ct,Zt,zt,wn,bn,Ft,ut,Xt,Wt,Jt,qt,cr,Qt;r=t.state,l=t.next_in,cr=t.input,f=l+(t.avail_in-5),_=t.next_out,Qt=t.output,w=_-(n-t.avail_out),D=_+(t.avail_out-257),I=r.dmax,B=r.wsize,ve=r.whave,Ae=r.wnext,Re=r.window,_t=r.hold,Ct=r.bits,Zt=r.lencode,zt=r.distcode,wn=(1<<r.lenbits)-1,bn=(1<<r.distbits)-1;e:do{Ct<15&&(_t+=cr[l++]<<Ct,Ct+=8,_t+=cr[l++]<<Ct,Ct+=8),Ft=Zt[_t&wn];t:for(;;){if(ut=Ft>>>24,_t>>>=ut,Ct-=ut,ut=Ft>>>16&255,ut===0)Qt[_++]=Ft&65535;else if(ut&16){Xt=Ft&65535,ut&=15,ut&&(Ct<ut&&(_t+=cr[l++]<<Ct,Ct+=8),Xt+=_t&(1<<ut)-1,_t>>>=ut,Ct-=ut),Ct<15&&(_t+=cr[l++]<<Ct,Ct+=8,_t+=cr[l++]<<Ct,Ct+=8),Ft=zt[_t&bn];n:for(;;){if(ut=Ft>>>24,_t>>>=ut,Ct-=ut,ut=Ft>>>16&255,ut&16){if(Wt=Ft&65535,ut&=15,Ct<ut&&(_t+=cr[l++]<<Ct,Ct+=8,Ct<ut&&(_t+=cr[l++]<<Ct,Ct+=8)),Wt+=_t&(1<<ut)-1,Wt>I){t.msg="invalid distance too far back",r.mode=fe;break e}if(_t>>>=ut,Ct-=ut,ut=_-w,Wt>ut){if(ut=Wt-ut,ut>ve&&r.sane){t.msg="invalid distance too far back",r.mode=fe;break e}if(Jt=0,qt=Re,Ae===0){if(Jt+=B-ut,ut<Xt){Xt-=ut;do Qt[_++]=Re[Jt++];while(--ut);Jt=_-Wt,qt=Qt}}else if(Ae<ut){if(Jt+=B+Ae-ut,ut-=Ae,ut<Xt){Xt-=ut;do Qt[_++]=Re[Jt++];while(--ut);if(Jt=0,Ae<Xt){ut=Ae,Xt-=ut;do Qt[_++]=Re[Jt++];while(--ut);Jt=_-Wt,qt=Qt}}}else if(Jt+=Ae-ut,ut<Xt){Xt-=ut;do Qt[_++]=Re[Jt++];while(--ut);Jt=_-Wt,qt=Qt}for(;Xt>2;)Qt[_++]=qt[Jt++],Qt[_++]=qt[Jt++],Qt[_++]=qt[Jt++],Xt-=3;Xt&&(Qt[_++]=qt[Jt++],Xt>1&&(Qt[_++]=qt[Jt++]))}else{Jt=_-Wt;do Qt[_++]=Qt[Jt++],Qt[_++]=Qt[Jt++],Qt[_++]=Qt[Jt++],Xt-=3;while(Xt>2);Xt&&(Qt[_++]=Qt[Jt++],Xt>1&&(Qt[_++]=Qt[Jt++]))}}else if((ut&64)===0){Ft=zt[(Ft&65535)+(_t&(1<<ut)-1)];continue n}else{t.msg="invalid distance code",r.mode=fe;break e}break}}else if((ut&64)===0){Ft=Zt[(Ft&65535)+(_t&(1<<ut)-1)];continue t}else if(ut&32){r.mode=Ie;break e}else{t.msg="invalid literal/length code",r.mode=fe;break e}break}}while(l<f&&_<D);Xt=Ct>>3,l-=Xt,Ct-=Xt<<3,_t&=(1<<Ct)-1,t.next_in=l,t.next_out=_,t.avail_in=l<f?5+(f-l):5-(l-f),t.avail_out=_<D?257+(D-_):257-(_-D),r.hold=_t,r.bits=Ct},Xe=qn,lt=15,i=852,s=592,d=0,m=1,A=2,C=[3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,0,0],x=[16,16,16,16,16,16,16,16,17,17,17,17,18,18,18,18,19,19,19,19,20,20,20,20,21,21,21,21,16,72,78],V=[1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577,0,0],M=[16,16,16,16,17,17,18,18,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,26,27,27,28,28,29,29,64,64],J=function(t,n,r,l,f,_,w,D){var I=D.bits,B=0,ve=0,Ae=0,Re=0,_t=0,Ct=0,Zt=0,zt=0,wn=0,bn=0,Ft,ut,Xt,Wt,Jt,qt=null,cr=0,Qt,Io=new Xe.Buf16(lt+1),Cu=new Xe.Buf16(lt+1),Gf=null,zm=0,Wm,qf,Yf;for(B=0;B<=lt;B++)Io[B]=0;for(ve=0;ve<l;ve++)Io[n[r+ve]]++;for(_t=I,Re=lt;Re>=1&&Io[Re]===0;Re--);if(_t>Re&&(_t=Re),Re===0)return f[_++]=1<<24|64<<16|0,f[_++]=1<<24|64<<16|0,D.bits=1,0;for(Ae=1;Ae<Re&&Io[Ae]===0;Ae++);for(_t<Ae&&(_t=Ae),zt=1,B=1;B<=lt;B++)if(zt<<=1,zt-=Io[B],zt<0)return-1;if(zt>0&&(t===d||Re!==1))return-1;for(Cu[1]=0,B=1;B<lt;B++)Cu[B+1]=Cu[B]+Io[B];for(ve=0;ve<l;ve++)n[r+ve]!==0&&(w[Cu[n[r+ve]]++]=ve);if(t===d?(qt=Gf=w,Qt=19):t===m?(qt=C,cr-=257,Gf=x,zm-=257,Qt=256):(qt=V,Gf=M,Qt=-1),bn=0,ve=0,B=Ae,Jt=_,Ct=_t,Zt=0,Xt=-1,wn=1<<_t,Wt=wn-1,t===m&&wn>i||t===A&&wn>s)return 1;for(;;){Wm=B-Zt,w[ve]<Qt?(qf=0,Yf=w[ve]):w[ve]>Qt?(qf=Gf[zm+w[ve]],Yf=qt[cr+w[ve]]):(qf=32+64,Yf=0),Ft=1<<B-Zt,ut=1<<Ct,Ae=ut;do ut-=Ft,f[Jt+(bn>>Zt)+ut]=Wm<<24|qf<<16|Yf|0;while(ut!==0);for(Ft=1<<B-1;bn&Ft;)Ft>>=1;if(Ft!==0?(bn&=Ft-1,bn+=Ft):bn=0,ve++,--Io[B]===0){if(B===Re)break;B=n[r+w[ve]]}if(B>_t&&(bn&Wt)!==Xt){for(Zt===0&&(Zt=_t),Jt+=Ae,Ct=B-Zt,zt=1<<Ct;Ct+Zt<Re&&(zt-=Io[Ct+Zt],!(zt<=0));)Ct++,zt<<=1;if(wn+=1<<Ct,t===m&&wn>i||t===A&&wn>s)return 1;Xt=bn&Wt,f[Xt]=_t<<24|Ct<<16|Jt-_|0}}return bn!==0&&(f[Jt+bn]=B-Zt<<24|64<<16|0),D.bits=_t,0},Q=qn,ee=yc,Y=Ns,me=Ne,Te=J,dt=0,qe=1,Pt=2,Mt=4,oe=5,he=6,_e=0,He=1,at=2,tt=-2,bt=-3,Ye=-4,L=-5,G=8,te=1,be=2,Se=3,Ce=4,nt=5,We=6,Qe=7,Ue=8,wt=9,jt=10,Vt=11,Bt=12,lr=13,Hn=14,un=15,Sn=16,ei=17,lo=18,Yn=19,Si=20,No=21,wi=22,j=23,re=24,Pe=25,Fe=26,je=27,rt=28,pt=29,Le=30,it=31,Ke=32,Lt=852,Kt=592,Yt=15,Nn=Yt;function ti(e){return(e>>>24&255)+(e>>>8&65280)+((e&65280)<<8)+((e&255)<<24)}function mr(){this.mode=0,this.last=!1,this.wrap=0,this.havedict=!1,this.flags=0,this.dmax=0,this.check=0,this.total=0,this.head=null,this.wbits=0,this.wsize=0,this.whave=0,this.wnext=0,this.window=null,this.hold=0,this.bits=0,this.length=0,this.offset=0,this.extra=0,this.lencode=null,this.distcode=null,this.lenbits=0,this.distbits=0,this.ncode=0,this.nlen=0,this.ndist=0,this.have=0,this.next=null,this.lens=new Q.Buf16(320),this.work=new Q.Buf16(288),this.lendyn=null,this.distdyn=null,this.sane=0,this.back=0,this.was=0}function Wi(e){var t;return!e||!e.state?tt:(t=e.state,e.total_in=e.total_out=t.total=0,e.msg="",t.wrap&&(e.adler=t.wrap&1),t.mode=te,t.last=0,t.havedict=0,t.dmax=32768,t.head=null,t.hold=0,t.bits=0,t.lencode=t.lendyn=new Q.Buf32(Lt),t.distcode=t.distdyn=new Q.Buf32(Kt),t.sane=1,t.back=-1,_e)}function Rs(e){var t;return!e||!e.state?tt:(t=e.state,t.wsize=0,t.whave=0,t.wnext=0,Wi(e))}function al(e,t){var n,r;return!e||!e.state||(r=e.state,t<0?(n=0,t=-t):(n=(t>>4)+1,t<48&&(t&=15)),t&&(t<8||t>15))?tt:(r.window!==null&&r.wbits!==t&&(r.window=null),r.wrap=n,r.wbits=t,Rs(e))}function uu(e,t){var n,r;return e?(r=new mr,e.state=r,r.window=null,n=al(e,t),n!==_e&&(e.state=null),n):tt}function xr(e){return uu(e,Nn)}var Nl=!0,Ms,co;function sl(e){if(Nl){var t;for(Ms=new Q.Buf32(512),co=new Q.Buf32(32),t=0;t<144;)e.lens[t++]=8;for(;t<256;)e.lens[t++]=9;for(;t<280;)e.lens[t++]=7;for(;t<288;)e.lens[t++]=8;for(Te(qe,e.lens,0,288,Ms,0,e.work,{bits:9}),t=0;t<32;)e.lens[t++]=5;Te(Pt,e.lens,0,32,co,0,e.work,{bits:5}),Nl=!1}e.lencode=Ms,e.lenbits=9,e.distcode=co,e.distbits=5}function ll(e,t,n,r){var l,f=e.state;return f.window===null&&(f.wsize=1<<f.wbits,f.wnext=0,f.whave=0,f.window=new Q.Buf8(f.wsize)),r>=f.wsize?(Q.arraySet(f.window,t,n-f.wsize,f.wsize,0),f.wnext=0,f.whave=f.wsize):(l=f.wsize-f.wnext,l>r&&(l=r),Q.arraySet(f.window,t,n-r,l,f.wnext),r-=l,r?(Q.arraySet(f.window,t,n-r,r,0),f.wnext=r,f.whave=f.wsize):(f.wnext+=l,f.wnext===f.wsize&&(f.wnext=0),f.whave<f.wsize&&(f.whave+=l))),0}function Ic(e,t){var n,r,l,f,_,w,D,I,B,ve,Ae,Re,_t,Ct,Zt=0,zt,wn,bn,Ft,ut,Xt,Wt,Jt,qt=new Q.Buf8(4),cr,Qt,Io=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15];if(!e||!e.state||!e.output||!e.input&&e.avail_in!==0)return tt;n=e.state,n.mode===Bt&&(n.mode=lr),_=e.next_out,l=e.output,D=e.avail_out,f=e.next_in,r=e.input,w=e.avail_in,I=n.hold,B=n.bits,ve=w,Ae=D,Jt=_e;e:for(;;)switch(n.mode){case te:if(n.wrap===0){n.mode=lr;break}for(;B<16;){if(w===0)break e;w--,I+=r[f++]<<B,B+=8}if(n.wrap&2&&I===35615){n.check=0,qt[0]=I&255,qt[1]=I>>>8&255,n.check=Y(n.check,qt,2,0),I=0,B=0,n.mode=be;break}if(n.flags=0,n.head&&(n.head.done=!1),!(n.wrap&1)||(((I&255)<<8)+(I>>8))%31){e.msg="incorrect header check",n.mode=Le;break}if((I&15)!==G){e.msg="unknown compression method",n.mode=Le;break}if(I>>>=4,B-=4,Wt=(I&15)+8,n.wbits===0)n.wbits=Wt;else if(Wt>n.wbits){e.msg="invalid window size",n.mode=Le;break}n.dmax=1<<Wt,e.adler=n.check=1,n.mode=I&512?jt:Bt,I=0,B=0;break;case be:for(;B<16;){if(w===0)break e;w--,I+=r[f++]<<B,B+=8}if(n.flags=I,(n.flags&255)!==G){e.msg="unknown compression method",n.mode=Le;break}if(n.flags&57344){e.msg="unknown header flags set",n.mode=Le;break}n.head&&(n.head.text=I>>8&1),n.flags&512&&(qt[0]=I&255,qt[1]=I>>>8&255,n.check=Y(n.check,qt,2,0)),I=0,B=0,n.mode=Se;case Se:for(;B<32;){if(w===0)break e;w--,I+=r[f++]<<B,B+=8}n.head&&(n.head.time=I),n.flags&512&&(qt[0]=I&255,qt[1]=I>>>8&255,qt[2]=I>>>16&255,qt[3]=I>>>24&255,n.check=Y(n.check,qt,4,0)),I=0,B=0,n.mode=Ce;case Ce:for(;B<16;){if(w===0)break e;w--,I+=r[f++]<<B,B+=8}n.head&&(n.head.xflags=I&255,n.head.os=I>>8),n.flags&512&&(qt[0]=I&255,qt[1]=I>>>8&255,n.check=Y(n.check,qt,2,0)),I=0,B=0,n.mode=nt;case nt:if(n.flags&1024){for(;B<16;){if(w===0)break e;w--,I+=r[f++]<<B,B+=8}n.length=I,n.head&&(n.head.extra_len=I),n.flags&512&&(qt[0]=I&255,qt[1]=I>>>8&255,n.check=Y(n.check,qt,2,0)),I=0,B=0}else n.head&&(n.head.extra=null);n.mode=We;case We:if(n.flags&1024&&(Re=n.length,Re>w&&(Re=w),Re&&(n.head&&(Wt=n.head.extra_len-n.length,n.head.extra||(n.head.extra=new Array(n.head.extra_len)),Q.arraySet(n.head.extra,r,f,Re,Wt)),n.flags&512&&(n.check=Y(n.check,r,Re,f)),w-=Re,f+=Re,n.length-=Re),n.length))break e;n.length=0,n.mode=Qe;case Qe:if(n.flags&2048){if(w===0)break e;Re=0;do Wt=r[f+Re++],n.head&&Wt&&n.length<65536&&(n.head.name+=String.fromCharCode(Wt));while(Wt&&Re<w);if(n.flags&512&&(n.check=Y(n.check,r,Re,f)),w-=Re,f+=Re,Wt)break e}else n.head&&(n.head.name=null);n.length=0,n.mode=Ue;case Ue:if(n.flags&4096){if(w===0)break e;Re=0;do Wt=r[f+Re++],n.head&&Wt&&n.length<65536&&(n.head.comment+=String.fromCharCode(Wt));while(Wt&&Re<w);if(n.flags&512&&(n.check=Y(n.check,r,Re,f)),w-=Re,f+=Re,Wt)break e}else n.head&&(n.head.comment=null);n.mode=wt;case wt:if(n.flags&512){for(;B<16;){if(w===0)break e;w--,I+=r[f++]<<B,B+=8}if(I!==(n.check&65535)){e.msg="header crc mismatch",n.mode=Le;break}I=0,B=0}n.head&&(n.head.hcrc=n.flags>>9&1,n.head.done=!0),e.adler=n.check=0,n.mode=Bt;break;case jt:for(;B<32;){if(w===0)break e;w--,I+=r[f++]<<B,B+=8}e.adler=n.check=ti(I),I=0,B=0,n.mode=Vt;case Vt:if(n.havedict===0)return e.next_out=_,e.avail_out=D,e.next_in=f,e.avail_in=w,n.hold=I,n.bits=B,at;e.adler=n.check=1,n.mode=Bt;case Bt:if(t===oe||t===he)break e;case lr:if(n.last){I>>>=B&7,B-=B&7,n.mode=je;break}for(;B<3;){if(w===0)break e;w--,I+=r[f++]<<B,B+=8}switch(n.last=I&1,I>>>=1,B-=1,I&3){case 0:n.mode=Hn;break;case 1:if(sl(n),n.mode=Si,t===he){I>>>=2,B-=2;break e}break;case 2:n.mode=ei;break;case 3:e.msg="invalid block type",n.mode=Le}I>>>=2,B-=2;break;case Hn:for(I>>>=B&7,B-=B&7;B<32;){if(w===0)break e;w--,I+=r[f++]<<B,B+=8}if((I&65535)!==(I>>>16^65535)){e.msg="invalid stored block lengths",n.mode=Le;break}if(n.length=I&65535,I=0,B=0,n.mode=un,t===he)break e;case un:n.mode=Sn;case Sn:if(Re=n.length,Re){if(Re>w&&(Re=w),Re>D&&(Re=D),Re===0)break e;Q.arraySet(l,r,f,Re,_),w-=Re,f+=Re,D-=Re,_+=Re,n.length-=Re;break}n.mode=Bt;break;case ei:for(;B<14;){if(w===0)break e;w--,I+=r[f++]<<B,B+=8}if(n.nlen=(I&31)+257,I>>>=5,B-=5,n.ndist=(I&31)+1,I>>>=5,B-=5,n.ncode=(I&15)+4,I>>>=4,B-=4,n.nlen>286||n.ndist>30){e.msg="too many length or distance symbols",n.mode=Le;break}n.have=0,n.mode=lo;case lo:for(;n.have<n.ncode;){for(;B<3;){if(w===0)break e;w--,I+=r[f++]<<B,B+=8}n.lens[Io[n.have++]]=I&7,I>>>=3,B-=3}for(;n.have<19;)n.lens[Io[n.have++]]=0;if(n.lencode=n.lendyn,n.lenbits=7,cr={bits:n.lenbits},Jt=Te(dt,n.lens,0,19,n.lencode,0,n.work,cr),n.lenbits=cr.bits,Jt){e.msg="invalid code lengths set",n.mode=Le;break}n.have=0,n.mode=Yn;case Yn:for(;n.have<n.nlen+n.ndist;){for(;Zt=n.lencode[I&(1<<n.lenbits)-1],zt=Zt>>>24,wn=Zt>>>16&255,bn=Zt&65535,!(zt<=B);){if(w===0)break e;w--,I+=r[f++]<<B,B+=8}if(bn<16)I>>>=zt,B-=zt,n.lens[n.have++]=bn;else{if(bn===16){for(Qt=zt+2;B<Qt;){if(w===0)break e;w--,I+=r[f++]<<B,B+=8}if(I>>>=zt,B-=zt,n.have===0){e.msg="invalid bit length repeat",n.mode=Le;break}Wt=n.lens[n.have-1],Re=3+(I&3),I>>>=2,B-=2}else if(bn===17){for(Qt=zt+3;B<Qt;){if(w===0)break e;w--,I+=r[f++]<<B,B+=8}I>>>=zt,B-=zt,Wt=0,Re=3+(I&7),I>>>=3,B-=3}else{for(Qt=zt+7;B<Qt;){if(w===0)break e;w--,I+=r[f++]<<B,B+=8}I>>>=zt,B-=zt,Wt=0,Re=11+(I&127),I>>>=7,B-=7}if(n.have+Re>n.nlen+n.ndist){e.msg="invalid bit length repeat",n.mode=Le;break}for(;Re--;)n.lens[n.have++]=Wt}}if(n.mode===Le)break;if(n.lens[256]===0){e.msg="invalid code -- missing end-of-block",n.mode=Le;break}if(n.lenbits=9,cr={bits:n.lenbits},Jt=Te(qe,n.lens,0,n.nlen,n.lencode,0,n.work,cr),n.lenbits=cr.bits,Jt){e.msg="invalid literal/lengths set",n.mode=Le;break}if(n.distbits=6,n.distcode=n.distdyn,cr={bits:n.distbits},Jt=Te(Pt,n.lens,n.nlen,n.ndist,n.distcode,0,n.work,cr),n.distbits=cr.bits,Jt){e.msg="invalid distances set",n.mode=Le;break}if(n.mode=Si,t===he)break e;case Si:n.mode=No;case No:if(w>=6&&D>=258){e.next_out=_,e.avail_out=D,e.next_in=f,e.avail_in=w,n.hold=I,n.bits=B,me(e,Ae),_=e.next_out,l=e.output,D=e.avail_out,f=e.next_in,r=e.input,w=e.avail_in,I=n.hold,B=n.bits,n.mode===Bt&&(n.back=-1);break}for(n.back=0;Zt=n.lencode[I&(1<<n.lenbits)-1],zt=Zt>>>24,wn=Zt>>>16&255,bn=Zt&65535,!(zt<=B);){if(w===0)break e;w--,I+=r[f++]<<B,B+=8}if(wn&&(wn&240)===0){for(Ft=zt,ut=wn,Xt=bn;Zt=n.lencode[Xt+((I&(1<<Ft+ut)-1)>>Ft)],zt=Zt>>>24,wn=Zt>>>16&255,bn=Zt&65535,!(Ft+zt<=B);){if(w===0)break e;w--,I+=r[f++]<<B,B+=8}I>>>=Ft,B-=Ft,n.back+=Ft}if(I>>>=zt,B-=zt,n.back+=zt,n.length=bn,wn===0){n.mode=Fe;break}if(wn&32){n.back=-1,n.mode=Bt;break}if(wn&64){e.msg="invalid literal/length code",n.mode=Le;break}n.extra=wn&15,n.mode=wi;case wi:if(n.extra){for(Qt=n.extra;B<Qt;){if(w===0)break e;w--,I+=r[f++]<<B,B+=8}n.length+=I&(1<<n.extra)-1,I>>>=n.extra,B-=n.extra,n.back+=n.extra}n.was=n.length,n.mode=j;case j:for(;Zt=n.distcode[I&(1<<n.distbits)-1],zt=Zt>>>24,wn=Zt>>>16&255,bn=Zt&65535,!(zt<=B);){if(w===0)break e;w--,I+=r[f++]<<B,B+=8}if((wn&240)===0){for(Ft=zt,ut=wn,Xt=bn;Zt=n.distcode[Xt+((I&(1<<Ft+ut)-1)>>Ft)],zt=Zt>>>24,wn=Zt>>>16&255,bn=Zt&65535,!(Ft+zt<=B);){if(w===0)break e;w--,I+=r[f++]<<B,B+=8}I>>>=Ft,B-=Ft,n.back+=Ft}if(I>>>=zt,B-=zt,n.back+=zt,wn&64){e.msg="invalid distance code",n.mode=Le;break}n.offset=bn,n.extra=wn&15,n.mode=re;case re:if(n.extra){for(Qt=n.extra;B<Qt;){if(w===0)break e;w--,I+=r[f++]<<B,B+=8}n.offset+=I&(1<<n.extra)-1,I>>>=n.extra,B-=n.extra,n.back+=n.extra}if(n.offset>n.dmax){e.msg="invalid distance too far back",n.mode=Le;break}n.mode=Pe;case Pe:if(D===0)break e;if(Re=Ae-D,n.offset>Re){if(Re=n.offset-Re,Re>n.whave&&n.sane){e.msg="invalid distance too far back",n.mode=Le;break}Re>n.wnext?(Re-=n.wnext,_t=n.wsize-Re):_t=n.wnext-Re,Re>n.length&&(Re=n.length),Ct=n.window}else Ct=l,_t=_-n.offset,Re=n.length;Re>D&&(Re=D),D-=Re,n.length-=Re;do l[_++]=Ct[_t++];while(--Re);n.length===0&&(n.mode=No);break;case Fe:if(D===0)break e;l[_++]=n.length,D--,n.mode=No;break;case je:if(n.wrap){for(;B<32;){if(w===0)break e;w--,I|=r[f++]<<B,B+=8}if(Ae-=D,e.total_out+=Ae,n.total+=Ae,Ae&&(e.adler=n.check=n.flags?Y(n.check,l,Ae,_-Ae):ee(n.check,l,Ae,_-Ae)),Ae=D,(n.flags?I:ti(I))!==n.check){e.msg="incorrect data check",n.mode=Le;break}I=0,B=0}n.mode=rt;case rt:if(n.wrap&&n.flags){for(;B<32;){if(w===0)break e;w--,I+=r[f++]<<B,B+=8}if(I!==(n.total&4294967295)){e.msg="incorrect length check",n.mode=Le;break}I=0,B=0}n.mode=pt;case pt:Jt=He;break e;case Le:Jt=bt;break e;case it:return Ye;case Ke:default:return tt}return e.next_out=_,e.avail_out=D,e.next_in=f,e.avail_in=w,n.hold=I,n.bits=B,(n.wsize||Ae!==e.avail_out&&n.mode<Le&&(n.mode<je||t!==Mt))&&ll(e,e.output,e.next_out,Ae-e.avail_out),ve-=e.avail_in,Ae-=e.avail_out,e.total_in+=ve,e.total_out+=Ae,n.total+=Ae,n.wrap&&Ae&&(e.adler=n.check=n.flags?Y(n.check,l,Ae,e.next_out-Ae):ee(n.check,l,Ae,e.next_out-Ae)),e.data_type=n.bits+(n.last?64:0)+(n.mode===Bt?128:0)+(n.mode===Si||n.mode===un?256:0),(ve===0&&Ae===0||t===Mt)&&Jt===_e&&(Jt=L),Jt}function Il(e){if(!e||!e.state)return tt;var t=e.state;return t.window&&(t.window=null),e.state=null,_e}function us(e,t){var n;return!e||!e.state||(n=e.state,(n.wrap&2)===0)?tt:(n.head=t,t.done=!1,_e)}function fs(e,t){var n=t.length,r,l,f;return!e||!e.state||(r=e.state,r.wrap!==0&&r.mode!==Vt)?tt:r.mode===Vt&&(l=1,l=ee(l,t,n,0),l!==r.check)?bt:(f=ll(e,t,n,n),f?(r.mode=it,Ye):(r.havedict=1,_e))}xt.inflateReset=Rs,xt.inflateReset2=al,xt.inflateResetKeep=Wi,xt.inflateInit=xr,xt.inflateInit2=uu,xt.inflate=Ic,xt.inflateEnd=Il,xt.inflateGetHeader=us,xt.inflateSetDictionary=fs,xt.inflateInfo="pako inflate (from Nodeca project)";var cl={Z_NO_FLUSH:0,Z_PARTIAL_FLUSH:1,Z_SYNC_FLUSH:2,Z_FULL_FLUSH:3,Z_FINISH:4,Z_BLOCK:5,Z_TREES:6,Z_OK:0,Z_STREAM_END:1,Z_NEED_DICT:2,Z_ERRNO:-1,Z_STREAM_ERROR:-2,Z_DATA_ERROR:-3,Z_BUF_ERROR:-5,Z_NO_COMPRESSION:0,Z_BEST_SPEED:1,Z_BEST_COMPRESSION:9,Z_DEFAULT_COMPRESSION:-1,Z_FILTERED:1,Z_HUFFMAN_ONLY:2,Z_RLE:3,Z_FIXED:4,Z_DEFAULT_STRATEGY:0,Z_BINARY:0,Z_TEXT:1,Z_UNKNOWN:2,Z_DEFLATED:8};function gf(){this.text=0,this.time=0,this.xflags=0,this.os=0,this.extra=null,this.extra_len=0,this.name="",this.comment="",this.hcrc=0,this.done=!1}var $u=gf,kl=xt,oc=qn,mf=Ea,di=cl,wd=el,hb=cu,gb=$u,jp=Object.prototype.toString;function kc(e){if(!(this instanceof kc))return new kc(e);this.options=oc.assign({chunkSize:16384,windowBits:0,to:""},e||{});var t=this.options;t.raw&&t.windowBits>=0&&t.windowBits<16&&(t.windowBits=-t.windowBits,t.windowBits===0&&(t.windowBits=-15)),t.windowBits>=0&&t.windowBits<16&&!(e&&e.windowBits)&&(t.windowBits+=32),t.windowBits>15&&t.windowBits<48&&(t.windowBits&15)===0&&(t.windowBits|=15),this.err=0,this.msg="",this.ended=!1,this.chunks=[],this.strm=new hb,this.strm.avail_out=0;var n=kl.inflateInit2(this.strm,t.windowBits);if(n!==di.Z_OK)throw new Error(wd[n]);if(this.header=new gb,kl.inflateGetHeader(this.strm,this.header),t.dictionary&&(typeof t.dictionary=="string"?t.dictionary=mf.string2buf(t.dictionary):jp.call(t.dictionary)==="[object ArrayBuffer]"&&(t.dictionary=new Uint8Array(t.dictionary)),t.raw&&(n=kl.inflateSetDictionary(this.strm,t.dictionary),n!==di.Z_OK)))throw new Error(wd[n])}kc.prototype.push=function(e,t){var n=this.strm,r=this.options.chunkSize,l=this.options.dictionary,f,_,w,D,I,B=!1;if(this.ended)return!1;_=t===~~t?t:t===!0?di.Z_FINISH:di.Z_NO_FLUSH,typeof e=="string"?n.input=mf.binstring2buf(e):jp.call(e)==="[object ArrayBuffer]"?n.input=new Uint8Array(e):n.input=e,n.next_in=0,n.avail_in=n.input.length;do{if(n.avail_out===0&&(n.output=new oc.Buf8(r),n.next_out=0,n.avail_out=r),f=kl.inflate(n,di.Z_NO_FLUSH),f===di.Z_NEED_DICT&&l&&(f=kl.inflateSetDictionary(this.strm,l)),f===di.Z_BUF_ERROR&&B===!0&&(f=di.Z_OK,B=!1),f!==di.Z_STREAM_END&&f!==di.Z_OK)return this.onEnd(f),this.ended=!0,!1;n.next_out&&(n.avail_out===0||f===di.Z_STREAM_END||n.avail_in===0&&(_===di.Z_FINISH||_===di.Z_SYNC_FLUSH))&&(this.options.to==="string"?(w=mf.utf8border(n.output,n.next_out),D=n.next_out-w,I=mf.buf2string(n.output,w),n.next_out=D,n.avail_out=r-D,D&&oc.arraySet(n.output,n.output,w,D,0),this.onData(I)):this.onData(oc.shrinkBuf(n.output,n.next_out))),n.avail_in===0&&n.avail_out===0&&(B=!0)}while((n.avail_in>0||n.avail_out===0)&&f!==di.Z_STREAM_END);return f===di.Z_STREAM_END&&(_=di.Z_FINISH),_===di.Z_FINISH?(f=kl.inflateEnd(this.strm),this.onEnd(f),this.ended=!0,f===di.Z_OK):(_===di.Z_SYNC_FLUSH&&(this.onEnd(di.Z_OK),n.avail_out=0),!0)},kc.prototype.onData=function(e){this.chunks.push(e)},kc.prototype.onEnd=function(e){e===di.Z_OK&&(this.options.to==="string"?this.result=this.chunks.join(""):this.result=oc.flattenChunks(this.chunks)),this.chunks=[],this.err=e,this.msg=this.strm.msg};function Cd(e,t){var n=new kc(t);if(n.push(e,!0),n.err)throw n.msg||wd[n.err];return n.result}function mb(e,t){return t=t||{},t.raw=!0,Cd(e,t)}kt.Inflate=kc,kt.inflate=Cd,kt.inflateRaw=mb,kt.ungzip=Cd;var vb=qn.assign,_b=Nr,bb=kt,yb=cl,zp={};vb(zp,_b,bb,yb);var Wp=zp;let Eb="upx2px",Sb=[{name:"upx",type:[Number,String],required:!0}],wb=1e-4,Cb=750,Gp=!1,Ad=0,qp=0,Yp=960,Jp=375,Kp=750;function Ab(){let{windowWidth:e,pixelRatio:t,platform:n}=Xo();Ad=e,qp=t,Gp=n==="ios"}function Od(e,t){let n=Number(e);return isNaN(n)?t:n}function Ob(){let e=k.globalStyle||{};Yp=Od(e.rpxCalcMaxDeviceWidth,960),Jp=Od(e.rpxCalcBaseDeviceWidth,375),Kp=Od(e.rpxCalcBaseDeviceWidth,750)}let Tb=Ht(Eb,(e,t)=>{if(Ad===0&&(Ab(),Ob()),e=Number(e),e===0)return 0;let n=t||Ad;n=e===Kp||n<=Yp?n:Jp;let r=e/Cb*n;return r<0&&(r=-r),r=Math.floor(r+wb),r===0&&(qp===1||!Gp?r=1:r=.5),e<0?-r:r},Sb),Pb="addInterceptor",Nb="removeInterceptor",Zp=[{name:"method",type:[String,Object],required:!0}],Ib=Zp;function Xp(e,t){Object.keys(t).forEach(n=>{Z.isFunction(t[n])&&(e[n]=kb(e[n],t[n]))})}function Qp(e,t){!e||!t||Object.keys(t).forEach(n=>{let r=e[n],l=t[n];Z.isArray(r)&&Z.isFunction(l)&&Z.remove(r,l)})}function kb(e,t){let n=t?e?e.concat(t):Z.isArray(t)?t:[t]:e;return n&&xb(n)}function xb(e){let t=[];for(let n=0;n<e.length;n++)t.indexOf(e[n])===-1&&t.push(e[n]);return t}let Rb=Ht(Pb,(e,t)=>{Z.isString(e)&&Z.isPlainObject(t)?Xp(Cn[e]||(Cn[e]={}),t):Z.isPlainObject(e)&&Xp(mn,e)},Zp),Mb=Ht(Nb,(e,t)=>{Z.isString(e)?Z.isPlainObject(t)?Qp(Cn[e],t):delete Cn[e]:Z.isPlainObject(e)&&Qp(mn,e)},Ib),Bb={},Lb="$on",eh=[{name:"event",type:String,required:!0},{name:"callback",type:Function,required:!0}],Fb="$once",Db=eh,Ub="$off",Vb=[{name:"event",type:[String,Array]},{name:"callback",type:[Function,Number]}],$b="$emit",Hb=[{name:"event",type:String,required:!0}];class jb{constructor(){this.$emitter=new se.Emitter}on(t,n){return this.$emitter.on(t,n)}once(t,n){return this.$emitter.once(t,n)}off(t,n){if(!t){this.$emitter.e={};return}this.$emitter.off(t,n)}emit(t,...n){this.$emitter.emit(t,...n)}}let fu=new jb,zb=Ht(Lb,(e,t)=>(fu.on(e,t),()=>fu.off(e,t)),eh),Wb=Ht(Fb,(e,t)=>(fu.once(e,t),()=>fu.off(e,t)),Db),Gb=Ht(Ub,(e,t)=>{Z.isArray(e)||(e=e?[e]:[]),e.forEach(n=>{fu.off(n,t)})},Vb),qb=Ht($b,(e,...t)=>{fu.emit(e,...t)},Hb),th=[{name:"id",type:String,required:!0}],Yb="createVideoContext",Jb="createMapContext",Kb=th,Zb="createCanvasContext",Xb=[{name:"canvasId",type:String,required:!0},{name:"componentInstance",type:Object}],Qb="createInnerAudioContext",ey="createLivePusherContext",ty=th.concat({name:"componentInstance",type:Object}),ny=[.5,.8,1,1.25,1.5,2];class Td{constructor(t,n){this.id=t,this.pageId=n}play(){Xr(this.id,this.pageId,"play")}pause(){Xr(this.id,this.pageId,"pause")}stop(){Xr(this.id,this.pageId,"stop")}seek(t){Xr(this.id,this.pageId,"seek",{position:t})}sendDanmu(t){Xr(this.id,this.pageId,"sendDanmu",t)}playbackRate(t){~ny.indexOf(t)||(t=1),Xr(this.id,this.pageId,"playbackRate",{rate:t})}requestFullScreen(t={}){Xr(this.id,this.pageId,"requestFullScreen",t)}exitFullScreen(){Xr(this.id,this.pageId,"exitFullScreen")}showStatusBar(){Xr(this.id,this.pageId,"showStatusBar")}hideStatusBar(){Xr(this.id,this.pageId,"hideStatusBar")}}let ry=Ht(Yb,(e,t)=>t?new Td(e,vn(t)):new Td(e,vn(Zn()))),iy=(e,t)=>{let n=t.errMsg||"";new RegExp("\\:\\s*fail").test(n)?e.fail&&e.fail(t):e.success&&e.success(t),e.complete&&e.complete(t)},Gi=(e,t,n,r)=>{_l(e,t,n,r,l=>{r&&iy(r,l)})};class Pd{constructor(t,n){this.id=t,this.pageId=n}getCenterLocation(t){Gi(this.id,this.pageId,"getCenterLocation",t)}moveToLocation(t){Gi(this.id,this.pageId,"moveToLocation",t)}getScale(t){Gi(this.id,this.pageId,"getScale",t)}getRegion(t){Gi(this.id,this.pageId,"getRegion",t)}includePoints(t){Gi(this.id,this.pageId,"includePoints",t)}translateMarker(t){Gi(this.id,this.pageId,"translateMarker",t)}$getAppMap(){return a.maps.getMapById(this.pageId+"-map-"+this.id)}addCustomLayer(t){Gi(this.id,this.pageId,"addCustomLayer",t)}removeCustomLayer(t){Gi(this.id,this.pageId,"removeCustomLayer",t)}addGroundOverlay(t){Gi(this.id,this.pageId,"addGroundOverlay",t)}removeGroundOverlay(t){Gi(this.id,this.pageId,"removeGroundOverlay",t)}updateGroundOverlay(t){Gi(this.id,this.pageId,"updateGroundOverlay",t)}initMarkerCluster(t){Gi(this.id,this.pageId,"initMarkerCluster",t)}addMarkers(t){Gi(this.id,this.pageId,"addMarkers",t)}removeMarkers(t){Gi(this.id,this.pageId,"removeMarkers",t)}moveAlong(t){Gi(this.id,this.pageId,"moveAlong",t)}setLocMarkerIcon(t){Gi(this.id,this.pageId,"setLocMarkerIcon",t)}openMapApp(t){Gi(this.id,this.pageId,"openMapApp",t)}on(t,n){Gi(this.id,this.pageId,"on",{name:t,callback:n})}}let oy=Ht(Jb,(e,t)=>t?new Pd(e,vn(t)):new Pd(e,vn(Zn())),Kb);function ac(e,t){return function(n,r){n?r[e]=Math.round(n):typeof t!="undefined"&&(r[e]=t)}}let nh=ac("width"),rh=ac("height"),ay="canvasGetImageData",ih={formatArgs:{x:ac("x"),y:ac("y"),width:nh,height:rh}},oh={canvasId:{type:String,required:!0},x:{type:Number,required:!0},y:{type:Number,required:!0},width:{type:Number,required:!0},height:{type:Number,required:!0}},sy="canvasPutImageData",ly=ih,cy=Z.extend({data:{type:Uint8ClampedArray,required:!0}},oh,{height:{type:Number}}),ah={PNG:"png",JPG:"jpg",JPEG:"jpg"},uy="canvasToTempFilePath",fy={formatArgs:{x:ac("x",0),y:ac("y",0),width:nh,height:rh,destWidth:ac("destWidth"),destHeight:ac("destHeight"),fileType(e,t){e=(e||"").toUpperCase();let n=ah[e];n||(n=ah.PNG),t.fileType=n},quality(e,t){t.quality=e&&e>0&&e<1?e:1}}},dy={x:Number,y:Number,width:Number,height:Number,destWidth:Number,destHeight:Number,canvasId:{type:String,required:!0},fileType:String,quality:Number};function vf(e,t,n,r,l){St.invokeViewMethod(`canvas.${e}`,{type:n,data:r},t,f=>{l&&l(f)})}var py=["scale","rotate","translate","setTransform","transform"],hy=["drawImage","fillText","fill","stroke","fillRect","strokeRect","clearRect","strokeText"],gy=["setFillStyle","setTextAlign","setStrokeStyle","setGlobalAlpha","setShadow","setFontSize","setLineCap","setLineJoin","setLineWidth","setMiterLimit","setTextBaseline","setLineDash"];function my(e,t){let r=document.createElement("canvas").getContext("2d");return r.font=t,r.measureText(e).width||0}let sh={aliceblue:"#f0f8ff",antiquewhite:"#faebd7",aqua:"#00ffff",aquamarine:"#7fffd4",azure:"#f0ffff",beige:"#f5f5dc",bisque:"#ffe4c4",black:"#000000",blanchedalmond:"#ffebcd",blue:"#0000ff",blueviolet:"#8a2be2",brown:"#a52a2a",burlywood:"#deb887",cadetblue:"#5f9ea0",chartreuse:"#7fff00",chocolate:"#d2691e",coral:"#ff7f50",cornflowerblue:"#6495ed",cornsilk:"#fff8dc",crimson:"#dc143c",cyan:"#00ffff",darkblue:"#00008b",darkcyan:"#008b8b",darkgoldenrod:"#b8860b",darkgray:"#a9a9a9",darkgrey:"#a9a9a9",darkgreen:"#006400",darkkhaki:"#bdb76b",darkmagenta:"#8b008b",darkolivegreen:"#556b2f",darkorange:"#ff8c00",darkorchid:"#9932cc",darkred:"#8b0000",darksalmon:"#e9967a",darkseagreen:"#8fbc8f",darkslateblue:"#483d8b",darkslategray:"#2f4f4f",darkslategrey:"#2f4f4f",darkturquoise:"#00ced1",darkviolet:"#9400d3",deeppink:"#ff1493",deepskyblue:"#00bfff",dimgray:"#696969",dimgrey:"#696969",dodgerblue:"#1e90ff",firebrick:"#b22222",floralwhite:"#fffaf0",forestgreen:"#228b22",fuchsia:"#ff00ff",gainsboro:"#dcdcdc",ghostwhite:"#f8f8ff",gold:"#ffd700",goldenrod:"#daa520",gray:"#808080",grey:"#808080",green:"#008000",greenyellow:"#adff2f",honeydew:"#f0fff0",hotpink:"#ff69b4",indianred:"#cd5c5c",indigo:"#4b0082",ivory:"#fffff0",khaki:"#f0e68c",lavender:"#e6e6fa",lavenderblush:"#fff0f5",lawngreen:"#7cfc00",lemonchiffon:"#fffacd",lightblue:"#add8e6",lightcoral:"#f08080",lightcyan:"#e0ffff",lightgoldenrodyellow:"#fafad2",lightgray:"#d3d3d3",lightgrey:"#d3d3d3",lightgreen:"#90ee90",lightpink:"#ffb6c1",lightsalmon:"#ffa07a",lightseagreen:"#20b2aa",lightskyblue:"#87cefa",lightslategray:"#778899",lightslategrey:"#778899",lightsteelblue:"#b0c4de",lightyellow:"#ffffe0",lime:"#00ff00",limegreen:"#32cd32",linen:"#faf0e6",magenta:"#ff00ff",maroon:"#800000",mediumaquamarine:"#66cdaa",mediumblue:"#0000cd",mediumorchid:"#ba55d3",mediumpurple:"#9370db",mediumseagreen:"#3cb371",mediumslateblue:"#7b68ee",mediumspringgreen:"#00fa9a",mediumturquoise:"#48d1cc",mediumvioletred:"#c71585",midnightblue:"#191970",mintcream:"#f5fffa",mistyrose:"#ffe4e1",moccasin:"#ffe4b5",navajowhite:"#ffdead",navy:"#000080",oldlace:"#fdf5e6",olive:"#808000",olivedrab:"#6b8e23",orange:"#ffa500",orangered:"#ff4500",orchid:"#da70d6",palegoldenrod:"#eee8aa",palegreen:"#98fb98",paleturquoise:"#afeeee",palevioletred:"#db7093",papayawhip:"#ffefd5",peachpuff:"#ffdab9",peru:"#cd853f",pink:"#ffc0cb",plum:"#dda0dd",powderblue:"#b0e0e6",purple:"#800080",rebeccapurple:"#663399",red:"#ff0000",rosybrown:"#bc8f8f",royalblue:"#4169e1",saddlebrown:"#8b4513",salmon:"#fa8072",sandybrown:"#f4a460",seagreen:"#2e8b57",seashell:"#fff5ee",sienna:"#a0522d",silver:"#c0c0c0",skyblue:"#87ceeb",slateblue:"#6a5acd",slategray:"#708090",slategrey:"#708090",snow:"#fffafa",springgreen:"#00ff7f",steelblue:"#4682b4",tan:"#d2b48c",teal:"#008080",thistle:"#d8bfd8",tomato:"#ff6347",turquoise:"#40e0d0",violet:"#ee82ee",wheat:"#f5deb3",white:"#ffffff",whitesmoke:"#f5f5f5",yellow:"#ffff00",yellowgreen:"#9acd32",transparent:"#00000000"};function Nd(e){e=e||"#000000";let t=null;if((t=/^#([0-9|A-F|a-f]{6})$/.exec(e))!=null){let r=parseInt(t[1].slice(0,2),16),l=parseInt(t[1].slice(2,4),16),f=parseInt(t[1].slice(4),16);return[r,l,f,255]}if((t=/^#([0-9|A-F|a-f]{3})$/.exec(e))!=null){let r=t[1].slice(0,1),l=t[1].slice(1,2),f=t[1].slice(2,3);return r=parseInt(r+r,16),l=parseInt(l+l,16),f=parseInt(f+f,16),[r,l,f,255]}if((t=/^rgb\((.+)\)$/.exec(e))!=null)return t[1].split(",").map(function(r){return Math.min(255,parseInt(r.trim()))}).concat(255);if((t=/^rgba\((.+)\)$/.exec(e))!=null)return t[1].split(",").map(function(r,l){return l===3?Math.floor(255*parseFloat(r.trim())):Math.min(255,parseInt(r.trim()))});var n=e.toLowerCase();if(Z.hasOwn(sh,n)){t=/^#([0-9|A-F|a-f]{6,8})$/.exec(sh[n]);let r=parseInt(t[1].slice(0,2),16),l=parseInt(t[1].slice(2,4),16),f=parseInt(t[1].slice(4,6),16),_=parseInt(t[1].slice(6,8),16);return _=_>=0?_:255,[r,l,f,_]}return console.error("unsupported color:"+e),[0,0,0,255]}class lh{constructor(t,n){this.type=t,this.data=n,this.colorStop=[]}addColorStop(t,n){this.colorStop.push([t,Nd(n)])}}class vy{constructor(t,n){this.type="pattern",this.data=t,this.colorStop=n}}class _y{constructor(t){this.width=t}}let by=()=>bi;class Hu{constructor(t,n){this.id=t,this.pageId=n,this.actions=[],this.path=[],this.subpath=[],this.drawingState=[],this.state={lineDash:[0,0],shadowOffsetX:0,shadowOffsetY:0,shadowBlur:0,shadowColor:[0,0,0,0],font:"10px sans-serif",fontSize:10,fontWeight:"normal",fontStyle:"normal",fontFamily:"sans-serif"}}setFillStyle(t){console.log("initCanvasContextProperty implemented.")}setStrokeStyle(t){console.log("initCanvasContextProperty implemented.")}setShadow(t,n,r,l){console.log("initCanvasContextProperty implemented.")}addColorStop(t,n){console.log("initCanvasContextProperty implemented.")}setLineWidth(t){console.log("initCanvasContextProperty implemented.")}setLineCap(t){console.log("initCanvasContextProperty implemented.")}setLineJoin(t){console.log("initCanvasContextProperty implemented.")}setLineDash(t,n){console.log("initCanvasContextProperty implemented.")}setMiterLimit(t){console.log("initCanvasContextProperty implemented.")}fillRect(t,n,r,l){console.log("initCanvasContextProperty implemented.")}strokeRect(t,n,r,l){console.log("initCanvasContextProperty implemented.")}clearRect(t,n,r,l){console.log("initCanvasContextProperty implemented.")}fill(){console.log("initCanvasContextProperty implemented.")}stroke(){console.log("initCanvasContextProperty implemented.")}scale(t,n){console.log("initCanvasContextProperty implemented.")}rotate(t){console.log("initCanvasContextProperty implemented.")}translate(t,n){console.log("initCanvasContextProperty implemented.")}setFontSize(t){console.log("initCanvasContextProperty implemented.")}fillText(t,n,r,l){console.log("initCanvasContextProperty implemented.")}setTextAlign(t){console.log("initCanvasContextProperty implemented.")}setTextBaseline(t){console.log("initCanvasContextProperty implemented.")}drawImage(t,n,r,l,f,_,w,D,I){console.log("initCanvasContextProperty implemented.")}setGlobalAlpha(t){console.log("initCanvasContextProperty implemented.")}strokeText(t,n,r,l){console.log("initCanvasContextProperty implemented.")}setTransform(t,n,r,l,f,_){console.log("initCanvasContextProperty implemented.")}draw(t=!1,n){var r=[...this.actions];this.actions=[],this.path=[],vf(this.id,this.pageId,"actionsChanged",{actions:r,reserve:t},n)}createLinearGradient(t,n,r,l){return new lh("linear",[t,n,r,l])}createCircularGradient(t,n,r){return new lh("radial",[t,n,r])}createPattern(t,n){if(n===void 0)console.error("Failed to execute 'createPattern' on 'CanvasContext': 2 arguments required, but only 1 present.");else if(["repeat","repeat-x","repeat-y","no-repeat"].indexOf(n)<0)console.error("Failed to execute 'createPattern' on 'CanvasContext': The provided type ('"+n+"') is not one of 'repeat', 'no-repeat', 'repeat-x', or 'repeat-y'.");else return new vy(t,n)}measureText(t,n){let r=this.state.font,l=0;{let f=a.webview.all().find(_=>_.getURL().endsWith("www/__uniappview.html"));f&&(l=Number(f.evalJSSync(`(${my.toString()})(${JSON.stringify(t)},${JSON.stringify(r)})`)))}return new _y(l)}save(){this.actions.push({method:"save",data:[]}),this.drawingState.push(this.state)}restore(){this.actions.push({method:"restore",data:[]}),this.state=this.drawingState.pop()||{lineDash:[0,0],shadowOffsetX:0,shadowOffsetY:0,shadowBlur:0,shadowColor:[0,0,0,0],font:"10px sans-serif",fontSize:10,fontWeight:"normal",fontStyle:"normal",fontFamily:"sans-serif"}}beginPath(){this.path=[],this.subpath=[],this.path.push({method:"beginPath",data:[]})}moveTo(t,n){this.path.push({method:"moveTo",data:[t,n]}),this.subpath=[[t,n]]}lineTo(t,n){this.path.length===0&&this.subpath.length===0?this.path.push({method:"moveTo",data:[t,n]}):this.path.push({method:"lineTo",data:[t,n]}),this.subpath.push([t,n])}quadraticCurveTo(t,n,r,l){this.path.push({method:"quadraticCurveTo",data:[t,n,r,l]}),this.subpath.push([r,l])}bezierCurveTo(t,n,r,l,f,_){this.path.push({method:"bezierCurveTo",data:[t,n,r,l,f,_]}),this.subpath.push([f,_])}arc(t,n,r,l,f,_=!1){this.path.push({method:"arc",data:[t,n,r,l,f,_]}),this.subpath.push([t,n])}rect(t,n,r,l){this.path.push({method:"rect",data:[t,n,r,l]}),this.subpath=[[t,n]]}arcTo(t,n,r,l,f){this.path.push({method:"arcTo",data:[t,n,r,l,f]}),this.subpath.push([r,l])}clip(){this.actions.push({method:"clip",data:[...this.path]})}closePath(){this.path.push({method:"closePath",data:[]}),this.subpath.length&&(this.subpath=[this.subpath.shift()])}clearActions(){this.actions=[],this.path=[],this.subpath=[]}getActions(){var t=[...this.actions];return this.clearActions(),t}set lineDashOffset(t){this.actions.push({method:"setLineDashOffset",data:[t]})}set globalCompositeOperation(t){this.actions.push({method:"setGlobalCompositeOperation",data:[t]})}set shadowBlur(t){this.actions.push({method:"setShadowBlur",data:[t]})}set shadowColor(t){this.actions.push({method:"setShadowColor",data:[t]})}set shadowOffsetX(t){this.actions.push({method:"setShadowOffsetX",data:[t]})}set shadowOffsetY(t){this.actions.push({method:"setShadowOffsetY",data:[t]})}set font(t){var n=this;this.state.font=t;var r=t.match(/^(([\w\-]+\s)*)(\d+r?px)(\/(\d+\.?\d*(r?px)?))?\s+(.*)/);if(r){var l=r[1].trim().split(/\s/),f=parseFloat(r[3]),_=r[7],w=[];l.forEach(function(I,B){["italic","oblique","normal"].indexOf(I)>-1?(w.push({method:"setFontStyle",data:[I]}),n.state.fontStyle=I):["bold","normal"].indexOf(I)>-1?(w.push({method:"setFontWeight",data:[I]}),n.state.fontWeight=I):B===0?(w.push({method:"setFontStyle",data:["normal"]}),n.state.fontStyle="normal"):B===1&&D()}),l.length===1&&D(),l=w.map(function(I){return I.data[0]}).join(" "),this.state.fontSize=f,this.state.fontFamily=_,this.actions.push({method:"setFont",data:[`${l} ${f}px ${_}`]})}else console.warn("Failed to set 'font' on 'CanvasContext': invalid format.");function D(){w.push({method:"setFontWeight",data:["normal"]}),n.state.fontWeight="normal"}}get font(){return this.state.font}set fillStyle(t){this.setFillStyle(t)}set strokeStyle(t){this.setStrokeStyle(t)}set globalAlpha(t){t=Math.floor(255*parseFloat(t)),this.actions.push({method:"setGlobalAlpha",data:[t]})}set textAlign(t){this.actions.push({method:"setTextAlign",data:[t]})}set lineCap(t){this.actions.push({method:"setLineCap",data:[t]})}set lineJoin(t){this.actions.push({method:"setLineJoin",data:[t]})}set lineWidth(t){this.actions.push({method:"setLineWidth",data:[t]})}set miterLimit(t){this.actions.push({method:"setMiterLimit",data:[t]})}set textBaseline(t){this.actions.push({method:"setTextBaseline",data:[t]})}}let yy=se.once(()=>{[...py,...hy].forEach(function(e){function t(n){switch(n){case"fill":case"stroke":return function(){this.actions.push({method:n+"Path",data:[...this.path]})};case"fillRect":return function(r,l,f,_){this.actions.push({method:"fillPath",data:[{method:"rect",data:[r,l,f,_]}]})};case"strokeRect":return function(r,l,f,_){this.actions.push({method:"strokePath",data:[{method:"rect",data:[r,l,f,_]}]})};case"fillText":case"strokeText":return function(r,l,f,_){var w=[r.toString(),l,f];typeof _=="number"&&w.push(_),this.actions.push({method:n,data:w})};case"drawImage":return function(r,l,f,_,w,D,I,B,ve){ve===void 0&&(D=l,I=f,B=_,ve=w,l=void 0,f=void 0,_=void 0,w=void 0);var Ae;function Re(_t){return typeof _t=="number"}Ae=Re(l)&&Re(f)&&Re(_)&&Re(w)?[r,D,I,B,ve,l,f,_,w]:Re(B)&&Re(ve)?[r,D,I,B,ve]:[r,D,I],this.actions.push({method:n,data:Ae})};default:return function(...r){this.actions.push({method:n,data:r})}}}Hu.prototype[e]=t(e)}),gy.forEach(function(e){function t(n){switch(n){case"setFillStyle":case"setStrokeStyle":return function(r){typeof r!="object"?this.actions.push({method:n,data:["normal",Nd(r)]}):this.actions.push({method:n,data:[r.type,r.data,r.colorStop]})};case"setGlobalAlpha":return function(r){r=Math.floor(255*parseFloat(r)),this.actions.push({method:n,data:[r]})};case"setShadow":return function(r,l,f,_){_=Nd(_),this.actions.push({method:n,data:[r,l,f,_]}),this.state.shadowBlur=f,this.state.shadowColor=_,this.state.shadowOffsetX=r,this.state.shadowOffsetY=l};case"setLineDash":return function(r,l){r=r||[0,0],l=l||0,this.actions.push({method:n,data:[r,l]}),this.state.lineDash=r};case"setFontSize":return function(r){this.state.font=this.state.font.replace(/\d+\.?\d*px/,r+"px"),this.state.fontSize=r,this.actions.push({method:n,data:[r]})};default:return function(...r){this.actions.push({method:n,data:r})}}}Hu.prototype[e]=t(e)})}),Ey=Ht(Zb,(e,t)=>{if(yy(),t)return new Hu(e,vn(t));let n=vn(Zn());if(n)return new Hu(e,n);St.emit(se.ON_ERROR,"createCanvasContext:fail")},Xb),Sy=xe(ay,({canvasId:e,x:t,y:n,width:r,height:l},{resolve:f,reject:_})=>{let w=vn(Zn());if(!w){_();return}function D(I){if(I.errMsg&&I.errMsg.indexOf("fail")!==-1){_("",I);return}let B=I.data;B&&B.length&&(I.compressed&&(B=Wp.inflateRaw(B)),I.data=new Uint8ClampedArray(B)),delete I.compressed,f(I)}vf(e,w,"getImageData",{x:t,y:n,width:r,height:l},D)},oh,ih),wy=xe(sy,({canvasId:e,data:t,x:n,y:r,width:l,height:f},{resolve:_,reject:w})=>{var D=vn(Zn());if(!D){w();return}let I,B=()=>{vf(e,D,"putImageData",{data:t,x:n,y:r,width:l,height:f,compressed:I},ve=>{if(ve.errMsg&&ve.errMsg.indexOf("fail")!==-1){w();return}_(ve)})};a.os.name!=="iOS"||typeof __WEEX_DEVTOOL__=="boolean"?(t=Wp.deflateRaw(t,{to:"string"}),I=!0):t=Array.prototype.slice.call(t),B()},cy,ly),Cy=xe(uy,({x:e=0,y:t=0,width:n,height:r,destWidth:l,destHeight:f,canvasId:_,fileType:w,quality:D},{resolve:I,reject:B})=>{var ve=vn(Zn());if(!ve){B();return}let Ae=`${by()}/canvas`;vf(_,ve,"toTempFilePath",{x:e,y:t,width:n,height:r,destWidth:l,destHeight:f,fileType:w,quality:D,dirname:Ae},Re=>{if(Re.errMsg&&Re.errMsg.indexOf("fail")!==-1){B("",Re);return}I(Re)})},dy,fy),ch=["onCanplay","onPlay","onPause","onStop","onEnded","onTimeUpdate","onError","onWaiting","onSeeking","onSeeked"],Ay=["offCanplay","offPlay","offPause","offStop","offEnded","offTimeUpdate","offError","offWaiting","offSeeking","offSeeked"],Oy={thresholds:[0],initialRatio:0,observeAll:!1},Ty=["top","right","bottom","left"],Py=1;function uh(e={}){return Ty.map(t=>`${Number(e[t])||0}px`).join(" ")}class fh{constructor(t,n){this._pageId=vn(t),this._component=t,this._options=Z.extend({},Oy,n)}relativeTo(t,n){return this._options.relativeToSelector=t,this._options.rootMargin=uh(n),this}relativeToViewport(t){return this._options.relativeToSelector=void 0,this._options.rootMargin=uh(t),this}observe(t,n){!Z.isFunction(n)||(this._options.selector=t,this._reqId=Py++,zs({reqId:this._reqId,component:this._component,options:this._options,callback:n},this._pageId))}disconnect(){this._reqId&&bl({reqId:this._reqId,component:this._component},this._pageId)}}let Ny=Ht("createIntersectionObserver",(e,t)=>(e=se.resolveComponentInstance(e),e&&!vn(e)&&(t=e,e=null),e?new fh(e,t):new fh(Zn(),t))),Iy=1;class dh{constructor(t){this._pageId=t.$page&&t.$page.id,this._component=t}observe(t,n){!Z.isFunction(n)||(this._reqId=Iy++,Ul({reqId:this._reqId,component:this._component,options:t,callback:n},this._pageId))}disconnect(){this._reqId&&Gs({reqId:this._reqId,component:this._component},this._pageId)}}let ky=Ht("createMediaQueryObserver",e=>(e=se.resolveComponentInstance(e),e&&!vn(e)&&(e=null),e?new dh(e):new dh(Zn()))),xy=0,Id={};function Ry(e,t,n,r){let l={options:r},f=r&&("success"in r||"fail"in r||"complete"in r);if(f){let _=String(xy++);l.callbackId=_,Id[_]=r}St.invokeViewMethod(`editor.${e}`,{type:n,data:l},t,({callbackId:_,data:w})=>{f&&(se.callOptions(Id[_],w),delete Id[_])})}class My{constructor(t,n){this.id=t,this.pageId=n}format(t,n){this._exec("format",{name:t,value:n})}insertDivider(){this._exec("insertDivider")}insertImage(t){this._exec("insertImage",t)}insertText(t){this._exec("insertText",t)}setContents(t){this._exec("setContents",t)}getContents(t){this._exec("getContents",t)}clear(t){this._exec("clear",t)}removeFormat(t){this._exec("removeFormat",t)}undo(t){this._exec("undo",t)}redo(t){this._exec("redo",t)}blur(t){this._exec("blur",t)}getSelectionText(t){this._exec("getSelectionText",t)}scrollIntoView(t){this._exec("scrollIntoView",t)}_exec(t,n){Ry(this.id,this.pageId,t,n)}}let By={canvas:Hu,map:Pd,video:Td,editor:My};function ph(e){if(e&&e.contextInfo){let{id:t,type:n,page:r}=e.contextInfo,l=By[n];e.context=new l(t,r),delete e.contextInfo}}class kd{constructor(t,n,r,l){this._selectorQuery=t,this._component=n,this._selector=r,this._single=l}boundingClientRect(t){return this._selectorQuery._push(this._selector,this._component,this._single,{id:!0,dataset:!0,rect:!0,size:!0},t),this._selectorQuery}fields(t,n){return this._selectorQuery._push(this._selector,this._component,this._single,t,n),this._selectorQuery}scrollOffset(t){return this._selectorQuery._push(this._selector,this._component,this._single,{id:!0,dataset:!0,scrollOffset:!0},t),this._selectorQuery}context(t){return this._selectorQuery._push(this._selector,this._component,this._single,{context:!0},t),this._selectorQuery}node(t){return this._selectorQuery._push(this._selector,this._component,this._single,{node:!0},t),this._selectorQuery}}class Ly{constructor(t){this._component=void 0,this._page=t,this._queue=[],this._queueCb=[]}exec(t){return ir(this._page,this._queue,n=>{let r=this._queueCb;n.forEach((l,f)=>{Z.isArray(l)?l.forEach(ph):ph(l);let _=r[f];Z.isFunction(_)&&_.call(this,l)}),Z.isFunction(t)&&t.call(this,n)}),this._nodesRef}in(t){return this._component=se.resolveComponentInstance(t),this}select(t){return this._nodesRef=new kd(this,this._component,t,!0)}selectAll(t){return this._nodesRef=new kd(this,this._component,t,!1)}selectViewport(){return this._nodesRef=new kd(this,null,"",!0)}_push(t,n,r,l,f){this._queue.push({component:n,selector:t,single:r,fields:l}),this._queueCb.push(f)}}let Fy=Ht("createSelectorQuery",e=>(e=se.resolveComponentInstance(e),e&&!vn(e)&&(e=null),new Ly(e||Zn()))),Dy="createAnimation",Uy={formatArgs:{}},Vy={duration:Number,timingFunction:String,delay:Number,transformOrigin:String},$y={duration:400,timingFunction:"linear",delay:0,transformOrigin:"50% 50% 0"};class hh{constructor(t){this.actions=[],this.currentTransform={},this.currentStepAnimates=[],this.option=Z.extend({},$y,t)}_getOption(t){let n={transition:Z.extend({},this.option,t),transformOrigin:""};return n.transformOrigin=n.transition.transformOrigin,delete n.transition.transformOrigin,n}_pushAnimates(t,n){this.currentStepAnimates.push({type:t,args:n})}_converType(t){return t.replace(/[A-Z]/g,n=>`-${n.toLowerCase()}`)}_getValue(t){return typeof t=="number"?`${t}px`:t}export(){let t=this.actions;return this.actions=[],{actions:t}}step(t){return this.currentStepAnimates.forEach(n=>{n.type!=="style"?this.currentTransform[n.type]=n:this.currentTransform[`${n.type}.${n.args[0]}`]=n}),this.actions.push({animates:Object.values(this.currentTransform),option:this._getOption(t)}),this.currentStepAnimates=[],this}}let Hy=se.once(()=>{let e=["matrix","matrix3d","rotate","rotate3d","rotateX","rotateY","rotateZ","scale","scale3d","scaleX","scaleY","scaleZ","skew","skewX","skewY","translate","translate3d","translateX","translateY","translateZ"],t=["opacity","backgroundColor"],n=["width","height","left","right","top","bottom"];e.concat(t,n).forEach(r=>{hh.prototype[r]=function(...l){return t.concat(n).includes(r)?this._pushAnimates("style",[this._converType(r),n.includes(r)?this._getValue(l[0]):l[0]]):this._pushAnimates(r,l),this}})}),jy=Ht(Dy,e=>(Hy(),new hh(e)),Vy,Uy),gh="onTabBarMidButtonTap",zy=Dn(gh,()=>{}),Wy="onWindowResize",Gy="offWindowResize",qy=Dn(Wy,()=>{}),Yy=ii(Gy,()=>{}),mh="setLocale",Jy="getLocale",vh="onLocaleChange",ju=Ht(Jy,()=>{let e=Nt({allowDefault:!0});return e&&e.$vm?e.$vm.$locale:et().getLocale()}),Ky=Dn(vh,()=>{}),Zy=Ht(mh,e=>{let t=Nt();return t&&t.$vm.$locale!==e?(t.$vm.$locale=e,Mr().forEach(l=>{St.publishHandler(mh,e,l.$page.id)}),u.requireModule("plus").setLanguage(e),St.invokeOnCallback(vh,{locale:e}),!0):!1}),Xy=xe("setPageMeta",(e,{resolve:t})=>{t(Ur(Zn(),e))}),_h="getSelectedTextRange",Qy=xe(_h,(e,{resolve:t,reject:n})=>{St.invokeViewMethod(_h,{},to(),r=>{typeof r.end=="undefined"&&typeof r.start=="undefined"?n("no focused"):t(r)})}),_f={[se.ON_UNHANDLE_REJECTION]:[],[se.ON_PAGE_NOT_FOUND]:[],[se.ON_ERROR]:[],[se.ON_SHOW]:[],[se.ON_HIDE]:[]};function zu(e,t){let n=Nt({allowDefault:!0});if(n&&n.$vm)return dn.injectHook(e,t,n.$vm.$);_f[e].push(t)}function e0(e){Object.keys(_f).forEach(t=>{_f[t].forEach(n=>{dn.injectHook(t,n,e)})})}function Wu(e,t){let n=Nt({allowDefault:!0});if(n&&n.$vm)return gl(n.$vm,e,t);Z.remove(_f[e],t)}function t0(e){zu(se.ON_UNHANDLE_REJECTION,e)}function n0(e){Wu(se.ON_UNHANDLE_REJECTION,e)}function r0(e){zu(se.ON_PAGE_NOT_FOUND,e)}function i0(e){Wu(se.ON_PAGE_NOT_FOUND,e)}function o0(e){zu(se.ON_ERROR,e)}function a0(e){Wu(se.ON_ERROR,e)}function s0(e){zu(se.ON_SHOW,e)}function l0(e){Wu(se.ON_SHOW,e)}function c0(e){zu(se.ON_HIDE,e)}function u0(e){Wu(se.ON_HIDE,e)}let f0=Ht("getEnterOptionsSync",()=>Ge()),d0=Ht("getLaunchOptionsSync",()=>gc()),Gu,xd,Rd,bh;function yh(e){try{return JSON.parse(e)}catch(t){}return e}function Md(e){if(e.type==="enabled")Rd=!0,bh=e.offline;else if(e.type==="clientId")Gu=e.cid,xd=e.errMsg,Eh(Gu,e.errMsg);else if(e.type==="pushMsg"){let t={type:"receive",data:yh(e.message)};for(let n=0;n<sc.length&&(sc[n](t),!t.stopped);n++);}else e.type==="click"&&sc.forEach(t=>{t({type:"click",data:yh(e.message)})})}let Bd=[];function Eh(e,t){Bd.forEach(n=>{n(e,t)}),Bd.length=0}let p0=xe("getPushClientId",(e,{resolve:t,reject:n})=>{if(bh){a.push.getClientInfoAsync(r=>{t({cid:r.clientid})},r=>{n(r.code+": "+r.message)});return}Promise.resolve().then(()=>{typeof Rd=="undefined"&&(Rd=!1,Gu="",xd="uniPush is not enabled"),Bd.push((r,l)=>{r?t({cid:r}):n(l)}),typeof Gu!="undefined"&&Eh(Gu,xd)})}),sc=[],Sh=!1,h0=e=>{sc.indexOf(e)===-1&&sc.push(e),Sh||(Sh=!0,a.push.addEventListener("click",t=>{Md({type:"click",message:t})}),a.push.addEventListener("receive",t=>{Md({type:"pushMsg",message:t})}))},g0=e=>{if(!e)sc.length=0;else{let t=sc.indexOf(e);t>-1&&sc.splice(t,1)}},m0="canIUse",v0=[{name:"schema",type:String,required:!0}],_0="getBackgroundAudioManager",b0="makePhoneCall",y0={phoneNumber:String},E0="addPhoneContact",S0={formatArgs:{firstName(e){if(!e)return"addPhoneContact:fail parameter error: parameter.firstName should not be empty;"}}},w0={firstName:{type:String,required:!0},photoFilePath:String,nickName:String,lastName:String,middleName:String,remark:String,mobilePhoneNumber:String,weChatNumber:String,addressCountry:String,addressState:String,addressCity:String,addressStreet:String,addressPostalCode:String,organization:String,title:String,workFaxNumber:String,workPhoneNumber:String,hostNumber:String,email:String,url:String,workAddressCountry:String,workAddressState:String,workAddressCity:String,workAddressStreet:String,workAddressPostalCode:String,homeFaxNumber:String,homePhoneNumber:String,homeAddressCountry:String,homeAddressState:String,homeAddressCity:String,homeAddressStreet:String,homeAddressPostalCode:String},C0="getClipboardData",A0="setClipboardData",O0={formatArgs:{showToast:!0},beforeInvoke(){gs()},beforeSuccess(e,t){if(!t.showToast)return;let{t:n}=et(),r=n("uni.setClipboardData.success");r&&P.showToast({title:r,icon:"success",mask:!1})}},T0={data:{type:String,required:!0},showToast:{type:Boolean}},wh="onAccelerometer",P0="offAccelerometer",N0="startAccelerometer",I0="stopAccelerometer",Ch="onCompass",k0="offCompass",x0="startCompass",R0="stopCompass",M0="vibrateShort",B0="vibrateLong",Ah="onBluetoothDeviceFound",Oh="onBluetoothAdapterStateChange",Th="onBLEConnectionStateChange",Ph="onBLECharacteristicValueChange",L0="startBluetoothDevicesDiscovery",F0={services:Array,allowDuplicatesKey:Boolean,interval:Number},D0="getConnectedBluetoothDevices",U0={services:{type:Array,required:!0}},V0="createBLEConnection",$0={deviceId:{type:String,required:!0}},H0="closeBLEConnection",j0={deviceId:{type:String,required:!0}},z0="getBLEDeviceServices",W0={deviceId:{type:String,required:!0}},G0="getBLEDeviceCharacteristics",q0={deviceId:{type:String,required:!0},serviceId:{type:String,required:!0}},Y0="notifyBLECharacteristicValueChange",J0={deviceId:{type:String,required:!0},serviceId:{type:String,required:!0},characteristicId:{type:String,required:!0},state:{type:Boolean,required:!0}},K0="readBLECharacteristicValue",Z0={deviceId:{type:String,required:!0},serviceId:{type:String,required:!0},characteristicId:{type:String,required:!0}},X0="writeBLECharacteristicValue",Q0={deviceId:{type:String,required:!0},serviceId:{type:String,required:!0},characteristicId:{type:String,required:!0},value:{type:Array,required:!0}},eE="setBLEMTU",tE={deviceId:{type:String,required:!0},mtu:{type:Number,required:!0}},nE="getBLEDeviceRSSI",rE={deviceId:{type:String,required:!0}},Nh="onBeaconUpdate",Ih="onBeaconServiceChange",iE="getBeacons",oE="startBeaconDiscovery",aE={uuids:{type:Array,required:!0}},sE="stopBeaconDiscovery",lE="getScreenBrightness",cE="setScreenBrightness",uE="setKeepScreenOn",fE="checkIsSupportSoterAuthentication",dE="checkIsSoterEnrolledInDevice",pE=["fingerPrint","facial","speech"],hE={formatArgs:{checkAuthMode(e,t){if(!e||!pE.includes(e))return"checkAuthMode \u586B\u5199\u9519\u8BEF"}}},gE={checkAuthMode:String},mE="startSoterAuthentication",vE={formatArgs:{requestAuthModes(e,t){if(!e.includes("fingerPrint")&&!e.includes("facial"))return"requestAuthModes \u586B\u5199\u9519\u8BEF"}}},_E={requestAuthModes:{type:Array,required:!0},challenge:String,authContent:String},bE="scanCode",yE={onlyFromCamera:Boolean,scanType:Array,autoDecodeCharSet:Boolean,sound:String,autoZoom:Boolean},EE=["default","none"],SE={formatArgs:{sound(e,t){EE.includes(e)||(t.sound="none")},autoZoom(e,t){typeof e=="undefined"&&(t.autoZoom=!0)}}},wE="getSystemSetting",CE="getAppAuthorizeSetting",AE="openAppAuthorizeSetting",OE="getStorage",kh={key:{type:String,required:!0}},TE="getStorageSync",xh=[{name:"key",type:String,required:!0}],PE="setStorage",NE={key:{type:String,required:!0},data:{required:!0}},IE="setStorageSync",kE=[{name:"key",type:String,required:!0},{name:"data",required:!0}],Rh="removeStorage",xE=kh,RE=xh,ME="saveFile",BE={formatArgs:{tempFilePath(e,t){t.tempFilePath=Gt(e)}}},LE={tempFilePath:{type:String,required:!0}},FE="getSavedFileList",DE="removeSavedFile",UE={formatArgs:{filePath(e,t){t.filePath=Gt(e)}}},VE={filePath:{type:String,required:!0}},$E="getFileInfo",HE={formatArgs:{filePath(e,t){t.filePath=Gt(e)}}},jE={filePath:{type:String,required:!0}},zE="getSavedFileInfo",WE={formatArgs:{filePath(e,t){t.filePath=Gt(e)}}},GE={filePath:{type:String,required:!0}},qE="openDocument",YE={formatArgs:{filePath(e,t){t.filePath=Gt(e)}}},JE={filePath:{type:String,required:!0},fileType:String},KE="hideKeyboard",ZE="showKeyboard",XE="chooseLocation",QE={keyword:String,latitude:Number,longitude:Number},Mh="getLocation",Bh=["wgs84","gcj02"],eS={formatArgs:{type(e,t){e=(e||"").toLowerCase(),Bh.indexOf(e)===-1?t.type=Bh[0]:t.type=e},altitude(e,t){t.altitude=e||!1}}},tS={type:String,altitude:Boolean},nS="openLocation",Lh=(e,t)=>{if(t===void 0)return`${e} should not be empty.`;if(typeof t!="number"){let n=typeof t;return n=n[0].toUpperCase()+n.substring(1),`Expected Number, got ${n} with value ${JSON.stringify(t)}.`}},rS={formatArgs:{latitude(e,t){let n=Lh("latitude",e);if(n)return n;t.latitude=e},longitude(e,t){let n=Lh("longitude",e);if(n)return n;t.longitude=e},scale(e,t){e=Math.floor(e),t.scale=e>=5&&e<=18?e:18}}},iS={latitude:Number,longitude:Number,scale:Number,name:String,address:String},oS="chooseImage",aS={formatArgs:{count(e,t){(!e||e<=0)&&(t.count=9)},sizeType(e,t){t.sizeType=en(e,Lr)},sourceType(e,t){t.sourceType=en(e,Or)},extension(e,t){if(e instanceof Array&&e.length===0)return"param extension should not be empty.";e||(t.extension=["*"])}}},sS={count:Number,sizeType:[Array,String],sourceType:Array,extension:Array},lS="chooseVideo",cS={formatArgs:{sourceType(e,t){t.sourceType=en(e,Or)},compressed:!0,maxDuration:60,camera:"back",extension(e,t){if(e instanceof Array&&e.length===0)return"param extension should not be empty.";e||(t.extension=["*"])}}},uS={sourceType:Array,compressed:Boolean,maxDuration:Number,camera:String,extension:Array},fS="getImageInfo",dS={formatArgs:{src(e,t){t.src=Gt(e)}}},pS={src:{type:String,required:!0}},hS="previewImage",gS={formatArgs:{urls(e,t){t.urls=e.map(n=>Z.isString(n)&&n?Gt(n):"")},current(e,t){typeof e=="number"?t.current=e>0&&e<t.urls.length?e:0:Z.isString(e)&&e&&(t.current=Gt(e))}}},mS={urls:{type:Array,required:!0},current:{type:[Number,String]}},vS="closePreviewImage",_S="getVideoInfo",bS={formatArgs:{src(e,t){t.src=Gt(e)}}},yS={src:{type:String,required:!0}},ES="saveImageToPhotosAlbum",SS={formatArgs:{filePath(e,t){t.filePath=Gt(e)}}},wS={filePath:{type:String,required:!0}},CS="saveVideoToPhotosAlbum",AS={formatArgs:{filePath(e,t){t.filePath=Gt(e)}}},OS={filePath:{type:String,required:!0}},TS="getRecorderManager",PS="compressImage",NS={formatArgs:{src(e,t){t.src=Gt(e)}}},IS={src:{type:String,required:!0}},kS="compressVideo",xS={formatArgs:{src(e,t){t.src=Gt(e)}}},RS={src:{type:String,required:!0},quality:String,bitrate:Number,fps:Number,resolution:Number},MS="request",BS={JSON:"json"},LS=["text","arraybuffer"],FS="text",Fh=encodeURIComponent;function DS(e,t){let n=e.split("#"),r=n[1]||"";n=n[0].split("?");let l=n[1]||"";e=n[0];let f=l.split("&").filter(w=>w),_={};f.forEach(w=>{let D=w.split("=");_[D[0]]=D[1]});for(let w in t)if(Z.hasOwn(t,w)){let D=t[w];typeof D=="undefined"||D===null?D="":Z.isPlainObject(D)&&(D=JSON.stringify(D)),_[Fh(w)]=Fh(D)}return l=Object.keys(_).map(w=>`${w}=${_[w]}`).join("&"),e+(l?"?"+l:"")+(r?"#"+r:"")}let US={method:String,data:[Object,String,Array,ArrayBuffer],url:{type:String,required:!0},header:Object,dataType:String,responseType:String,withCredentials:Boolean},VS={formatArgs:{method(e,t){t.method=pn((e||"").toUpperCase(),er)},data(e,t){t.data=e||""},url(e,t){t.method===er[0]&&Z.isPlainObject(t.data)&&Object.keys(t.data).length&&(t.url=DS(e,t.data))},header(e,t){let n=t.header=e||{};t.method!==er[0]&&(Object.keys(n).find(r=>r.toLowerCase()==="content-type")||(n["Content-Type"]="application/json"))},dataType(e,t){t.dataType=(e||BS.JSON).toLowerCase()},responseType(e,t){t.responseType=(e||"").toLowerCase(),LS.indexOf(t.responseType)===-1&&(t.responseType=FS)}}},$S="configMTLS",HS={certificates:{type:Array,required:!0}},jS={formatArgs:{certificates(e){if(e.some(t=>Z.toRawType(t.host)!=="String"))return"\u53C2\u6570\u914D\u7F6E\u9519\u8BEF\uFF0C\u8BF7\u786E\u8BA4\u540E\u91CD\u8BD5"}}},zS="downloadFile",WS={formatArgs:{header(e,t){t.header=e||{}}}},GS={url:{type:String,required:!0},header:Object,timeout:Number},qS="uploadFile",YS={formatArgs:{filePath(e,t){e&&(t.filePath=Gt(e))},header(e,t){t.header=e||{}},formData(e,t){t.formData=e||{}}}},JS={url:{type:String,required:!0},files:Array,filePath:String,name:String,header:Object,formData:Object,timeout:Number},KS="connectSocket",ZS={formatArgs:{header(e,t){t.header=e||{}},method(e,t){t.method=pn((e||"").toUpperCase(),er)},protocols(e,t){Z.isString(e)&&(t.protocols=[e])}}},XS={url:{type:String,required:!0},header:{type:Object},method:String,protocols:[Array,String]},QS="sendSocketMessage",ew={data:[String,ArrayBuffer]},tw="closeSocket",nw={code:Number,reason:String},rw="startLocationUpdate",Dh="onLocationChange",iw="stopLocationUpdate",ow="offLocationChange",aw="offLocationChangeError",Uh="onLocationChangeError",Vh=["wgs84","gcj02"],sw={type:String},lw={formatArgs:{type(e,t){e=(e||"").toLowerCase(),Vh.indexOf(e)===-1?t.type=Vh[1]:t.type=e}}};function cw(e){if(!Z.isString(e))return e;let t=e.indexOf("?");if(t===-1)return e;let n=e.slice(t+1).trim().replace(/^(\?|#|&)/,"");if(!n)return e;e=e.slice(0,t);let r=[];return n.split("&").forEach(l=>{let f=l.replace(/\+/g," ").split("="),_=f.shift(),w=f.length>0?f.join("="):"";r.push(_+"="+encodeURIComponent(w))}),r.length?e+"?"+r.join("&"):e}let uw=["slide-in-right","slide-in-left","slide-in-top","slide-in-bottom","fade-in","zoom-out","zoom-fade-out","pop-in","none"],fw=["slide-out-right","slide-out-left","slide-out-top","slide-out-bottom","fade-out","zoom-in","zoom-fade-in","pop-out","none"],du={url:{type:String,required:!0}},Ld="navigateTo",Fd="redirectTo",$h="reLaunch",bf="switchTab",dw="navigateBack",yf="preloadPage",Dd="unPreloadPage",pw=Z.extend({},du,Hh(uw)),hw=Z.extend({delta:{type:Number}},Hh(fw)),gw=du,mw=du,vw=du,_w=du,bw=du,yw=pu(Ld),Ew=pu(Fd),Sw=pu($h),ww=pu(bf),Cw={formatArgs:{delta(e,t){e=parseInt(e+"")||1,t.delta=Math.min(Mr().length-1,e)}}},Aw=pu(yf),Ow=pu(Dd);function Hh(e){return{animationType:{type:String,validator(t){if(t&&e.indexOf(t)===-1)return"`"+t+"` is not supported for `animationType` (supported values are: `"+e.join("`|`")+"`)"}},animationDuration:{type:Number}}}let Ef;function Tw(){Ef=""}function pu(e){return{formatArgs:{url:Pw(e)},beforeAll:Tw}}function Pw(e){return function(n,r){if(!n)return'Missing required args: "url"';n=Ll(n);let l=n.split("?")[0],f=Ti(l,!0);if(!f)return"page `"+n+"` is not found";if(e===Ld||e===Fd){if(f.meta.isTabBar)return`can not ${e} a tabbar page`}else if(e===bf&&!f.meta.isTabBar)return"can not switch to no-tabBar page";if((e===bf||e===yf)&&f.meta.isTabBar&&r.openType!=="appLaunch"&&(n=l),f.meta.isEntry&&(n=n.replace(f.alias,"/")),r.url=cw(n),e!==Dd){if(e===yf){if(!f.meta.isNVue)return"can not preload vue page";if(f.meta.isTabBar){let _=Mr(),w=f.path.slice(1);if(_.find(D=>D.route===w))return"tabBar page `"+w+"` already exists"}return}if(Ef===n&&r.openType!=="appLaunch")return`${Ef} locked`;k.ready&&(Ef=n)}}}let Nw="hideLoading",Iw="hideToast",jh="loadFontFace",kw={family:{type:String,required:!0},source:{type:String,required:!0},desc:Object},xw=["#ffffff","#000000"],Rw="setNavigationBarColor",Mw={formatArgs:{animation(e,t){e||(e={duration:0,timingFunc:"linear"}),t.animation={duration:e.duration||0,timingFunc:e.timingFunc||"linear"}}}},Bw={frontColor:{type:String,required:!0,validator(e){if(xw.indexOf(e)===-1)return`invalid frontColor "${e}"`}},backgroundColor:{type:String,required:!0},animation:Object},Lw="setNavigationBarTitle",Fw={title:{type:String,required:!0}},Dw="showNavigationBarLoading",Uw="hideNavigationBarLoading",zh="pageScrollTo",Vw={scrollTop:Number,selector:String,duration:Number},$w={formatArgs:{duration:300}},Hw="showActionSheet",jw={itemList:{type:Array,required:!0},title:String,itemColor:String,popover:Object},zw={formatArgs:{itemColor:"#000"}},Ww="showLoading",Gw={title:String,mask:Boolean},qw={formatArgs:{title:"",mask:!1}},Yw="showModal",Jw={title:String,content:String,showCancel:Boolean,cancelText:String,cancelColor:String,confirmText:String,confirmColor:String},Kw={beforeInvoke(){Hr()},formatArgs:{title:"",content:"",placeholderText:"",showCancel:!0,editable:!1,cancelText(e,t){if(!Z.hasOwn(t,"cancelText")){let{t:n}=et();t.cancelText=n("uni.showModal.cancel")}},cancelColor:"#000",confirmText(e,t){if(!Z.hasOwn(t,"confirmText")){let{t:n}=et();t.confirmText=n("uni.showModal.confirm")}},confirmColor:se.PRIMARY_COLOR}},Zw="showToast",Xw=["success","loading","none","error"],Qw={title:String,icon:String,image:String,duration:Number,mask:Boolean},eC={formatArgs:{title:"",icon(e,t){t.icon=pn(e,Xw)},image(e,t){e?t.image=Gt(e):t.image=""},duration:1500,mask:!1}},tC="startPullDownRefresh",nC="stopPullDownRefresh",qu={index:{type:Number,required:!0}},lc={beforeInvoke(){let e=dr();if(e&&!e.isTabBar)return"not TabBar page"},formatArgs:{index(e){if(!k.tabBar.list[e])return"tabbar item not found"}}},rC="setTabBarItem",iC=Z.extend({text:String,iconPath:String,selectedIconPath:String,pagePath:String},qu),oC={beforeInvoke:lc.beforeInvoke,formatArgs:Z.extend({pagePath(e,t){e&&(t.pagePath=se.removeLeadingSlash(e))}},lc.formatArgs)},aC="setTabBarStyle",sC={color:String,selectedColor:String,backgroundColor:String,backgroundImage:String,backgroundRepeat:String,borderStyle:String},lC=/^(linear|radial)-gradient\(.+?\);?$/,cC={beforeInvoke:lc.beforeInvoke,formatArgs:{backgroundImage(e,t){e&&!lC.test(e)&&(t.backgroundImage=Gt(e))},borderStyle(e,t){e&&(t.borderStyle=e==="white"?"white":"black")}}},uC="hideTabBar",Wh={animation:Boolean},fC="showTabBar",dC=Wh,pC="hideTabBarRedDot",hC=qu,gC=lc,mC="showTabBarRedDot",vC=qu,_C=lc,bC="removeTabBarBadge",yC=qu,EC=lc,SC="setTabBarBadge",wC=Z.extend({text:{type:String,required:!0}},qu),CC={beforeInvoke:lc.beforeInvoke,formatArgs:Z.extend({text(e,t){se.getLen(e)>=4&&(t.text="...")}},lc.formatArgs)},AC="getProvider",OC={service:{type:String,required:!0}},TC="login",PC={provider:String,scopes:[String,Array],timeout:Number,univerifyStyle:Object,onlyAuthorize:Boolean},NC="getUserInfo",IC={provider:String,withCredentials:Boolean,timeout:Number,lang:String},kC="ggetUserProfilegetUserProfile",xC={provider:String,withCredentials:Boolean,timeout:Number,lang:String},RC="preLogin",MC={UNIVERIFY:"univerify"},BC={formatArgs:{provider(e,t){if(Object.values(MC).indexOf(String(e))<0)return"provider error"}}},LC={provider:{type:String,required:!0}},FC="closeAuthView",DC="getCheckBoxState",UC="getUniverifyManager",VC="share",Gh=["WXSceneSession","WXSceneTimeline","WXSceneFavorite"],$C={formatArgs:{scene(e,t){let{provider:n,openCustomerServiceChat:r}=t;if(n==="weixin"&&!r&&(!e||!Gh.includes(e)))return`\u5206\u4EAB\u5230\u5FAE\u4FE1\u65F6\uFF0Cscene\u5FC5\u987B\u4E3A\u4EE5\u4E0B\u5176\u4E2D\u4E00\u4E2A\uFF1A${Gh.join("\u3001")}`},summary(e,t){if(t.type===1&&!e)return"\u5206\u4EAB\u7EAF\u6587\u672C\u65F6\uFF0Csummary\u5FC5\u586B"},href(e,t){if(t.type===0&&!e)return"\u5206\u4EAB\u56FE\u6587\u65F6\uFF0Chref\u5FC5\u586B"},imageUrl(e,t){if([0,2,5].includes(Number(t.type))&&!e)return"\u5206\u4EAB\u56FE\u6587\u3001\u7EAF\u56FE\u7247\u3001\u5C0F\u7A0B\u5E8F\u65F6\uFF0CimageUrl\u5FC5\u586B\uFF0C\u63A8\u8350\u4F7F\u7528\u5C0F\u4E8E20Kb\u7684\u56FE\u7247"},mediaUrl(e,t){if([3,4].includes(Number(t.type))&&!e)return"\u5206\u4EAB\u97F3\u4E50\u3001\u89C6\u9891\u65F6\uFF0CmediaUrl\u5FC5\u586B"},miniProgram(e,t){if(t.type===5&&!e)return"\u5206\u4EAB\u5C0F\u7A0B\u5E8F\u65F6\uFF0CminiProgram\u5FC5\u586B"},corpid(e,t){if(t.openCustomerServiceChat&&!e)return"\u4F7F\u7528\u6253\u5F00\u5BA2\u670D\u529F\u80FD\u65F6 corpid \u5FC5\u586B"},customerUrl(e,t){if(t.openCustomerServiceChat&&!e)return"\u4F7F\u7528\u6253\u5F00\u5BA2\u670D\u529F\u80FD\u65F6 customerUrl \u5FC5\u586B"}}},HC={provider:{type:String,required:!0},type:Number,title:String,scene:String,summary:String,href:String,imageUrl:String,mediaUrl:String,miniProgram:Object},jC="shareWithSystem",qh=["text","image"],zC={formatArgs:{type(e,t){if(e&&!qh.includes(e))return"\u5206\u4EAB\u53C2\u6570 type \u4E0D\u6B63\u786E\u3002\u53EA\u652F\u6301text\u3001image";t.type=pn(e,qh)}}},WC={type:String,summary:String,href:String,imageUrl:String},GC="requestPayment",qC={provider:{type:String,required:!0},orderInfo:{type:[String,Object],required:!0},timeStamp:String,nonceStr:String,package:String,signType:String,paySign:String},YC="createPushMessage",JC={formatArgs:{content(e){if(!e)return"content is required"}}},KC="getChannelManager",ZC="createRewardedVideoAd",XC={formatArgs:{adpid:"",adUnitId:""}},QC={adpid:String,adUnitId:String},eA="createFullScreenVideoAd",tA={formatArgs:{adpid:""}},nA={adpid:String},rA="createInterstitialAd",iA={formatArgs:{adpid:"",adUnitId:""}},oA={adpid:String,adUnitId:String},aA="createInteractiveAd",sA={formatArgs:{adpid(e,t){if(!e)return"adpid should not be empty.";e&&(t.adpid=e)},provider(e,t){if(!e)return"provider should not be empty.";e&&(t.provider=e)}}},lA={adpid:{type:String,required:!0},provider:{type:String,required:!0}};function xc(e,t){return function(r){delete r.code,delete r.message,Z.isFunction(t)&&(r=t(r)),e(r)}}function Rr(e,t){return function(r){r=r||{},t=r.message||t||"",delete r.message,e(t,Z.extend({code:0},r))}}function hu(e,t){return function(){e()(function(r){r&&(delete r.code,delete r.message),St.invokeOnCallback(t,r)})}}function xi(e,t,n){return function(r,{resolve:l,reject:f}){e()(Z.extend({},Z.isFunction(t)?t(r):r,{success:xc(l,n),fail:Rr(f)}))}}function Yu(e=""){if(!(k.tabBar&&Z.isArray(k.tabBar.list)))return!1;try{if(!e){let n=At();if(!n.length)return!1;let r=n[n.length-1];return r?Rt(r).meta.isTabBar:!1}/^\//.test(e)||(e=se.addLeadingSlash(e));let t=Ti(e);return t&&t.meta.isTabBar}catch(t){}return!1}let Bs="__TYPE",cA="uni-storage-keys";function Ud(e){let t=["object","string","number","boolean","undefined"];try{let n=Z.isString(e)?JSON.parse(e):e,r=n.type;if(t.indexOf(r)>=0){let l=Object.keys(n);if(l.length===2&&"data"in n){if(typeof n.data===r)return n.data;if(r==="object"&&/^\d{4}-\d{2}-\d{2}T\d{2}\:\d{2}\:\d{2}\.\d{3}Z$/.test(n.data))return new Date(n.data)}else if(l.length===1)return""}}catch(n){}}let uA=Ht(IE,(e,t)=>{let n=typeof t,r=n==="string"?t:JSON.stringify({type:n,data:t});try{n==="string"&&Ud(r)!==void 0?a.storage.setItem(e+Bs,n):a.storage.removeItem(e+Bs),a.storage.setItem(e,r)}catch(l){}},kE),fA=xe(PE,({key:e,data:t},{resolve:n,reject:r})=>{let l=typeof t,f=l==="string"?t:JSON.stringify({type:l,data:t});try{let _=a.storage;l==="string"&&Ud(f)!==void 0?_.setItemAsync(e+Bs,l,()=>{}):_.removeItemAsync(e+Bs,()=>{}),_.setItemAsync(e,f,n,Rr(r))}catch(_){r(_.message)}},NE);function Vd(e,t){let n=t;if(e!=="string"||e==="string"&&t==='{"type":"undefined"}')try{let r=JSON.parse(t),l=Ud(r);if(l!==void 0)n=l;else if(e&&(n=r,Z.isString(r))){r=JSON.parse(r);let f=typeof r;f==="number"&&e==="date"?n=new Date(r):f===(["null","array"].indexOf(e)<0?e:"object")&&(n=r)}}catch(r){}return n}let dA=Ht(TE,e=>{let t=a.storage.getItem(e),r=(a.storage.getItem(e+Bs)||"").toLowerCase();return Z.isString(t)?Vd(r,t):""},xh),pA=xe(OE,({key:e},{resolve:t,reject:n})=>{let r=a.storage;r.getItemAsync(e,function(l){r.getItemAsync(e+Bs,function(f){let w=(f.data||"").toLowerCase();t({data:Vd(w,l.data)})},function(){t({data:Vd("",l.data)})})},Rr(n))},kh),hA=Ht(Rh,e=>{a.storage.removeItem(e+Bs),a.storage.removeItem(e)},RE),gA=xe(Rh,({key:e},{resolve:t,reject:n})=>{a.storage.removeItemAsync(e+Bs,()=>{}),a.storage.removeItemAsync(e,t,Rr(n))},xE),mA=Ht("clearStorageSync",()=>{a.storage.clear()}),vA=xe("clearStorage",(e,{resolve:t,reject:n})=>{a.storage.clearAsync(t,Rr(n))}),Yh=Ht("getStorageInfoSync",()=>{let e=a.storage.getLength()||0,t=[],n=0;for(let r=0;r<e;r++){let l=a.storage.key(r);if(l!==cA&&(l.indexOf(Bs)<0||l.indexOf(Bs)+Bs.length!==l.length)){let f=a.storage.getItem(l);n+=l.length+f.length,t.push(l)}}return{keys:t,currentSize:Math.ceil(n*2/1024),limitSize:Number.MAX_VALUE}}),_A=xe("getStorageInfo",(e,{resolve:t})=>{t(Yh())}),bA=xe($E,(e,{resolve:t,reject:n})=>{a.io.getFileInfo(Z.extend(e,{success:xc(t),fail:Rr(n)}))},jE,HE),yA=0,Jh="uniapp_save",EA=`_doc/${Jh}`;function SA(e,t){t=t||function(){},a.io.requestFileSystem(a.io.PRIVATE_DOC,n=>{n.root.getDirectory(Jh,{create:!0},e,t)},t)}let wA=xe(ME,({tempFilePath:e},{resolve:t,reject:n})=>{let r=Rr(n),l=`${Date.now()}${yA++}${Es(e)}`;a.io.resolveLocalFileSystemURL(e,f=>{SA(_=>{f.copyTo(_,l,()=>{let w=EA+"/"+l;t({savedFilePath:w})},r)},r)},r)},LE,BE),CA="uniapp_save";function AA(e,t){t=t||function(){},a.io.requestFileSystem(a.io.PRIVATE_DOC,n=>{n.root.getDirectory(CA,{create:!0},e,t)},t)}let OA=xe(FE,(e,{resolve:t,reject:n})=>{let r=Rr(n);AA(l=>{var f=l.createReader(),_=[];f.readEntries(w=>{w&&w.length?w.forEach(D=>{D.getMetadata(I=>{_.push({filePath:a.io.convertAbsoluteFileSystem(D.fullPath),createTime:I.modificationTime.getTime(),size:I.size}),_.length===w.length&&t({fileList:_})},r,!1)}):t({fileList:_})},r)},r)}),TA=xe(zE,({filePath:e},{resolve:t,reject:n})=>{let r=Rr(n);a.io.resolveLocalFileSystemURL(e,l=>{l.getMetadata(f=>{t({createTime:f.modificationTime.getTime(),size:f.size})},r,!1)},r)},GE,WE),PA=xe(DE,({filePath:e},{resolve:t,reject:n})=>{let r=Rr(n);a.io.resolveLocalFileSystemURL(e,l=>{l.remove(()=>{t()},r)},r)},VE,UE),NA=xe(qE,({filePath:e,fileType:t},{resolve:n,reject:r})=>{let l=Rr(r);a.runtime.openDocument(Gt(e),void 0,n,l)},JE,YE),IA=Ht(m0,e=>!!Z.hasOwn(P,e),v0),Ju,Kh=a.navigator.setStatusBarStyle;function kA(e){Kh=e}function Zh(e){Ju=e,Kh(e)}a.navigator.setStatusBarStyle=Zh;function ul(e){if(!e){let t=Un();if(!t||(e=Rt(t).statusBarStyle,!e||e===Ju))return}e!==Ju&&(Ju=e,a.navigator.setStatusBarStyle(e))}function Xh(e){St.on(se.ON_THEME_CHANGE,e)}function xA(e){St.off(se.ON_THEME_CHANGE,e)}function RA(){return Qh()==="dark"?"light":"dark"}function Qh(){return a.navigator.getUIStyle()}function MA(){if(k.darkmode){let e=RA();ul(e),_n().forEach(n=>{Rt(n).statusBarStyle=e})}}function $d(e){if(k.darkmode){let t={},n=a.navigator.getUIStyle(),r=Zu();return r&&r.hostTheme&&(n=r.hostTheme),t=se.normalizeStyles(e,k.themeConfig,n),t}return e}function BA(e,t){if(k.darkmode){let n=()=>{let{list:r=[],color:l,selectedColor:f,backgroundColor:_,borderStyle:w,midButton:D}=$d(t);e&&(e.setTabBarStyle({color:l,selectedColor:f,backgroundColor:_,borderStyle:w,midButton:D}),e.setTabBarItems({list:r.map(I=>({iconPath:I.iconPath,selectedIconPath:I.selectedIconPath,visible:I.visible}))}))};n(),Xh(n)}}function eg(e,t){if(k.darkmode){let n=()=>{let r=t();r.animationAlphaBGColor,r.background,r.backgroundColorBottom,r.backgroundColorTop;var l=r.titleNView;typeof l!="undefined"&&typeof l=="object"&&(l.backgroundColor,l.titleColor),e&&e.setStyle(r)};Xh(n),e.addEventListener("close",()=>xA(n))}}let Ku,Hd=!0,vr;function LA(e,t,n){!vr||(e==="none"?(vr.hideTabBarRedDot({index:t}),vr.removeTabBarBadge({index:t})):e==="text"?vr.setTabBarBadge({index:t,text:n}):e==="redDot"&&vr.showTabBarRedDot({index:t}))}function FA(e){vr&&vr.setTabBarItems(e)}function DA(e,t,n,r,l,f){let _={index:e};if(t!==void 0&&(_.text=t),n&&(_.iconPath=Gt(n)),r&&(_.selectedIconPath=Gt(r)),f!==void 0&&(_.iconfont=f),l!==void 0){_.visible=Ku.list[e].visible=l,delete _.index;let w=Ku.list.map(D=>({visible:D.visible}));w[e]=_,FA({list:w})}else vr&&vr.setTabBarItem(_)}function UA(e){vr&&vr.setTabBarStyle(e)}function VA(e){Hd=!1,vr&&vr.hideTabBar({animation:e})}function $A(e){Hd=!0,vr&&vr.showTabBar({animation:e})}let Sf=[];var Ri={id:"0",init(e,t){e&&e.list.length&&(Ku=e);try{vr=u.requireModule("uni-tabview")}catch(n){console.log(`uni.requireNativePlugin("uni-tabview") error ${n}`)}vr.onMaskClick(()=>{Sf.forEach(n=>{n()})}),vr&&vr.onClick(({index:n})=>{t(Ku.list[n],n)}),vr&&vr.onMidButtonClick(()=>St.invokeOnCallback(gh)),BA(vr,e)},indexOf(e){let t=this.config,n=t&&t.list&&t.list.length;if(n){for(let r=0;r<n;r++)if(t.list[r].pagePath===e||t.list[r].pagePath===`${e}.html`)return r}return-1},switchTab(e){let t=this.indexOf(e);return t>=0?(vr&&vr.switchSelect({index:t}),!0):!1},setTabBarBadge:LA,setTabBarItem:DA,setTabBarStyle:UA,hideTabBar:VA,showTabBar:$A,append(e){vr&&vr.append({id:e.id},({code:t})=>{t!==0&&O(()=>{this.append(e)},20)})},get config(){return Ku||k.tabBar},get visible(){return Hd},get height(){let e=this.config;return(e&&e.height?parseFloat(e.height):se.TABBAR_HEIGHT)+a.navigator.getSafeAreaInsets().deviceBottom},get cover(){let e=this.config;return e&&["extralight","light","dark"].indexOf(e.blurEffect)>=0},setStyle({mask:e}){vr.setMask({color:e})},addEventListener(e,t){Sf.push(t)},removeEventListener(e,t){let n=Sf.indexOf(t);Sf.splice(n,1)}};function wf(){let e=Un();return e?e.$getAppWebview():null}function tg(e){return e?e.$getAppWebview():wf()}let ng=null;function rg(){return ng}function jd(e){ng=e}function zd(){return a.navigator.isImmersedStatusbar()?Math.round(a.os.name==="iOS"?a.navigator.getSafeAreaInsets().top:a.navigator.getStatusbarHeight()):0}function ig(){let e=a.navigator.getStatusBarStyle();return e==="UIStatusBarStyleBlackTranslucent"||e==="UIStatusBarStyleBlackOpaque"||e==="null"?e="light":e==="UIStatusBarStyleDefault"&&(e="dark"),e}function HA(){let{resolutionWidth:e,resolutionHeight:t}=a.screen.getCurrentSize()||{resolutionWidth:0,resolutionHeight:0};return{screenWidth:Math.round(e),screenHeight:Math.round(t)}}let og=Ht("getWindowInfo",()=>{let e=a.os.name.toLowerCase()==="ios",{screenWidth:t,screenHeight:n}=HA(),r=zd(),l,f={height:0,cover:!1},_=wf();if(_){let _t=_.getStyle(),Ct=_t&&_t.titleNView;Ct&&Ct.type&&Ct.type!=="none"&&(f.height=Ct.type==="transparent"?0:r+se.NAVBAR_HEIGHT,f.cover=Ct.type==="transparent"||Ct.type==="float"),l=_.getSafeAreaInsets()}else l=a.navigator.getSafeAreaInsets();let w={height:0,cover:!1};Yu()&&(w.height=Ri.visible?Ri.height:0,w.cover=Ri.cover);let D=f.cover?f.height:0,I=w.cover?w.height:0,B=n-f.height-w.height,ve=n-(f.cover?0:f.height)-(w.cover?0:w.height),Ae=t;(!w.height||w.cover)&&!l.bottom&&l.deviceBottom&&(B-=l.deviceBottom,ve-=l.deviceBottom),l=e?l:{left:0,right:0,top:f.height&&!f.cover?0:r,bottom:0};let Re={left:l.left,right:Ae-l.right,top:l.top,bottom:ve-l.bottom,width:Ae-l.left-l.right,height:ve-l.top-l.bottom};return{pixelRatio:a.screen.scale,screenWidth:t,screenHeight:n,windowWidth:Ae,windowHeight:B,statusBarHeight:r,safeArea:Re,safeAreaInsets:{top:l.top,right:l.right,bottom:l.bottom,left:l.left},windowTop:D,windowBottom:I,screenTop:n-B}}),Ls,Cf=!0;function Zu(){if(!Cf)return;let{getSystemInfoSync:e}=u.requireModule("plus");if(Ls=e(),Z.isString(Ls))try{Ls=JSON.parse(Ls)}catch(t){}return Ls}let ag=Ht("getDeviceInfo",()=>{Zu();let{deviceBrand:e="",deviceModel:t,osName:n,osVersion:r,deviceOrientation:l,deviceType:f,deviceId:_,osLanguage:w,osTheme:D,romName:I,romVersion:B}=Ls,ve=e.toLowerCase(),Ae=n.toLowerCase();return{brand:ve,deviceBrand:ve,deviceModel:t,devicePixelRatio:a.screen.scale,deviceId:_,deviceOrientation:l,deviceType:f,model:t,platform:Ae,system:`${Ae==="ios"?"iOS":"Android"} ${r}`,osName:n,osVersion:r,osLanguage:w,osTheme:D,romName:I,romVersion:B}}),sg=Ht("getAppBaseInfo",()=>{Zu();let{hostPackageName:e,hostName:t,hostVersion:n,hostLanguage:r,osLanguage:l,hostTheme:f,appId:_,appName:w,appVersion:D,appVersionCode:I,appWgtVersion:B,uniCompileVersion:ve,uniRuntimeVersion:Ae,uniPlatform:Re}=Ls;return{appId:_,appName:w,appVersion:D,appVersionCode:I,appWgtVersion:B,appLanguage:ju?ju():l,enableDebug:!1,hostPackageName:e,hostName:t,hostVersion:n,hostLanguage:r,hostTheme:f,hostFontSizeSetting:void 0,hostSDKVersion:void 0,language:l,SDKVersion:"",theme:Qh(),version:a.runtime.innerVersion,isUniAppX:!1,uniPlatform:Re,uniRuntimeVersion:Ae,uniCompileVersion:ve,uniCompilerVersion:ve}}),lg=Ht("getSystemInfoSync",()=>{Cf=!0,Zu(),Cf=!1;let e=og(),t=ag(),n=sg();Cf=!0;let r={fontSizeSetting:n.hostFontSizeSetting,osName:Ls.osName.toLowerCase()};Ls.hostName&&(r.hostSDKVersion=Ls.uniRuntimeVersion);let l=Z.extend(Ls,e,t,n,r);return delete l.screenTop,delete l.enableDebug,k.darkmode||delete l.theme,se.sortObject(l)}),jA=xe("getSystemInfo",(e,{resolve:t})=>t(lg())),gu=null,zA=Dn(Ch,()=>{cg()}),WA=ii(k0,()=>{ug()}),cg=xe(x0,(e,{resolve:t,reject:n})=>{gu||(gu=a.orientation.watchOrientation(r=>{St.invokeOnCallback(Ch,{direction:r.magneticHeading})},r=>{n(r.message),gu=null},{frequency:qs})),O(t,qs)}),ug=xe(R0,(e,{resolve:t})=>{gu&&(a.orientation.clearWatch(gu),gu=null),t()}),GA=xe(M0,(e,{resolve:t})=>{a.device.vibrate(15),t()}),qA=xe(B0,(e,{resolve:t})=>{a.device.vibrate(400),t()}),mu=null,YA=Dn(wh,()=>{fg()}),JA=ii(P0,()=>{dg()}),fg=xe(N0,(e,{resolve:t,reject:n})=>{mu||(mu=a.accelerometer.watchAcceleration(r=>{St.invokeOnCallback(wh,{x:r&&r.xAxis||0,y:r&&r.yAxis||0,z:r&&r.zAxis||0})},r=>{mu=null,n(`startAccelerometer:fail ${r.message}`)},{frequency:qs})),O(t,qs)}),dg=xe(I0,(e,{resolve:t})=>{mu&&(a.accelerometer.clearWatch(mu),mu=null),t()}),KA=Dn(Ah,hu(()=>a.bluetooth.onBluetoothDeviceFound.bind(a.bluetooth),Ah)),ZA=Dn(Oh,hu(()=>a.bluetooth.onBluetoothAdapterStateChange.bind(a.bluetooth),Oh)),XA=Dn(Th,hu(()=>a.bluetooth.onBLEConnectionStateChange.bind(a.bluetooth),Th)),QA=Dn(Ph,hu(()=>a.bluetooth.onBLECharacteristicValueChange.bind(a.bluetooth),Ph)),eO=xe("openBluetoothAdapter",xi(()=>a.bluetooth.openBluetoothAdapter.bind(a.bluetooth))),tO=xe("closeBluetoothAdapter",xi(()=>a.bluetooth.closeBluetoothAdapter.bind(a.bluetooth))),nO=xe("getBluetoothAdapterState",xi(()=>a.bluetooth.getBluetoothAdapterState.bind(a.bluetooth))),rO=xe(L0,xi(()=>a.bluetooth.startBluetoothDevicesDiscovery.bind(a.bluetooth)),F0),iO=xe("stopBluetoothDevicesDiscovery",xi(()=>a.bluetooth.stopBluetoothDevicesDiscovery.bind(a.bluetooth))),oO=xe("getBluetoothDevices",xi(()=>a.bluetooth.getBluetoothDevices.bind(a.bluetooth))),aO=xe(D0,xi(()=>a.bluetooth.getConnectedBluetoothDevices.bind(a.bluetooth)),U0),sO=xe(V0,xi(()=>a.bluetooth.createBLEConnection.bind(a.bluetooth)),$0),lO=xe(H0,xi(()=>a.bluetooth.closeBLEConnection.bind(a.bluetooth)),j0),cO=xe(z0,xi(()=>a.bluetooth.getBLEDeviceServices.bind(a.bluetooth)),W0),uO=xe(G0,xi(()=>a.bluetooth.getBLEDeviceCharacteristics.bind(a.bluetooth)),q0),fO=xe(Y0,xi(()=>a.bluetooth.notifyBLECharacteristicValueChange.bind(a.bluetooth)),J0),dO=xe(K0,xi(()=>a.bluetooth.readBLECharacteristicValue.bind(a.bluetooth)),Z0),pO=xe(X0,xi(()=>a.bluetooth.writeBLECharacteristicValue.bind(a.bluetooth)),Q0),hO=xe(eE,xi(()=>a.bluetooth.setBLEMTU.bind(a.bluetooth)),tE),gO=xe(nE,xi(()=>a.bluetooth.getBLEDeviceRSSI.bind(a.bluetooth)),rE),mO=Dn(Nh,hu(()=>a.ibeacon.onBeaconUpdate.bind(a.ibeacon),Nh)),vO=Dn(Ih,hu(()=>a.ibeacon.onBeaconServiceChange.bind(a.ibeacon),Ih)),_O=xe(iE,xi(()=>a.ibeacon.getBeacons.bind(a.ibeacon))),bO=xe(oE,xi(()=>a.ibeacon.startBeaconDiscovery.bind(a.ibeacon)),aE),yO=xe(sE,xi(()=>a.ibeacon.stopBeaconDiscovery.bind(a.ibeacon))),EO=xe(b0,({phoneNumber:e},{resolve:t})=>(a.device.dial(e),t()),y0),SO={name:{givenName:"firstName",middleName:"middleName",familyName:"lastName"},nickname:"nickName",photos:{type:"url",value:"photoFilePath"},note:"remark",phoneNumbers:[{type:"mobile",value:"mobilePhoneNumber"},{type:"work",value:"workPhoneNumber"},{type:"company",value:"hostNumber"},{type:"home fax",value:"homeFaxNumber"},{type:"work fax",value:"workFaxNumber"}],emails:[{type:"home",value:"email"}],urls:[{type:"other",value:"url"}],organizations:[{type:"company",name:"organization",title:"title"}],ims:[{type:"other",value:"weChatNumber"}],addresses:[{type:"other",preferred:!0,country:"addressCountry",region:"addressState",locality:"addressCity",streetAddress:"addressStreet",postalCode:"addressPostalCode"},{type:"home",country:"homeAddressCountry",region:"homeAddressState",locality:"homeAddressCity",streetAddress:"homeAddressStreet",postalCode:"homeAddressPostalCode"},{type:"company",country:"workAddressCountry",region:"workAddressState",locality:"workAddressCity",streetAddress:"workAddressStreet",postalCode:"workAddressPostalCode"}]},wO=["type","preferred"];function Wd(e,t,n){let r=0;return Object.keys(n).forEach(l=>{let f=n[l];typeof f!=="object"?wO.indexOf(l)!==-1?e[l]=n[l]:typeof t[f]!="undefined"?(r++,e[l]=t[f]):delete e[l]:f instanceof Array?(e[l]=[],f.forEach(w=>{let D={};Wd(D,t,w)&&e[l].push(D)}),e[l].length?r++:delete e[l]):(e[l]={},Wd(e[l],t,f)?r++:delete e[l])}),r}let CO=xe(E0,(e,{resolve:t,reject:n})=>{!e.photoFilePath&&(e.photoFilePath=""),a.contacts.getAddressBook(a.contacts.ADDRESSBOOK_PHONE,r=>{let l=r.create();Wd(l,e,SO),l.save(()=>t(),f=>n())},r=>n())},w0,S0);function Da(e){return typeof u!="undefined"?u.requireModule(e):__requireNativePlugin__(e)}function pg(e,t,n){return Da("plus").sendNativeEvent(e,t,n)}let AO=xe(C0,(e,{resolve:t,reject:n})=>{Da("clipboard").getString(l=>{l.result==="success"?t({data:l.data}):n("getClipboardData:fail")})}),OO=xe(A0,(e,{resolve:t})=>{Da("clipboard").setString(e.data),t()},T0,O0),hg="onNetworkStatusChange";function gg(){mg().then(({networkType:e})=>{St.invokeOnCallback(hg,{isConnected:e!=="none",networkType:e})})}let TO=Dn(hg,()=>{a.globalEvent.addEventListener("netchange",gg)}),PO=ii("offNetworkStatusChange",()=>{a.globalEvent.removeEventListener("netchange",gg)}),mg=xe("getNetworkType",(e,{resolve:t})=>{let n=Vl[a.networkinfo.getCurrentType()]||"unknown";return t({networkType:n})});function vg(){if(a.os.name.toLowerCase()!=="ios")return!1;let t=Da("faceID");return!!(t&&t.isSupport())}function _g(){return!!(a.fingerprint&&a.fingerprint.isSupport())}let bg=e=>{let t=[];return _g()&&t.push("fingerPrint"),vg()&&t.push("facial"),e&&e({supportMode:t}),{supportMode:t,errMsg:"checkIsSupportSoterAuthentication:ok"}},NO=xe(fE,(e,{resolve:t,reject:n})=>{bg(t)}),yg=({checkAuthMode:e,resolve:t,reject:n})=>{let r=(f,_)=>n&&n(f,_),l=f=>t&&t(f);if(e==="fingerPrint"){if(_g()){let f=a.fingerprint.isKeyguardSecure()&&a.fingerprint.isEnrolledFingerprints();return l({isEnrolled:f}),{isEnrolled:f,errMsg:"checkIsSoterEnrolledInDevice:ok"}}return r("not support",{isEnrolled:!1}),{isEnrolled:!1,errMsg:"checkIsSoterEnrolledInDevice:fail not support"}}else if(e==="facial"){if(vg()){let f=Da("faceID"),_=f&&f.isKeyguardSecure()&&f.isEnrolledFaceID();return l({isEnrolled:_}),{isEnrolled:_,errMsg:"checkIsSoterEnrolledInDevice:ok"}}return r("not support",{isEnrolled:!1}),{isEnrolled:!1,errMsg:"checkIsSoterEnrolledInDevice:fail not support"}}return r("not support",{isEnrolled:!1}),{isEnrolled:!1,errMsg:"checkIsSoterEnrolledInDevice:fail not support"}},IO=xe(dE,({checkAuthMode:e},{resolve:t,reject:n})=>{yg({checkAuthMode:e,resolve:t,reject:n})},gE,hE),kO=xe(mE,({requestAuthModes:e,challenge:t=!1,authContent:n},{resolve:r,reject:l})=>{Sr();let{t:f}=et(),{supportMode:_}=bg();if(!_.length)return l("not support",{authMode:"fingerPrint",errCode:90001});let w=[];if(e.forEach(_t=>{_.indexOf(_t)>-1&&w.push(_t)}),!w.length)return l("startSoterAuthentication:fail no corresponding mode",{authMode:"fingerPrint",errCode:90003});let D=[];if(w.forEach(_t=>{yg({checkAuthMode:_t}).isEnrolled&&D.push(_t)}),!D.length)return l(`startSoterAuthentication:fail no ${w[0]} enrolled`,{authMode:w[0],errCode:90011});let I=D[0],B=null,ve,Ae=n||f("uni.startSoterAuthentication.authContent"),Re=_t=>{let{code:Ct}=_t,Zt={authMode:I},zt={4:()=>{B?(y(ve),B.setTitle(f("uni.startSoterAuthentication.waitingContent")),ve=O(()=>{B&&B.setTitle(Ae)},1e3)):l("",Z.extend(Zt,{errCode:90009}))},5:()=>{a.nativeUI.closeWaiting(),l("authenticate freeze. please try again later",Z.extend(Zt,{errCode:90010}))},6:()=>{a.nativeUI.closeWaiting(),l("cancel",Z.extend(Zt,{errCode:90008}))}};Ct&&zt[Ct]?zt[Ct]():(a.nativeUI.closeWaiting(),l("",Z.extend(Zt,{errCode:90007})))};I==="fingerPrint"?(a.os.name.toLowerCase()==="android"&&(B=a.nativeUI.showWaiting(Ae),B.onclose=function(){a.fingerprint.cancel()}),a.fingerprint.authenticate(()=>{a.nativeUI.closeWaiting(),r({authMode:I,errCode:0})},Re,{message:Ae})):I==="facial"&&Da("faceID").authenticate({message:Ae},Ct=>{Ct.type==="success"&&Ct.code===0?r({authMode:I,errCode:0}):Re(Ct)})},_E,vE),xO=xe(bE,(e,{resolve:t,reject:n})=>{Di();let{t:r}=et(),f=ig()!=="light",_,w=!1,D=Eo({url:"__uniappscan",data:Object.assign({},e,{messages:{fail:r("uni.scanCode.fail"),"flash.on":r("uni.scanCode.flash.on"),"flash.off":r("uni.scanCode.flash.off")}}),style:{animationType:e.animationType||"pop-in",titleNView:{autoBackButton:!0,type:"float",titleText:e.titleText||r("uni.scanCode.title"),titleColor:"#ffffff",backgroundColor:"rgba(0,0,0,0)",buttons:e.onlyFromCamera?[]:[{text:e.albumText||r("uni.scanCode.album"),fontSize:"17px",width:"60px",onclick:()=>{D.sendMessage({type:"gallery"})}}]},popGesture:"close",background:"#000000",backButtonAutoControl:"close"},onMessage({event:I,detail:B}){_=B,w=I==="marked"},onClose(){f&&a.navigator.setStatusBarStyle("dark"),_?w?(delete _.message,t(_)):n(_.message):n("cancel")}});f&&(a.navigator.setStatusBarStyle("light"),D.webview.addEventListener("popGesture",({type:I,result:B})=>{I==="start"?a.navigator.setStatusBarStyle("dark"):I==="end"&&!B&&a.navigator.setStatusBarStyle("light")}))},yE,SE),Eg=e=>{St.invokeOnCallback(se.ON_THEME_CHANGE,e)},RO=Dn(se.ON_THEME_CHANGE,()=>{St.on(se.ON_THEME_CHANGE,Eg)}),MO=ii(se.OFF_THEME_CHANGE,()=>{St.off(se.ON_THEME_CHANGE,Eg)}),BO=xe(lE,(e,{resolve:t})=>{let n=a.screen.getBrightness(!1);t({value:n})}),LO=xe(cE,(e,{resolve:t})=>{a.screen.setBrightness(e.value,!1),t()}),FO=xe(uE,(e,{resolve:t})=>{a.device.setWakelock(!!e.keepScreenOn),t()}),DO=Ht(wE,()=>{let{getSystemSetting:e}=u.requireModule("plus"),t=e();try{typeof t=="string"&&(t=JSON.parse(t))}catch(n){}return t}),Sg=Ht(CE,()=>{let{getAppAuthorizeSetting:e}=u.requireModule("plus"),t=e();try{typeof t=="string"&&(t=JSON.parse(t))}catch(n){}for(let n in t)Z.hasOwn(t,n)&&t[n]==="undefined"&&(t[n]=void 0);return t}),UO=xe(AE,(e,{resolve:t,reject:n})=>{let{openAppAuthorizeSetting:r}=u.requireModule("plus");r(f=>{f.type==="success"?t():n()})}),VO=xe(fS,(e,{resolve:t,reject:n})=>{let r=bi+"/download/";a.io.getImageInfo(Z.extend(e,{savePath:r,filename:r,success:xc(t),fail:Rr(n)}))},pS,dS),$O=xe(_S,(e,{resolve:t,reject:n})=>{a.io.getVideoInfo({filePath:e.src,success:r=>{t({orientation:r.orientation,type:r.type,duration:r.duration,size:r.size,height:r.height,width:r.width,fps:r.fps||30,bitrate:r.bitrate})},fail:Rr(n)})},yS,bS),HO=xe(hS,({current:e=0,indicator:t="number",loop:n=!1,urls:r,longPressActions:l},{resolve:f,reject:_})=>{eo();let{t:w}=et();r=r.map(I=>Gt(I));let D=Number(e);isNaN(D)?(e=r.indexOf(Gt(e)),e=e<0?0:e):e=D,a.nativeUI.previewImage(r,{current:e,indicator:t,loop:n,onLongPress:function(I){let B=[],ve="",Ae=l&&Z.isPlainObject(l);Ae?(B=l.itemList?l.itemList:[],ve=l.itemColor?l.itemColor:"#000000"):(B=[w("uni.previewImage.button.save")],ve="#000000");let Re={buttons:B.map(_t=>({title:_t,color:ve})),cancel:w("uni.previewImage.cancel")};a.nativeUI.actionSheet(Re,_t=>{if(_t.index>0){if(Ae){Z.isFunction(l.success)&&l.success({tapIndex:_t.index-1,index:I.index});return}a.gallery.save(I.url,()=>{a.nativeUI.toast(w("uni.previewImage.save.success"))},function(){a.nativeUI.toast(w("uni.previewImage.save.fail"))})}else Ae&&Z.isFunction(l.fail)&&l.fail({errMsg:"showActionSheet:fail cancel"})})}}),f()},mS,gS),jO=xe(vS,(e,{resolve:t,reject:n})=>{try{a.nativeUI.closePreviewImage(),t()}catch(r){n()}}),Gd,vu=!1,qd,_u=(e,t={})=>{zO(Z.extend({state:e},t))},Xu={start({duration:e=6e4,sampleRate:t,numberOfChannels:n,encodeBitRate:r,format:l="mp3",frameSize:f}={}){if(vu)return _u("start");Gd=a.audio.getRecorder(),Gd.record({format:l,samplerate:t?String(t):void 0,filename:bi+"/recorder/"},_=>_u("stop",{tempFilePath:_}),_=>_u("error",{errMsg:_.message})),qd=O(()=>{Xu.stop()},e),_u("start"),vu=!0},stop(){vu&&(Gd.stop(),vu=!1,qd&&y(qd))},pause(){vu&&_u("error",{errMsg:"Unsupported operation: pause"})},resume(){vu&&_u("error",{errMsg:"Unsupported operation: resume"})}},Rc={pause:null,resume:null,start:null,stop:null,error:null};function zO(e){let t=e.state;delete e.state,delete e.errMsg,t&&Z.isFunction(Rc[t])&&Rc[t](e)}class WO{constructor(){}onError(t){Rc.error=t}onFrameRecorded(t){}onInterruptionBegin(t){}onInterruptionEnd(t){}onPause(t){Rc.pause=t}onResume(t){Rc.resume=t}onStart(t){Rc.start=t}onStop(t){Rc.stop=t}pause(){Xu.pause()}resume(){Xu.resume()}start(t={}){Xu.start(t)}stop(){Xu.stop()}}let wg,GO=Ht(TS,()=>wg||(wg=new WO)),qO=xe(CS,(e,{resolve:t,reject:n})=>{a.gallery.save(e.filePath,xc(t),Rr(n))},OS,AS),YO=xe(ES,(e,{resolve:t,reject:n})=>{a.gallery.save(e.filePath,xc(t),Rr(n))},wS,SS),JO=xe(PS,(e,{resolve:t,reject:n})=>{let r=`${bi}/compressed/${Date.now()}_${Qa(e.src)}`,{compressedWidth:l,compressedHeight:f}=e;typeof l=="number"&&(e.width=l+"px"),typeof f=="number"&&(e.height=f+"px"),a.zip.compressImage(Z.extend({},e,{dst:r}),()=>{t({tempFilePath:r})},n)},IS,NS),KO=xe(kS,(e,{resolve:t,reject:n})=>{let r=`${bi}/compressed/${Date.now()}_${Qa(e.src)}`;a.zip.compressVideo(Z.extend({},e,{filename:r}),l=>{t({tempFilePath:r,size:l.size})},n)},RS,xS);function ZO(e){return new Promise((t,n)=>{a.io.resolveLocalFileSystemURL(e,function(r){r.getMetadata(t,n,!1)},n)})}let XO=xe(oS,({count:e,sizeType:t,sourceType:n,crop:r}={},{resolve:l,reject:f})=>{Qi();let{t:_}=et(),w=Rr(f);function D(ve){let Ae=[],Re=[];Promise.all(ve.map(_t=>ZO(_t))).then(_t=>{_t.forEach((Ct,Zt)=>{let zt=ve[Zt];Re.push(zt),Ae.push({path:zt,size:Ct.size})}),l({tempFilePaths:Re,tempFiles:Ae})}).catch(w)}function I(){a.camera.getCamera().captureImage(Ae=>D([Ae]),w,{filename:bi+"/camera/",resolution:"high",crop:r,sizeType:t})}function B(){a.gallery.pick(({files:ve})=>D(ve),w,{maximum:e,multiple:!0,system:!1,filename:bi+"/gallery/",permissionAlert:!0,crop:r,sizeType:t})}if(n.length===1){if(n.includes("album")){B();return}else if(n.includes("camera")){I();return}}a.nativeUI.actionSheet({cancel:_("uni.chooseImage.cancel"),buttons:[{title:_("uni.chooseImage.sourceType.camera")},{title:_("uni.chooseImage.sourceType.album")}]},ve=>{switch(ve.index){case 1:I();break;case 2:B();break;default:w();break}})},sS,aS),QO=xe(lS,({sourceType:e,compressed:t,maxDuration:n,camera:r},{resolve:l,reject:f})=>{_i();let{t:_}=et(),w=Rr(f);function D(ve){a.io.getVideoInfo({filePath:ve,success(Ae){let Re={errMsg:"chooseVideo:ok",tempFilePath:ve,size:Ae.size,duration:Ae.duration,width:Ae.width,height:Ae.height};l(Re)},fail:w})}function I(){a.gallery.pick(({files:ve})=>D(ve[0]),w,{filter:"video",system:!1,multiple:!0,maximum:1,filename:bi+"/gallery/",permissionAlert:!0,videoCompress:t})}function B(){a.camera.getCamera().startVideoCapture(D,w,{index:r==="front"?"2":"1",videoMaximumDuration:n,filename:bi+"/camera/",videoCompress:t})}if(e.length===1){if(e.includes("album")){I();return}else if(e.includes("camera")){B();return}}a.nativeUI.actionSheet({cancel:_("uni.chooseVideo.cancel"),buttons:[{title:_("uni.chooseVideo.sourceType.camera")},{title:_("uni.chooseVideo.sourceType.album")}]},ve=>{switch(ve.index){case 1:B();break;case 2:I();break;default:w();break}})},uS,cS),eT=xe(ZE,(e,{resolve:t})=>{a.key.showSoftKeybord(),t()}),tT=xe(KE,(e,{resolve:t})=>{a.key.hideSoftKeybord(),t()});function Cg(e){St.invokeOnCallback(se.ON_KEYBOARD_HEIGHT_CHANGE,e)}let nT=Dn(se.ON_KEYBOARD_HEIGHT_CHANGE,()=>{St.on(se.ON_KEYBOARD_HEIGHT_CHANGE,Cg)}),rT=ii(se.ON_KEYBOARD_HEIGHT_CHANGE,()=>{St.off(se.ON_KEYBOARD_HEIGHT_CHANGE,Cg)});class iT{constructor(t){this._callbacks=[],this._downloader=t,t.addEventListener("statechanged",(n,r)=>{n.downloadedSize&&n.totalSize&&this._callbacks.forEach(l=>{l({progress:Math.round(n.downloadedSize/n.totalSize*100),totalBytesWritten:n.downloadedSize,totalBytesExpectedToWrite:n.totalSize})})})}abort(){this._downloader.abort()}onProgressUpdate(t){!Z.isFunction(t)||this._callbacks.push(t)}offProgressUpdate(t){let n=this._callbacks.indexOf(t);n>=0&&this._callbacks.splice(n,1)}onHeadersReceived(t){throw new Error("Method not implemented.")}offHeadersReceived(t){throw new Error("Method not implemented.")}}let oT=Dr(zS,({url:e,header:t,timeout:n},{resolve:r,reject:l})=>{n=(n||k.networkTimeout&&k.networkTimeout.request||60*1e3)/1e3;let f=a.downloader.createDownload(e,{timeout:n,filename:bi+"/download/",retry:0,retryInterval:0},(w,D)=>{D?r({tempFilePath:w.filename,statusCode:D}):l(`statusCode: ${D}`)}),_=new iT(f);for(let w in t)Z.hasOwn(t,w)&&f.setRequestHeader(w,t[w]);return f.start(),_},GS,WS),aT=e=>{let t=e["Set-Cookie"]||e["set-cookie"],n=[];if(!t)return[];t[0]==="["&&t[t.length-1]==="]"&&(t=t.slice(1,-1));let r=t.split(";");for(let l=0;l<r.length;l++)r[l].indexOf("Expires=")!==-1||r[l].indexOf("expires=")!==-1?n.push(r[l].replace(",","")):n.push(r[l]);return n=n.join(";").split(","),n};function sT(e,t){if(Z.isString(e.data)&&e.data.charCodeAt(0)===65279&&(e.data=e.data.slice(1)),e.statusCode=parseInt(String(e.statusCode),10),Z.isPlainObject(e.header)&&(e.header=Object.keys(e.header).reduce(function(n,r){let l=e.header[r];return Z.isArray(l)?n[r]=l.join(","):Z.isString(l)&&(n[r]=l),n},{})),t.dataType&&t.dataType.toLowerCase()==="json")try{e.data=JSON.parse(e.data)}catch(n){}return e}class lT{constructor(t){this._requestTask=t}abort(){this._requestTask.abort()}offHeadersReceived(){}onHeadersReceived(){}}let cT=Dr(MS,(e,{resolve:t,reject:n})=>{let{header:r,method:l,data:f,timeout:_,url:w,responseType:D,sslVerify:I,firstIpv4:B,tls:ve}=e,Ae;for(let ut in r)if(ut.toLowerCase()==="content-type"){Ae=r[ut];break}l!=="GET"&&Ae&&Ae.indexOf("application/json")===0&&Z.isPlainObject(f)&&(f=JSON.stringify(f));let Re=Da("stream"),_t={},Ct,Zt,zt=!1;for(let ut in r)if(!zt&&ut.toLowerCase()==="content-type"){if(zt=!0,_t["Content-Type"]=r[ut],l!=="GET"&&r[ut].indexOf("application/x-www-form-urlencoded")===0&&!Z.isString(f)&&!(f instanceof ArrayBuffer)){let Xt=[];for(let Wt in f)Z.hasOwn(f,Wt)&&Xt.push(encodeURIComponent(Wt)+"="+encodeURIComponent(f[Wt]));f=Xt.join("&")}}else _t[ut]=r[ut];!zt&&l==="POST"&&(_t["Content-Type"]="application/x-www-form-urlencoded; charset=UTF-8"),_&&(Ct=O(()=>{Zt=!0,n("timeout")},_+200));let wn={method:l,url:w.trim(),headers:_t,type:D==="arraybuffer"?"base64":"text",timeout:_||6e5,sslVerify:!I,firstIpv4:B,tls:ve},bn=!1;l!=="GET"&&(toString.call(f)==="[object ArrayBuffer]"?bn=!0:wn.body=Z.isString(f)?f:JSON.stringify(f));let Ft=({ok:ut,status:Xt,data:Wt,headers:Jt,errorMsg:qt})=>{if(Zt)return;Ct&&y(Ct);let cr=Xt;if(cr>0)t(sT({data:ut&&D==="arraybuffer"?Oi(Wt):Wt,statusCode:cr,header:Jt,cookies:aT(Jt)},e));else{let Qt="abort statusCode:"+cr;qt&&(Qt=Qt+" "+qt),n(Qt)}};return bn?Re.fetchWithArrayBuffer({"@type":"binary",base64:Zo(f)},wn,Ft):Re.fetch(wn,Ft),new lT({abort(){Zt=!0,Ct&&y(Ct),n("abort")}})},US,VS),uT=xe($S,({certificates:e},{resolve:t,reject:n})=>{Da("stream").configMTLS(e,({type:l,code:f,message:_})=>{switch(l){case"success":t({code:f});break;case"fail":n(_,{code:f});break}})},HS,jS),bu=[],yu={},Yd={open:"",close:"",error:"",message:""},Qu;function fT(e){let t=String(Date.now()),n;try{Qu||(Qu=Da("uni-webSocket"),dT(Qu)),Qu.WebSocket({id:t,url:e.url,protocol:Z.isArray(e.protocols)?e.protocols.join(","):e.protocols,header:e.header})}catch(r){n=r}return{socket:Qu,socketId:t,errMsg:n}}function dT(e){e.onopen(t=>{let n=yu[t.id];!n||n._socketOnOpen()}),e.onmessage(t=>{let n=yu[t.id];!n||n._socketOnMessage(t)}),e.onerror(t=>{let n=yu[t.id];!n||n._socketOnError()}),e.onclose(t=>{let{id:n,code:r,reason:l}=t,f=yu[n];!f||f._socketOnClose({code:r,reason:l})})}class pT{constructor(t,n){this.id=n,this._socket=t,this._callbacks={open:[],close:[],error:[],message:[]},this.CLOSED=3,this.CLOSING=2,this.CONNECTING=0,this.OPEN=1,this.readyState=this.CLOSED,!!this._socket}_socketOnOpen(){this.readyState=this.OPEN,this.socketStateChange("open")}_socketOnMessage(t){this.socketStateChange("message",{data:typeof t.data=="object"?Oi(t.data.base64):t.data})}_socketOnError(){this.socketStateChange("error"),this.onErrorOrClose()}_socketOnClose(t){this.socketStateChange("close",t),this.onErrorOrClose()}onErrorOrClose(){this.readyState=this.CLOSED,delete yu[this.id];let t=bu.indexOf(this);t>=0&&bu.splice(t,1)}socketStateChange(t,n={}){let{code:r,reason:l}=n,f=t==="message"?{data:n.data}:t==="close"?{code:r,reason:l}:{};this===bu[0]&&Yd[t]&&St.invokeOnCallback(Yd[t],f),this._callbacks[t].forEach(_=>{Z.isFunction(_)&&_(f)})}send(t,n=!0){this.readyState!==this.OPEN&&se.callOptions(t,"sendSocketMessage:fail WebSocket is not connected");try{this._socket.send({id:this.id,data:typeof t.data=="object"?{"@type":"binary",base64:Zo(t.data)}:t.data}),n&&se.callOptions(t,"sendSocketMessage:ok")}catch(r){n&&se.callOptions(t,`sendSocketMessage:fail ${r}`)}}close(t,n=!0){this.readyState=this.CLOSING;try{this._socket.close(Z.extend({id:this.id,args:t})),n&&se.callOptions(t,"closeSocket:ok")}catch(r){n&&se.callOptions(t,`closeSocket:fail ${r}`)}}onOpen(t){this._callbacks.open.push(t)}onClose(t){this._callbacks.close.push(t)}onError(t){this._callbacks.error.push(t)}onMessage(t){this._callbacks.message.push(t)}}let hT=Dr(KS,({url:e,protocols:t,header:n,method:r},{resolve:l,reject:f})=>{let{socket:_,socketId:w,errMsg:D}=fT({url:e,protocols:t,header:n,method:r}),I=new pT(_,w);return D?O(()=>{f(D)},0):(bu.push(I),yu[w]=I),O(()=>{l()},0),I},XS,ZS),gT=xe(QS,(e,{resolve:t,reject:n})=>{let r=bu[0];if(!r||r.readyState!==r.OPEN){n("WebSocket is not connected");return}r.send({data:e.data},!1),t()},ew),mT=xe(tw,(e,{resolve:t,reject:n})=>{let r=bu[0];if(!r){n("WebSocket is not connected");return}r.readyState=r.CLOSING,r.close(e,!1),t()},nw);function Af(e){let t=`onSocket${Z.capitalize(e)}`;return Dn(t,()=>{Yd[e]=t})}let vT=Af("open"),_T=Af("error"),bT=Af("message"),yT=Af("close");class ET{constructor(t){this._callbacks=[],this._uploader=t,t.addEventListener("statechanged",(n,r)=>{n.uploadedSize&&n.totalSize&&this._callbacks.forEach(l=>{l({progress:parseInt(String(n.uploadedSize/n.totalSize*100)),totalBytesSent:n.uploadedSize,totalBytesExpectedToSend:n.totalSize})})})}abort(){this._uploader.abort()}onProgressUpdate(t){!Z.isFunction(t)||this._callbacks.push(t)}onHeadersReceived(){}offProgressUpdate(t){let n=this._callbacks.indexOf(t);n>=0&&this._callbacks.splice(n,1)}offHeadersReceived(){}}let ST=Dr(qS,({url:e,timeout:t,header:n,formData:r,files:l,filePath:f,name:_},{resolve:w,reject:D})=>{t=(t||k.networkTimeout&&k.networkTimeout.uploadFile||60*1e3)/1e3;let I=a.uploader.createUpload(e,{timeout:t,retry:0,retryInterval:0},(ve,Ae)=>{Ae?w({data:ve.responseText,statusCode:Ae}):D(`statusCode: ${Ae}`)});for(let ve in n)Z.hasOwn(n,ve)&&I.setRequestHeader(ve,String(n[ve]));for(let ve in r)Z.hasOwn(r,ve)&&I.addData(ve,String(r[ve]));l&&l.length?l.forEach(ve=>{I.addFile(Gt(ve.uri),{key:ve.name||"file"})}):I.addFile(Gt(f),{key:_});let B=new ET(I);return I.start(),B},JS,YS),cc={},wT=["play","canplay","ended","stop","waiting","seeking","seeked","pause"],Ag="playback",CT=200,AT=e=>{let t=cc[e];!t||t.initStateChage||(t.initStateChage=!0,t.addEventListener("error",n=>{Og({state:"error",audioId:e,errMsg:"MediaError",errCode:n.code})}),wT.forEach(n=>{t.addEventListener(n,()=>{n==="play"?t.isStopped=!1:n==="stop"&&(t.isStopped=!0),Og({state:n,audioId:e})})}))};function OT(){let e=`${Date.now()}${Math.random()}`,t=cc[e]=a.audio.createPlayer("");return t.src="",t.volume=1,t.startTime=0,t.setSessionCategory(Ag),{errMsg:"createAudioInstance:ok",audioId:e}}function TT({audioId:e,src:t,startTime:n,autoplay:r=!1,loop:l=!1,obeyMuteSwitch:f,volume:_,sessionCategory:w=Ag,playbackRate:D}){let I=cc[e];if(I){let B={loop:l,autoplay:r};if(t){let ve=Gt(t);I.src!==ve&&(I.src=B.src=ve)}n&&(I.startTime=B.startTime=n),typeof _=="number"&&(I.volume=B.volume=_),I.setStyles(B),w&&I.setSessionCategory(w),D&&I.playbackRate&&I.playbackRate(D),AT(e)}return{errMsg:"setAudioState:ok"}}function PT({audioId:e}){let t=cc[e];if(!t)return{errMsg:"getAudioState:fail"};let{src:n,startTime:r,volume:l}=t;return{errMsg:"getAudioState:ok",duration:1e3*(t.getDuration()||0),currentTime:t.isStopped?0:1e3*t.getPosition(),paused:t.isPaused(),src:n,volume:l,startTime:1e3*r,buffered:1e3*t.getBuffered()}}function NT({operationType:e,audioId:t,currentTime:n}){let r=cc[t];switch(e){case"play":case"pause":case"stop":r[e==="play"&&r.isPaused()?"resume":e]();break;case"seek":typeof n!="undefined"&&r.seekTo(n/1e3);break}return{errMsg:"operateAudio:ok"}}let Jd=Object.create(null),Og=({state:e,audioId:t,errMsg:n,errCode:r})=>{let l=Jd[t];if(l)if(Zd(l,e,n,r),e==="play"){let f=l.currentTime;Zd(l,"timeUpdate"),l.__timing=h(()=>{l.currentTime!==f&&Zd(l,"timeUpdate")},CT)}else(e==="pause"||e==="stop"||e==="error")&&v(l.__timing)},IT=[{name:"src",cache:!0},{name:"startTime",default:0,cache:!0},{name:"autoplay",default:!1,cache:!0},{name:"loop",default:!1,cache:!0},{name:"obeyMuteSwitch",default:!0,readonly:!0,cache:!0},{name:"duration",readonly:!0},{name:"currentTime",readonly:!0},{name:"paused",readonly:!0},{name:"buffered",readonly:!0},{name:"volume"},{name:"playbackRate",cache:!0}];class Kd{constructor(t){this.id=t,this._callbacks={},this._options={},ch.forEach(n=>{this._callbacks[n]=[]}),IT.forEach(n=>{let r=n.name;Object.defineProperty(this,r,{get:()=>{let l=n.cache?this._options:PT({audioId:this.id}),f=r in l?l[r]:n.default;return typeof f=="number"&&r!=="volume"?f/1e3:f},set:n.readonly?void 0:l=>{this._options[r]=l,TT(Z.extend({},this._options,{audioId:this.id}))}})}),kT()}play(){this._operate("play")}pause(){this._operate("pause")}stop(){this._operate("stop")}seek(t){this._operate("seek",{currentTime:t*1e3})}destroy(){v(this.__timing),cc[this.id]&&(cc[this.id].close(),delete cc[this.id]),delete Jd[this.id]}_operate(t,n){NT(Z.extend({},n,{audioId:this.id,operationType:t}))}}let kT=se.once(()=>{ch.forEach(e=>{Kd.prototype[e]=function(t){Z.isFunction(t)&&this._callbacks[e].push(t)}}),Ay.forEach(e=>{Kd.prototype[e]=function(t){let n=this._callbacks[e],r=n.indexOf(t);r>=0&&n.splice(r,1)}})});function Zd(e,t,n,r){let l=`on${Z.capitalize(t)}`;e._callbacks[l].forEach(f=>{Z.isFunction(f)&&f(t==="error"?{errMsg:n,errCode:r}:{})})}let xT=Ht(Qb,()=>{let{audioId:e}=OT(),t=new Kd(e);return Jd[e]=t,t}),RT=["canplay","play","pause","stop","ended","timeUpdate","prev","next","error","waiting"],Tg={canplay:[],play:[],pause:[],stop:[],ended:[],timeUpdate:[],prev:[],next:[],error:[],waiting:[]},fn,Xd=null,MT=250,BT=["play","pause","ended","stop","canplay"];function LT(){Of(),Mc({state:"timeUpdate"}),Xd=h(()=>{Mc({state:"timeUpdate"})},MT)}function Of(){Xd!==null&&v(Xd)}function FT(){if(fn)return;let e=St.invokeOnCallback;fn=a.audio.createPlayer({autoplay:!0,backgroundControl:!0}),fn.src=fn.title=fn.epname=fn.singer=fn.coverImgUrl=fn.webUrl="",fn.startTime=0,BT.forEach(t=>{fn.addEventListener(t,()=>{t==="play"?(fn.isStopped=!1,LT()):t==="stop"&&(fn.isStopped=!0),(t==="pause"||t==="ended"||t==="stop")&&Of();let n=`onMusic${t[0].toUpperCase()+t.slice(1)}`;e(n,{dataUrl:fn.src,errMsg:`${n}:ok`}),Mc({state:t,dataUrl:fn.src})})}),fn.addEventListener("waiting",()=>{Of(),Mc({state:"waiting",dataUrl:fn.src})}),fn.addEventListener("error",t=>{Of(),e("onMusicError",{dataUrl:fn.src,errMsg:"Error:"+t.message}),Mc({state:"error",dataUrl:fn.src,errMsg:t.message,errCode:t.code})}),fn.addEventListener("prev",()=>{Mc({state:"prev"})}),fn.addEventListener("next",()=>{Mc({state:"next"})})}function DT(){let e={duration:0,currentTime:0,paused:!1,src:"",buffered:0,title:"",epname:"",singer:"",coverImgUrl:"",webUrl:"",startTime:0,errMsg:"getBackgroundAudioState:ok"};if(fn){let t={duration:fn.getDuration()||0,currentTime:fn.isStopped?0:fn.getPosition(),paused:fn.isPaused(),src:fn.src,buffered:fn.getBuffered(),title:fn.title,epname:fn.epname,singer:fn.singer,coverImgUrl:fn.coverImgUrl,webUrl:fn.webUrl,startTime:fn.startTime};e=Z.extend(e,t)}return e}function Pg(e,t){FT();let n=["src","startTime","coverImgUrl","webUrl","singer","epname","title"];if(t==="playbackRate"){let l=e[t];fn.playbackRate&&fn.playbackRate(parseFloat(l));return}let r={};Object.keys(e).forEach(l=>{if(n.indexOf(l)>=0){let f=e[l];l===n[0]&&f&&(f=Gt(f)),fn[l]=r[l]=f}}),fn.setStyles(r)}function UT({operationType:e,src:t,position:n,api:r="operateMusicPlayer",title:l,coverImgUrl:f}){var _=["resume","pause","stop"];return _.indexOf(e)>0?fn&&fn[e]():e==="play"?(Pg({src:t,startTime:n,title:l,coverImgUrl:f}),fn.play()):e==="seek"&&fn&&fn.seekTo(n),{errMsg:`${r}:ok`}}function VT({operationType:e,src:t,startTime:n,currentTime:r}){return UT({operationType:e,src:t,position:n||r||0,api:"operateBackgroundAudio"})}function Mc({state:e,errMsg:t,errCode:n,dataUrl:r}){Tg[e].forEach(l=>{Z.isFunction(l)&&l(e==="error"?{errMsg:t,errCode:n}:{})})}let $T=se.once(()=>{RT.forEach(e=>{Ng.prototype[`on${Z.capitalize(e)}`]=function(t){Tg[e].push(t)}})}),HT=[{name:"duration",readonly:!0},{name:"currentTime",readonly:!0},{name:"paused",readonly:!0},{name:"src",cache:!0},{name:"startTime",default:0,cache:!0},{name:"buffered",readonly:!0},{name:"title",cache:!0},{name:"epname",cache:!0},{name:"singer",cache:!0},{name:"coverImgUrl",cache:!0},{name:"webUrl",cache:!0},{name:"protocol",readonly:!0,default:"http"},{name:"playbackRate",default:1,cache:!0}];class Ng{constructor(){this._options={},HT.forEach(t=>{let n=t.name;Object.defineProperty(this,n,{get:()=>{let r=t.cache?this._options:DT();return n in r?r[n]:t.default},set:t.readonly?void 0:r=>{this._options[n]=r,Pg(this._options,n)}})}),$T()}play(){this._operate("play")}pause(){this._operate("pause")}stop(){this._operate("stop")}seek(t){this._operate("seek",{currentTime:t})}_operate(t,n){VT(Z.extend({},n,{operationType:t}))}}let Ig,jT=Ht(_0,()=>Ig||(Ig=new Ng));class zT{constructor(t,n){this.id=t,this.ctx=n}start(t){return Mn(this.ctx,"start",t)}stop(t){return Mn(this.ctx,"stop",t)}pause(t){return Mn(this.ctx,"pause",t)}resume(t){return Mn(this.ctx,"resume",t)}switchCamera(t){return Mn(this.ctx,"switchCamera",t)}snapshot(t){return Mn(this.ctx,"snapshot",t)}toggleTorch(t){return Mn(this.ctx,"toggleTorch",t)}playBGM(t){return Gn(this.ctx,"playBGM",t)}stopBGM(t){return Mn(this.ctx,"stopBGM",t)}pauseBGM(t){return Mn(this.ctx,"pauseBGM",t)}resumeBGM(t){return Mn(this.ctx,"resumeBGM",t)}setBGMVolume(t){return Gn(this.ctx,"setBGMVolume",t)}startPreview(t){return Mn(this.ctx,"startPreview",t)}stopPreview(t){return Mn(this.ctx,"stopPreview",t)}}function uc(e,t,n,r){St.invokeViewMethod("livepusher."+e,{livePusherId:e,type:n,data:r},t)}class WT{constructor(t,n){this.id=t,this.pageId=n}start(){uc(this.id,this.pageId,"start")}stop(){uc(this.id,this.pageId,"stop")}pause(){uc(this.id,this.pageId,"pause")}resume(){uc(this.id,this.pageId,"resume")}switchCamera(){uc(this.id,this.pageId,"switchCamera")}startPreview(){uc(this.id,this.pageId,"preview")}stopPreview(){uc(this.id,this.pageId,"stop")}snapshot(){uc(this.id,this.pageId,"snapshot")}}let GT=Ht(ey,(e,t)=>{if(t.$page.meta.isNVue){if(!t)return console.warn("uni.createLivePusherContext: 2 arguments required, but only 1 present");let n=oa(e,t);return n?new zT(e,n):console.warn("Can not find `"+e+"`")}return new WT(e,t.$page.id)},ty);function qT(e,t,n,r){function l(f){return f instanceof n?f:new n(function(_){_(f)})}return new(n||(n=Promise))(function(f,_){function w(B){try{I(r.next(B))}catch(ve){_(ve)}}function D(B){try{I(r.throw(B))}catch(ve){_(ve)}}function I(B){B.done?f(B.value):l(B.value).then(w,D)}I((r=r.apply(e,t||[])).next())})}typeof SuppressedError=="function"&&SuppressedError;let qi=3.141592653589793,Tf=6378245,Pf=.006693421622965943;function YT(e,t){if(t=+t,e=+e,kg(e,t))return[e,t];let n=xg(e-105,t-35),r=Rg(e-105,t-35),l=t/180*qi,f=Math.sin(l);f=1-Pf*f*f;let _=Math.sqrt(f);n=n*180/(Tf*(1-Pf)/(f*_)*qi),r=r*180/(Tf/_*Math.cos(l)*qi);let w=t+n,D=e+r;return[e*2-D,t*2-w]}function JT(e,t){if(t=+t,e=+e,kg(e,t))return[e,t];let n=xg(e-105,t-35),r=Rg(e-105,t-35),l=t/180*qi,f=Math.sin(l);f=1-Pf*f*f;let _=Math.sqrt(f);n=n*180/(Tf*(1-Pf)/(f*_)*qi),r=r*180/(Tf/_*Math.cos(l)*qi);let w=t+n;return[e+r,w]}let kg=function(e,t){return e<72.004||e>137.8347||t<.8293||t>55.8271||!1},xg=function(e,t){let n=-100+2*e+3*t+.2*t*t+.1*e*t+.2*Math.sqrt(Math.abs(e));return n+=(20*Math.sin(6*e*qi)+20*Math.sin(2*e*qi))*2/3,n+=(20*Math.sin(t*qi)+40*Math.sin(t/3*qi))*2/3,n+=(160*Math.sin(t/12*qi)+320*Math.sin(t*qi/30))*2/3,n},Rg=function(e,t){let n=300+e+2*t+.1*e*e+.1*e*t+.1*Math.sqrt(Math.abs(e));return n+=(20*Math.sin(6*e*qi)+20*Math.sin(2*e*qi))*2/3,n+=(20*Math.sin(e*qi)+40*Math.sin(e/3*qi))*2/3,n+=(150*Math.sin(e/12*qi)+300*Math.sin(e/30*qi))*2/3,n};function Mg(e,t,n){let r=t.coords;if(e!==t.coordsType){let l;e==="wgs84"?l=YT(r.longitude,r.latitude):e==="gcj02"&&(l=JT(r.longitude,r.latitude)),l&&(r.longitude=l[0],r.latitude=l[1])}n({type:e,altitude:r.altitude||0,latitude:r.latitude,longitude:r.longitude,speed:r.speed,accuracy:r.accuracy,address:t.address,errMsg:"getLocation:ok"})}let KT=xe(Mh,({type:e="wgs84",geocode:t=!1,altitude:n=!1,highAccuracyExpireTime:r,isHighAccuracy:l=!1},{resolve:f,reject:_})=>{a.geolocation.getCurrentPosition(w=>{Mg(e,w,f)},w=>{if(w.code===1501){Mg(e,w,f);return}_("getLocation:fail "+w.message)},{geocode:t,enableHighAccuracy:l||n,timeout:r,coordsType:e})},tS,eS);function Bg(){wo(Mh,(e,t)=>{P.getLocation({type:e.type,altitude:e.altitude,highAccuracyExpireTime:e.highAccuracyExpireTime,isHighAccuracy:e.isHighAccuracy,success(n){t({latitude:n.latitude,longitude:n.longitude,speed:n.speed,accuracy:n.accuracy,altitude:n.altitude,verticalAccuracy:n.verticalAccuracy,horizontalAccuracy:n.horizontalAccuracy})},fail(n){t({errMsg:n.errMsg||"getLocation:fail"})}})})}let Lg="vdSync",ZT="__uniapp__service",Eu="onWebviewReady",XT=0,QT="webviewInserted",eP="webviewRemoved";class tP extends se.UniNode{constructor(t,n,r=!1){super(se.NODE_TYPE_PAGE,"#page",null);this._id=1,this._created=!1,this._updating=!1,this._createActionMap=new Map,this.updateActions=[],this.dicts=[],this.nodeId=0,this.pageId=t,this.pageNode=this,this.options=n,this.isUnmounted=!1,this.createAction=[se.ACTION_TYPE_PAGE_CREATE,n],this.createdAction=[se.ACTION_TYPE_PAGE_CREATED],this.normalizeDict=this._normalizeDict.bind(this),this._update=this.update.bind(this),r&&this.setup()}_normalizeDict(t,n=!0){if(!Z.isPlainObject(t))return this.addDict(t);let r=[];return Object.keys(t).forEach(l=>{let f=[this.addDict(l)],_=t[l];n?f.push(this.addDict(_)):f.push(_),r.push(f)}),r}addDict(t){let{dicts:n}=this,r=n.indexOf(t);return r>-1?r:n.push(t)-1}onInjectHook(t){(t===se.ON_PAGE_SCROLL||t===se.ON_REACH_BOTTOM)&&!this.scrollAction&&(this.scrollAction=[se.ACTION_TYPE_PAGE_SCROLL,this.options.onReachBottomDistance],this.push(this.scrollAction))}onCreate(t,n){return iP(this,t.nodeId,n),t}onInsertBefore(t,n,r){return oP(this,n,t.nodeId,r&&r.nodeId||-1),n}onRemoveChild(t){return aP(this,t.nodeId),t}onAddEvent(t,n,r){t.parentNode&&sP(this,t.nodeId,n,r)}onAddWxsEvent(t,n,r,l){t.parentNode&&lP(this,t.nodeId,n,r,l)}onRemoveEvent(t,n){t.parentNode&&cP(this,t.nodeId,n)}onSetAttribute(t,n,r){t.parentNode&&fP(this,t.nodeId,n,r)}onRemoveAttribute(t,n){t.parentNode&&dP(this,t.nodeId,n)}onTextContent(t,n){t.parentNode&&Dg(this,t.nodeId,n)}onNodeValue(t,n){t.parentNode&&Dg(this,t.nodeId,n)}genId(){return this._id++}push(t,n){if(!this.isUnmounted){switch(t[0]){case se.ACTION_TYPE_CREATE:this._createActionMap.set(t[1],t);break;case se.ACTION_TYPE_INSERT:let r=this._createActionMap.get(t[1]);r?(r[3]=t[2],r[4]=t[3],n&&(r[5]=n)):(n&&(t[4]=n),this.updateActions.push(t));break}t[0]!==se.ACTION_TYPE_INSERT&&this.updateActions.push(t),this._updating||(this._updating=!0,dn.queuePostFlushCb(this._update))}}restore(){this.clear(),this.setup(),this.scrollAction&&this.push(this.scrollAction);let t=n=>{this.onCreate(n,n.nodeName),this.onInsertBefore(n.parentNode,n,null),n.childNodes.forEach(r=>{t(r)})};this.childNodes.forEach(n=>t(n)),this.push(this.createdAction)}setup(){this.send([this.createAction])}update(){let{dicts:t,updateActions:n,_createActionMap:r}=this;this._created||(this._created=!0,n.push(this.createdAction)),n.length&&(t.length&&n.unshift([XT,t]),this.send(n)),this.clear()}clear(){this.dicts.length=0,this.updateActions.length=0,this._updating=!1,this._createActionMap.clear()}send(t){St.publishHandler(Lg,t,this.pageId)}fireEvent(t,n){let r=Fg(t,this);r&&r.dispatchEvent(n)}}function nP(e){let t=Ut(e);return t?t.__page_container__:null}function Qd(e,t,n){if(typeof n=="number"&&(n=nP(n)),n[e]===t)return n;let{childNodes:r}=n;for(let l=0;l<r.length;l++){let f=Qd(e,t,r[l]);if(f)return f}return null}function Fg(e,t){return Qd("nodeId",e,t)}function rP(e,t){return Qd("nodeName",e.toUpperCase(),t)}function iP(e,t,n){e.push([se.ACTION_TYPE_CREATE,t,e.addDict(n),-1,-1])}function oP(e,t,n,r){let l=t.toJSON({attr:!0,normalize:e.normalizeDict});e.push([se.ACTION_TYPE_INSERT,t.nodeId,n,r],Object.keys(l).length?l:void 0)}function aP(e,t){e.push([se.ACTION_TYPE_REMOVE,t])}function sP(e,t,n,r){e.push([se.ACTION_TYPE_ADD_EVENT,t,e.addDict(n),r])}function lP(e,t,n,r,l){e.push([se.ACTION_TYPE_ADD_WXS_EVENT,t,e.addDict(n),e.addDict(r),l])}function cP(e,t,n){e.push([se.ACTION_TYPE_REMOVE_EVENT,t,e.addDict(n)])}function uP(e,t,n){return t==="style"&&Z.isPlainObject(n)?e.normalizeDict(n):e.addDict(n)}function fP(e,t,n,r){e.push([se.ACTION_TYPE_SET_ATTRIBUTE,t,e.addDict(n),uP(e,n,r)])}function dP(e,t,n){e.push([se.ACTION_TYPE_REMOVE_ATTRIBUTE,t,e.addDict(n)])}function Dg(e,t,n){e.push([se.ACTION_TYPE_SET_TEXT,t,e.addDict(n)])}function pP(e,t,n){return new tP(e,t,n)}function Ug(e){let t=e.setup;return e.inheritAttrs=!1,e.setup=(n,r)=>{let{attrs:{__pageId:l,__pagePath:f,__pageInstance:_}}=r,D=dn.getCurrentInstance().proxy;if(Me(D,_),hP(l,D,_),dn.onMounted(()=>{dn.nextTick(()=>{rr(D,se.ON_READY)})}),dn.onBeforeUnmount(()=>{rr(D,se.ON_UNLOAD)}),t)return t(n,r)},e}function Vg(e,t,n){{let r=()=>a.webview.getWebviewById(e+"");t.$getAppWebview=r,t.$.ctx.$scope={$getAppWebview:r}}return t.getOpenerEventChannel=()=>(n.eventChannel||(n.eventChannel=new se.EventChannel(e)),n.eventChannel),t}function hP(e,t,n){vt(Vg(e,t,n))}function gP(e){return Z.isFunction(e)}let $g=new Map;function ep(e,t){$g.set(e,se.once(vP(t)))}function mP(e,t,n,r,l){let f=pP(e,l,!0),_=ht(),w=$g.get(t)(),D=I=>_.mountPage(I,Z.extend({__pageId:e,__pagePath:t,__pageQuery:n,__pageInstance:r},n),f);return Z.isPromise(w)?w.then(I=>D(I)):D(w)}function vP(e){return()=>gP(e)?e().then(t=>Ug(t)):Ug(e)}function _P(e){return qT(this,void 0,void 0,function*(){let t=P.__uniCloud;if(!t)throw new Error("\u4F7F\u7528uni.chooseLocation\u4E14\u4F7F\u7528\u817E\u8BAF\u5730\u56FE\u65F6\uFF0C\u9700\u642D\u914DuniCloud\u4F7F\u7528\uFF0C\u8BE6\u60C5\u8BF7\u53C2\u8003\uFF1Ahttps://uniapp.dcloud.net.cn/api/location/location.html#chooselocation");let{keyword:n,latitude:r,longitude:l,pageIndex:f,pageSize:_,secure:w}=e,D=t.importObject("uni-map-co",{customUI:!0,secretMethods:w?{chooseLocation:"both"}:{}}),I=[];return n?I=(yield D.chooseLocation({action:"search",data:{keyword:n,location:{lat:r,lng:l},radius:1e3,auto_extend:1,get_subpois:0,orderby:"weight",page_index:f,page_size:_},provider:"qqmap",needOriginalResult:!0})).result.data||[]:I=(yield D.chooseLocation({action:"location2address",data:{location:`${r},${l}`,get_poi:1,poi_options:{page_index:f,page_size:_}},provider:"qqmap",needOriginalResult:!0})).result.result.pois||[],I})}function bP(){wo("mapPlaceSearch",(e,t)=>{_P(e).then(t).catch(n=>{console.error(n),t({errMsg:"mapPlaceSearch:fail"})})})}let yP={data(){return{keyword:"",latitude:0,longitude:0,useSecureNetwork:!1,loaded:!1,channel:void 0,closed:!1}},onLoad(e){this.latitude=e.latitude,this.longitude=e.longitude,this.keyword=e.keyword,this.useSecureNetwork=e.useSecureNetwork==="true",this.loaded=!0,this.channel=this.getOpenerEventChannel()},onUnload(){this.closed||this.channel.emit("close",{})},methods:{onClose(e){this.closed=!0,this.channel.emit("close",e.detail),P.navigateBack()}},render:function(e,t,n,r,l,f){return l.loaded?(dn.openBlock(),dn.createElementBlock("location-picker",{key:0,style:{width:"100%",height:"100%"},latitude:l.latitude,longitude:l.longitude,keyword:l.keyword,useSecureNetwork:l.useSecureNetwork,onClose:t[0]||(t[0]=(..._)=>f.onClose&&f.onClose(..._))},null,40,["latitude","longitude","keyword"])):dn.createCommentVNode("v-if",!0)}},Nf="__uniappchooselocation",EP=se.once(()=>{ep(Nf,yP),Oe.push({meta:{navigationBar:{style:"custom"},isNVue:!1,route:Nf},path:"/"+Nf})}),SP=xe(XE,(e,{resolve:t,reject:n})=>{if(k.qqMapKey){EP();let{keyword:w="",latitude:D="",longitude:I="",useSecureNetwork:B=!1}=e||{};P.navigateTo({url:"/"+Nf+"?keyword="+w+"&latitude="+D+"&longitude="+I+"&useSecureNetwork="+B,events:{close:ve=>{ve&&ve.latitude?t(ve):n("cancel")}},fail:ve=>{n(ve.errMsg||"cancel")}});return}let l=ig()!=="light",f,_=Eo({url:"__uniappchooselocation",data:Z.extend({},e,{locale:ju()}),style:{animationType:e.animationType||"slide-in-bottom",titleNView:!1,popGesture:"close",scrollIndicator:"none"},onMessage({event:w,detail:D}){w==="selected"&&(f=D)},onClose(){l&&a.navigator.setStatusBarStyle("dark"),f?t(f):n("cancel")}});l&&(a.navigator.setStatusBarStyle("light"),_.webview.addEventListener("popGesture",({type:w,result:D})=>{w==="start"?a.navigator.setStatusBarStyle("dark"):w==="end"&&!D&&a.navigator.setStatusBarStyle("light")}))},QE),Hg={en:{"map.title.amap":"AutoNavi Maps","map.title.baidu":"Baidu Maps","map.title.tencent":"Tencent Maps","map.title.apple":"Apple Maps","map.title.google":"Google Maps","location.title":"My Location","select.cancel":"Cancel","location.destination":"Destination"},zh:{"map.title.amap":"\u9AD8\u5FB7\u5730\u56FE","map.title.baidu":"\u767E\u5EA6\u5730\u56FE","map.title.tencent":"\u817E\u8BAF\u5730\u56FE","map.title.apple":"\u82F9\u679C\u5730\u56FE","map.title.google":"\u8C37\u6B4C\u5730\u56FE","location.title":"\u6211\u7684\u4F4D\u7F6E","select.cancel":"\u53D6\u6D88","location.destination":"\u76EE\u6807\u5730\u70B9"}},If="";function wP(){If||(If=a.os.language.toLowerCase().replace("_","-").split("-")[0])}function fl(e){return wP(),Hg[If]&&Hg[If][e]||e}function CP(e,t,n,r){let l=u.requireModule("mapSearch");var f=[{title:fl("map.title.tencent"),getUrl:function(){var D;return D="https://apis.map.qq.com/uri/v1/routeplan?type=drive&to="+encodeURIComponent(n)+"&tocoord="+encodeURIComponent(e+","+t)+"&referer=APP",D}},{title:fl("map.title.google"),getUrl:function(){var D;return D="https://www.google.com/maps/?daddr="+encodeURIComponent(n)+"&sll="+encodeURIComponent(e+","+t),D}}],_=[{title:fl("map.title.amap"),pname:"com.autonavi.minimap",action:r?"iosamap://":"amapuri://",getUrl:function(){var D;return r?D="iosamap://path":D="amapuri://route/plan/",D+="?sourceApplication=APP&dname="+encodeURIComponent(n)+"&dlat="+e+"&dlon="+t+"&dev=0",D}},{title:fl("map.title.baidu"),pname:"com.baidu.BaiduMap",action:"baidumap://",getUrl:function(){var D="baidumap://map/direction?destination="+encodeURIComponent("latlng:"+e+","+t+"|name:"+n)+"&mode=driving&src=APP&coord_type=gcj02";return D}},{title:fl("map.title.tencent"),pname:"com.tencent.map",action:"qqmap://",getUrl:()=>{var D;return D="qqmap://map/routeplan?type=drive"+(r?"&from="+encodeURIComponent(fl("location.title")):"")+"&to="+encodeURIComponent(n)+"&tocoord="+encodeURIComponent(e+","+t)+"&referer=APP",D}},{title:fl("map.title.google"),pname:"com.google.android.apps.maps",action:"comgooglemapsurl://",getUrl:function(){var D;return r?D="comgooglemapsurl://maps.google.com/":D="https://www.google.com/maps/",D+="?daddr="+encodeURIComponent(n)+"&sll="+encodeURIComponent(e+","+t),D}}],w=[];_.forEach(function(D){var I=a.runtime.isApplicationExist({pname:D.pname,action:D.action});I&&w.push(D)}),r&&w.unshift({title:fl("map.title.apple"),navigateTo:function(){l.openSystemMapNavigation({longitude:t,latitude:e,name:n})}}),w.length===0&&(w=w.concat(f)),a.nativeUI.actionSheet({cancel:fl("select.cancel"),buttons:w},function(D){var I=D.index,B;I>0&&(B=w[I-1],B.navigateTo?B.navigateTo():a.runtime.openURL(B.getUrl(),function(){},B.pname))})}let AP={data(){return{latitude:0,longitude:0,name:"",loaded:!1,showNav:!1}},onLoad(e){this.latitude=e.latitude,this.longitude=e.longitude,this.name=e.name,this.loaded=!0},onBackPress(){if(this.showNav)return this.showNav=!1,!0},methods:{onClose(e){P.navigateBack()},onNavClick(){let e=u.config.env.platform==="iOS";CP(this.latitude,this.longitude,this.name||fl("location.destination"),e)}},render:function(e,t,n,r,l,f){return l.loaded?(dn.openBlock(),dn.createElementBlock("location-view",{key:0,style:{width:"100%",height:"100%"},latitude:l.latitude,longitude:l.longitude,showNav:l.showNav,name:l.name,onClose:t[0]||(t[0]=(..._)=>f.onClose&&f.onClose(..._)),onNavClick:t[1]||(t[1]=(..._)=>f.onNavClick&&f.onNavClick(..._))},null,40,["latitude","longitude","showNav"])):dn.createCommentVNode("v-if",!0)}},kf="__uniappopenlocation",OP=se.once(()=>{ep(kf,AP),Oe.push({meta:{navigationBar:{style:"custom"},isNVue:!1,route:kf},path:"/"+kf})}),TP=xe(nS,(e,{resolve:t,reject:n})=>{if(k.qqMapKey){OP();let{latitude:r="",longitude:l="",name:f=""}=e||{};P.navigateTo({url:"/"+kf+"?latitude="+r+"&longitude="+l+"&name="+f,success:_=>{t()},fail:_=>{n(_.errMsg||"cancel")}});return}return Eo({url:"__uniappopenlocation",data:Z.extend({},e,{locale:ju()}),style:{titleNView:{type:"transparent"},popGesture:"close",backButtonAutoControl:"close"},onClose(){n("cancel")}}),t()},iS,rS),xf=!1,ef=0,PP=xe(rw,(e,{resolve:t,reject:n})=>{ef=ef||a.geolocation.watchPosition(r=>{xf=!0,St.invokeOnCallback(Dh,r.coords)},r=>{xf||(n(r.message),xf=!0),St.invokeOnCallback(Uh,{errMsg:`onLocationChange:fail ${r.message}`})},{coordsType:e==null?void 0:e.type}),O(t,100)},sw,lw),NP=xe(iw,(e,{resolve:t})=>{ef&&(a.geolocation.clearWatch(ef),xf=!1,ef=0),t()}),IP=Dn(Dh,()=>{}),kP=ii(ow,()=>{}),xP=Dn(Uh,()=>{}),RP=ii(aw,()=>{}),MP=xe(Yw,({title:e="",content:t="",showCancel:n=!0,cancelText:r,cancelColor:l,confirmText:f,confirmColor:_,editable:w=!1,placeholderText:D=""}={},{resolve:I})=>{let B=n?[r,f]:[f],ve=w?D:B;t=t||" ",a.nativeUI[w?"prompt":"confirm"](t,Ae=>{if(n){let Re=Ae.index===1,_t={confirm:Re,cancel:Ae.index===0||Ae.index===-1};Re&&w&&(_t.content=Ae.value),I(_t)}else{let Re={confirm:Ae.index===0,cancel:!1};w&&(Re.content=Ae.value),I(Re)}},e,ve,B)},Jw,Kw),BP={light:{itemColor:"#000000"},dark:{itemColor:"rgba(255, 255, 255, 0.8)"}},LP=xe(Hw,({itemList:e=[],itemColor:t,title:n="",popover:r},{resolve:l,reject:f})=>{t==="#000"&&k.darkmode&&(t=BP[a.navigator.getUIStyle()].itemColor),$r();let{t:_}=et(),w={title:n,cancel:_("uni.showActionSheet.cancel"),buttons:e.map(D=>({title:D,color:t}))};a.nativeUI.actionSheet(Z.extend(w,{popover:r}),D=>{D.index>0?l({tapIndex:D.index-1}):f("showActionSheet:fail cancel")})},jw,zw),tf,tp=!1,Rf="",Mf,FP=xe(Ww,(e,t)=>jg(Z.extend({},e,{type:"loading",icon:"loading"}),t),Gw,qw),jg=({title:e="",icon:t="success",image:n="",duration:r=1500,mask:l=!1,position:f,type:_="toast",style:w},{resolve:D,reject:I})=>{if(Bf(""),Rf=_,["top","center","bottom"].includes(String(f)))a.nativeUI.toast(e,{verticalAlign:f}),tp=!0;else{t&&!~["success","loading","error","none"].indexOf(t)&&(t="success");let B={modal:l,back:"transmit",padding:"10px",size:"16px"};!n&&(!t||t==="none")?B.loading={display:"none"}:(B.width="140px",B.height="112px"),n?B.loading={display:"block",height:"55px",icon:n,interval:r}:["success","error"].indexOf(t)!==-1&&(B.loading={display:"block",height:"55px",icon:t==="success"?"__uniappsuccess.png":"__uniapperror.png",interval:r});try{tf=a.nativeUI.showWaiting(e,Z.extend(B,w))}catch(ve){I(`${ve}`)}}return Rf==="toast"&&(Mf=O(()=>{Bf("")},r)),D()},DP=xe(Zw,jg,Qw,eC),UP=xe(Iw,(e,t)=>Bf("toast",t)),VP=xe(Nw,(e,t)=>Bf("loading",t));function Bf(e="toast",t){return e&&e!==Rf||(Mf&&(y(Mf),Mf=null),tp?a.nativeUI.closeToast():tf&&tf.close&&tf.close(),tf=null,tp=!1,Rf=""),t&&t.resolve()}let $P=xe(tC,(e,{resolve:t,reject:n})=>{let r=rg();if(r&&r.endPullToRefresh(),r=wf(),!r)return n();r.beginPullToRefresh(),jd(r),t()}),HP=xe(nC,(e,{resolve:t,reject:n})=>{let r=rg()||wf();if(!r)return n();r.endPullToRefresh(),jd(null),t()}),jP=xe(jh,(e,{resolve:t,reject:n})=>{let r=vn(Zn());St.invokeViewMethod(jh,e,r,l=>{typeof l=="string"?n(l):t()})},kw),zP=xe(zh,(e,{resolve:t})=>{let n=vn(Zn());St.invokeViewMethod(zh,e,n,t)},Vw,$w),WP=xe(Lw,({__page__:e,title:t},{resolve:n,reject:r})=>{let l=tg(e);if(l){let f=l.getStyle();f&&f.titleNView&&l.setStyle({titleNView:{titleText:t}}),n()}else r()},Fw),GP=xe(Dw,(e,{resolve:t})=>{a.nativeUI.showWaiting("",{modal:!1}),t()}),qP=xe(Uw,(e,{resolve:t})=>{a.nativeUI.closeWaiting(),t()});function YP(e){let t=Mr();!t.length||(t[t.length-1].$page.statusBarStyle=e)}let JP=xe(Rw,({__page__:e,frontColor:t,backgroundColor:n},{resolve:r,reject:l})=>{let f=tg(e);if(f){let _={};t&&(_.titleColor=t),n&&(_.backgroundColor=n);let w=t==="#000000"?"dark":"light";a.navigator.setStatusBarStyle(w),YP(w);let D=f.getStyle();D&&D.titleNView&&(D.titleNView.autoBackButton&&(_.backButton=_.backButton||{},_.backButton.color=t),f.setStyle({titleNView:_})),r()}else l()},Bw,Mw),KP=xe(SC,({index:e,text:t},{resolve:n,reject:r})=>{Ri.setTabBarBadge("text",e,t),n()},wC,CC),ZP=xe(rC,({index:e,text:t,iconPath:n,selectedIconPath:r,pagePath:l,visible:f,iconfont:_},{resolve:w})=>{if(Ri.setTabBarItem(e,t,n,r,f,_),l){let D=k.tabBar.list[e];if(D){let I=D.pagePath,B=se.removeLeadingSlash(l);B!==I&&Pi(e,I,B)}}w()},iC,oC),XP=xe(aC,(e={},{resolve:t,reject:n})=>{if(!Yu())return n("not TabBar page");e.borderStyle=se.normalizeTabBarStyles(e.borderStyle),Ri.setTabBarStyle(e),t()},sC,cC),QP=xe(uC,(e,{resolve:t,reject:n})=>{let r=e&&e.animation;if(!Yu())return n("not TabBar page");Ri.hideTabBar(Boolean(r)),t()},Wh),eN=xe(fC,(e,{resolve:t,reject:n})=>{let r=e&&e.animation;if(!Yu())return n("not TabBar page");Ri.showTabBar(Boolean(r)),t()},dC),tN=xe(mC,({index:e},{resolve:t,reject:n})=>{Ri.setTabBarBadge("redDot",e),t()},vC,_C),zg=e=>Ri.setTabBarBadge("none",e),nN=xe(bC,({index:e},{resolve:t,reject:n})=>{zg(e),t()},yC,EC),rN=xe(pC,({index:e},{resolve:t,reject:n})=>{zg(e),t()},hC,gC),Wg="UniAppSubNVue";class iN{constructor(t,n){this.callbacks=[];let r=this.webview=a.webview.getWebviewById(t);if(this.isSub=n||!1,r.__uniapp_mask_id){let l=this.maskWebview=r.__uniapp_mask_id==="0"?{setStyle({mask:_}){Da("uni-tabview").setMask({color:_})}}:a.webview.getWebviewById(r.__uniapp_mask_id),f=function(){l.setStyle({mask:"none"})};r.addEventListener("hide",f),r.addEventListener("close",f)}}show(...t){if(this.maskWebview){let n=this.webview.__uniapp_mask;this.maskWebview.setStyle({mask:n})}this.webview.show(...t)}hide(...t){this.webview.hide(...t)}setStyle(t){this.webview.setStyle(t)}initMessage(){if(this.messageReady)return;this.messageReady=!0;let t=r=>{if(r.data&&r.data.type===Wg){let l=r.data.target;l.id===this.webview.id&&l.isSub===this.isSub&&this.callbacks.forEach(f=>{f({origin:this.webview.__uniapp_host,data:r.data.data})})}};Da("globalEvent").addEventListener("plusMessage",t),this.webview.addEventListener("close",()=>{this.callbacks.length=0})}postMessage(t){a.webview.postMessageToUniNView({type:Wg,data:t,target:{id:this.webview.id,isSub:!this.isSub}},ZT)}onMessage(t){this.initMessage(),this.callbacks.push(t)}}let oN=function(e,t){return new iN(e,t)};function aN(e,t,n,r,l,f,_){a!==n&&(b=dn=e,u=t,a=n,kA(a.navigator.setStatusBarStyle),a.navigator.setStatusBarStyle=Zh,O=r,y=l,h=f,v=_),k.serviceReady=!0}function sN(){let e=["ArrayBuffer","Int8Array","Uint8Array","Uint8ClampedArray","Int16Array","Uint16Array","Int32Array","Uint32Array","Float32Array","Float64Array","BigInt64Array","BigUint64Array"],t={};for(let n=0;n<e.length;n++){let r=e[n];t[r]=global[r]}return t}function lN(e){Z.extend(global,e)}let Gg={oauth(e){a.oauth.getServices(t=>{t=t;let n=[];t.forEach(({id:r})=>{n.push(r)}),e(null,n,t)},t=>{t=t,e(t)})},share(e){a.share.getServices(t=>{t=t;let n=[];t.forEach(({id:r})=>{n.push(r)}),e(null,n,t)},t=>{e(t)})},payment(e){a.payment.getChannels(t=>{let n=[];t.forEach(({id:r})=>{n.push(r)}),e(null,n,t)},t=>{e(t)})},push(e){if(typeof u!="undefined"||typeof a!="undefined"){let t=a.push.getClientInfo();e(null,[t.id],[t])}else e(null,[])}},cN=xe(AC,({service:e},{resolve:t,reject:n})=>{Gg[e]?Gg[e]((r,l=[],f=[])=>{r?n(r.message):t({service:e,provider:l,providers:f.map(_=>(typeof _.serviceReady=="boolean"&&(_.isAppExist=_.serviceReady),typeof _.nativeClient=="boolean"&&(_.isAppExist=_.nativeClient),_))})}):n("service not found")},OC),Lf;function nf(e){return new Promise((t,n)=>{a.oauth.getServices(r=>{let l=r.find(({id:f})=>f===e);l?t(l):n(new Error("provider not find"))},n)})}let qg=xe(TC,(e,{resolve:t,reject:n})=>{let r=e.provider||"weixin",l=Rr(n),f=r==="apple",_=f?{scope:"email"}:e.univerifyStyle?{univerifyStyle:dN(e.univerifyStyle,l)}:{};nf(r).then(w=>{function D(){if(e.onlyAuthorize&&r==="weixin"){w.authorize(({code:I})=>{t({code:I,authResult:""})},l);return}w.login(I=>{let B=I.target.authResult,ve=I.target.appleInfo;t({code:B.code,authResult:B,appleInfo:ve})},l,_)}f||r==="univerify"?D():w.logout(D,D)}).catch(l)},PC),Yg=(e,{resolve:t,reject:n})=>{let r=e.provider||"weixin",l=Rr(n);nf(r).then(f=>{f.getUserInfo(_=>{let w={nickName:""};if(r==="weixin"){let I=f.userInfo;I&&(w={openId:I.openid,nickName:I.nickname,gender:I.sex,city:I.city,province:I.province,country:I.country,avatarUrl:I.headimgurl,unionId:I.unionid})}else if(r==="apple"){let I=f.appleInfo;I&&(w={openId:I.user,fullName:I.fullName,email:I.email,authorizationCode:I.authorizationCode,identityToken:I.identityToken,realUserStatus:I.realUserStatus})}else w=f.userInfo,w&&(w.openId=w.openId||w.openid||f.authResult.openid,w.nickName=w.nickName||w.nickname,w.avatarUrl=w.avatarUrl||w.headimgurl);let D={};e.data&&e.data.api_name==="webapi_getuserinfo"?D.data={data:JSON.stringify(w),rawData:"",signature:"",encryptedData:"",iv:""}:D.userInfo=w,t(D)},l)}).catch(()=>{n("\u8BF7\u5148\u8C03\u7528 uni.login")})},uN=xe(NC,Yg,IC),fN=xe(kC,Yg,xC),Jg=xe(RC,({provider:e},{resolve:t,reject:n})=>{let r=xc(t),l=Rr(n);nf(e).then(f=>f.preLogin(r,l)).catch(l)},LC,BC),Kg=()=>nf("univerify").then(e=>e.closeAuthView()),Zg=Ht(FC,Kg),Xg=xe(DC,(e,{resolve:t,reject:n})=>{let r=xc(t),l=Rr(n);try{nf("univerify").then(f=>{let _=f.getCheckBoxState();r({state:_})})}catch(f){l(f)}});function dN(e,t){return Z.isPlainObject(e)&&Z.isPlainObject(e.buttons)&&Z.toTypeString(e.buttons.list)==="[object Array]"&&e.buttons.list.forEach((n,r)=>{e.buttons.list[r].onclick=function(){let l={code:"30008",message:"\u7528\u6237\u70B9\u51FB\u4E86\u81EA\u5B9A\u4E49\u6309\u94AE",index:r,provider:n.provider};Z.isPlainObject(Lf)?Lf._triggerUniverifyButtonsClick(l):Kg().then(()=>{t(l)})}}),e}class pN{constructor(){this.provider="univerify",this.eventName="api.univerifyButtonsClick"}close(){return Zg()}login(t){return qg(this._getOptions(t))}getCheckBoxState(t){return Xg(t)}preLogin(t){return Jg(this._getOptions(t))}onButtonsClick(t){St.on(this.eventName,t)}offButtonsClick(t){St.off(this.eventName,t)}_triggerUniverifyButtonsClick(t){St.emit(this.eventName,t)}_getOptions(t={}){return Z.extend({},t,{provider:this.provider})}}let hN=Ht(UC,()=>Lf||(Lf=new pN)),gN=xe(YC,(e,{resolve:t,reject:n})=>{let r=Sg();if(r.notificationAuthorized!=="authorized")return n("notificationAuthorized: "+r.notificationAuthorized);let l=Z.extend({},e);delete l.content,delete l.payload,a.push.createMessage(e.content,e.payload,l),t()},void 0,JC),Qg,mN=Ht(KC,()=>Qg||(Qg=a.push.getChannelManager())),vN=Ht("registerRuntime",e=>{Z.extend(jsRuntime,e)}),_N={0:{name:"web",title:"\u56FE\u6587"},1:{name:"text",title:"\u7EAF\u6587\u5B57"},2:{name:"image",title:"\u7EAF\u56FE\u7247"},3:{name:"music",title:"\u97F3\u4E50"},4:{name:"video",title:"\u89C6\u9891"},5:{name:"miniProgram",title:"\u5C0F\u7A0B\u5E8F"}},bN=e=>{e.type=e.type||0;let{provider:t,type:n,title:r,summary:l,href:f,imageUrl:_,mediaUrl:w,scene:D,miniProgram:I,openCustomerServiceChat:B,corpid:ve,customerUrl:Ae}=e;Z.isString(_)&&_&&(_=Gt(_));let Re=_N[n];if(Re){let _t={provider:t,type:Re.name,title:r,content:l,href:f,pictures:[_],thumbs:_?[_]:void 0,media:w,miniProgram:I,extra:{scene:D},openCustomerServiceChat:B,corpid:ve,url:Ae};return t==="weixin"&&(n===1||n===2)&&delete _t.thumbs,_t}return"\u5206\u4EAB\u53C2\u6570 type \u4E0D\u6B63\u786E"},em=function(e,t,n,r,l="share"){let f=Rr(r),_=t.openCustomerServiceChat?"openCustomerServiceChat":"send";try{e[_](t,()=>{n()},f)}catch(w){f({message:`${t.provider} ${_} \u65B9\u6CD5\u8C03\u7528\u5931\u8D25`})}},yN=xe(VC,(e,{resolve:t,reject:n})=>{let r=bN(e),l=Rr(n);if(Z.isString(r))return n(r);a.share.getServices(f=>{let _=f.find(({id:w})=>w===r.provider);_?_.authenticated?em(_,r,t,n):_.authorize(()=>em(_,r,t,n),l):n("service not found")},l)},HC,$C),EN=xe(jC,({type:e,imageUrl:t,summary:n,href:r},{resolve:l,reject:f})=>{let _=Rr(f);Z.isString(t)&&t&&(t=Gt(t)),a.share.sendWithSystem({type:e,pictures:t?[t]:void 0,content:n,href:r},()=>l(),_)},WC,zC),SN=xe(GC,(e,{resolve:t,reject:n})=>{let r=e.provider,l=Rr(n);a.payment.getChannels(f=>{let _=f.find(({id:w})=>w===r);_?a.payment.request(_,e.orderInfo,w=>{t(w)},l):n("service not found")},l)},qC),tm=pg,wN=xe("navigateToMiniProgram",(e,{resolve:t,reject:n})=>{tm("navigateToUniMP",e,r=>{if(r.errMsg&&r.errMsg.indexOf(":ok")===-1)return n(r.errMsg.split(" ")[1]);t()})}),nm=[];function rm(e){nm.push(e)}let CN=rm;function AN(e,t){nm.forEach(n=>n(e,t))}function ON(e,t,...n){let r=NN(e,t,n);r&&console[e](r)}function TN(){return typeof __channelId__=="string"&&__channelId__}function PN(e,t){switch(Z.toRawType(t)){case"Function":return"function() { [native code] }";default:return t}}function NN(e,t,n){return TN()?(n.push(t.replace("at ","uni-app:///")),console[e].apply(console,n)):n.map(function(l){let f=Z.toTypeString(l).toLowerCase();if(["[object object]","[object array]","[object module]"].indexOf(f)!==-1)try{l="---BEGIN:JSON---"+JSON.stringify(l,PN)+"---END:JSON---"}catch(_){l=f}else if(l===null)l="---NULL---";else if(l===void 0)l="---UNDEFINED---";else{let _=Z.toRawType(l).toUpperCase();_==="NUMBER"||_==="BOOLEAN"?l="---BEGIN:"+_+"---"+l+"---END:"+_+"---":l=String(l)}return l}).join("---COMMA---")+" "+t}let im=1,np,IN={};function om(e){return e&&typeof e.getNodeId=="function"&&e.pageId}function kN(e){return e&&e.$&&e.$.proxy===e}function xN(e){if(om(e))return e}function RN(e){if(kN(e))return e.$el}function MN(e){return typeof ArrayBufferWrapper!="undefined"?{__type__:"ArrayBuffer",value:new ArrayBufferWrapper(e)}:{__type__:"ArrayBuffer",value:e}}function BN(e,t){let n="",r="";return e&&e.getNodeId&&(r=e.pageId,n=e.getNodeId()),{__type__:t,pageId:r,nodeId:n}}function am(e){let t=e&&e.__v_raw;return t?am(t):e}function rp(e,t,n,r){if(e=am(e),typeof e=="function"){let l;if(n){let f=Object.keys(t).find(_=>t[_]===e);l=f?parseInt(f):im++,t[l]=e}else l=im++,t[l]=e;return l}else{if(Z.isArray(e))return r.depth++,e.map(l=>rp(l,t,n,r));if(e instanceof ArrayBuffer)return r.depth>0&&(r.nested=!0),MN(e);if(Z.isPlainObject(e)||om(e)){let l=xN(e),f=l?void 0:RN(e),_=l||f;if(_)return r.depth>0&&(r.nested=!0),BN(_,l?"UniElement":"ComponentPublicInstance");{let w={};return Object.keys(e).forEach(D=>{r.depth++,w[D]=rp(e[D],t,n,r)}),w}}}return e}function LN(e,t,n,r){return rf("method",e,t,n,r)}function ip(){return np||(np=P.requireNativePlugin("UTS-Proxy")),np}function sm(e,t,n,r,l){if(!t)throw new Error("\u8FD4\u56DE\u503C\u4E3A\uFF1A"+JSON.stringify(t)+"\uFF1B\u8BF7\u6C42\u53C2\u6570\u4E3A\uFF1A"+JSON.stringify(e));if(Z.isString(t))try{t=JSON.parse(t)}catch(f){throw new Error(`JSON.parse(${t}): `+f)}if(t.errMsg)throw new Error(t.errMsg);if(n&&n.type==="interface"&&typeof t.params=="number"){if(!t.params)return null;if(t.params===r&&l)return l;if(op[n.options]){let f=fm(Z.extend({instanceId:t.params},op[n.options]));return new f}}return t.params}function lm(e){if(e.errMsg)throw new Error(e.errMsg);return delete e.errMsg,sm(e,ip().invokeSync(e,()=>{}))}function rf(e,t,{moduleName:n,moduleType:r,package:l,class:f,name:_,method:w,companion:D,keepAlive:I,params:B,return:ve,errMsg:Ae},Re,_t){I||(I=(_.indexOf("on")===0||_.indexOf("off")===0)&&B.length===1&&B[0].type==="UTSCallback");let Ct=Re?{moduleName:n,moduleType:r,id:Re,type:e,name:_,method:B,nested:!1,keepAlive:I}:{moduleName:n,moduleType:r,package:l,class:f,name:w||_,type:e,companion:D,method:B,nested:!1,keepAlive:I};return(...Zt)=>{if(Ae)throw new Error(Ae);let zt=I?IN:{},wn=({id:ut,name:Xt,params:Wt})=>{let Jt=zt[ut];Jt?(Jt(...Wt),I||delete zt[ut]):console.error(`uts\u63D2\u4EF6[${n}] ${l}${f}.${_.replace("ByJs","")} ${Xt}\u56DE\u8C03\u51FD\u6570\u5DF2\u91CA\u653E\uFF0C\u4E0D\u80FD\u518D\u6B21\u6267\u884C\uFF0C\u53C2\u8003\u6587\u6863\uFF1Ahttps://doc.dcloud.net.cn/uni-app-x/plugin/uts-plugin.html#keepalive`)},bn={depth:0,nested:!1},Ft=Z.extend({},Ct,{params:Zt.map(ut=>rp(ut,zt,I,bn))});return Ft.nested=bn.nested,t?new Promise((ut,Xt)=>{ip().invokeAsync(Ft,Wt=>{Wt.type!=="return"?wn(Wt):Wt.errMsg?Xt(Wt.errMsg):ut(Wt.params)})}):sm(Ft,ip().invokeSync(Ft,wn),ve,Re,_t)}}function cm(e,t){return t.main&&!t.method&&dm()&&(t.method="s_"+t.name),rf("method",e,t,0)}let FN=cm;function um(e,t){return typeof e=="string"&&Z.hasOwn(t,e+"ByJs")?e+"ByJs":e}function DN(e){return typeof e=="undefined"}function UN(e){return!DN(e.instanceId)}function Ff(e){return"__$set"+Z.capitalize(e)}function fm(e){let{moduleName:t,moduleType:n,package:r,class:l,methods:f,props:_,setters:w,errMsg:D}=e,I={moduleName:t,moduleType:n,package:r,class:l,errMsg:D},B,ve=[],Ae={},Re=[],_t={},Ct=!1;UN(e)?(Ct=!0,B=e.instanceId):(ve=e.constructor.params,Ae=e.staticMethods,Re=e.staticProps,_t=e.staticSetters),dm()&&ve.find(bn=>bn.type==="UTSCallback"||bn.type.indexOf("JSONObject")>0)&&ve.push({name:"_byJs",type:"boolean"});let Zt=class{constructor(...Ft){if(this.__instanceId=0,D)throw new Error(D);let ut={};if(Ct?typeof B=="number"&&(this.__instanceId=B):this.__instanceId=rf("constructor",!1,Z.extend({name:"constructor",keepAlive:!1,params:ve},I),0).apply(null,Ft),!this.__instanceId)throw new Error(`new ${l} is failed`);let Xt=this,Wt=new Proxy(Xt,{get(Jt,qt){if(qt==="__v_skip")return!0;if(!ut[qt]){if(qt=um(qt,f),Z.hasOwn(f,qt)){let{async:cr,keepAlive:Qt,params:Io,return:Cu}=f[qt];ut[qt]=LN(!!cr,Z.extend({name:qt,keepAlive:Qt,params:Io,return:Cu},I),Xt.__instanceId,Wt)}else if(_.includes(qt))return lm({moduleName:t,moduleType:n,id:Xt.__instanceId,type:"getter",keepAlive:!1,nested:!1,name:qt,errMsg:D})}return ut[qt]},set(Jt,qt,cr){if(_.includes(qt)){let Qt=Ff(qt);if(!ut[Qt]){let Io=w[qt];Io&&(ut[Qt]=rf("setter",!1,Z.extend({name:qt,keepAlive:!1,params:[Io]},I),Xt.__instanceId,Wt))}return ut[Ff(qt)](cr),!0}return!1}});return Object.freeze(Wt)}},zt={},wn={};return Object.freeze(new Proxy(Zt,{get(bn,Ft,ut){if(Ft=um(Ft,Ae),Z.hasOwn(Ae,Ft)){if(!wn[Ft]){let{async:Xt,keepAlive:Wt,params:Jt,return:qt}=Ae[Ft];wn[Ft]=cm(!!Xt,Z.extend({name:Ft,companion:!0,keepAlive:Wt,params:Jt,return:qt},I))}return wn[Ft]}return Re.includes(Ft)?lm(Z.extend({name:Ft,companion:!0,type:"getter"},I)):Reflect.get(bn,Ft,ut)},set(bn,Ft,ut){if(Re.includes(Ft)){let Xt=Ff(Ft);if(!zt[Xt]){let Wt=_t[Ft];Wt&&(zt[Xt]=rf("setter",!1,Z.extend({name:Ft,keepAlive:!1,params:[Wt]},I),0))}return zt[Ff(Ft)](ut),!0}return!1}}))}function Df(){return typeof a!="undefined"&&a.os.name==="Android"}function dm(){return!Df()}function VN(e,t){return Df()?"uts.sdk."+(t?"modules.":"")+e:""}function $N(e,t){return pm(e,Df()?"IndexKt":"IndexSwift",t)}function pm(e,t,n){return Df()?t:"UTSSDK"+(n?"Modules":"")+Z.capitalize(e)+Z.capitalize(t)}let op={};function HN(e,t){op[e]=t}let hm={};function jN(e,t){hm[e]=t}function zN(e){let t=hm[e];return t||console.error(`${e} is not found`),t}let Sa={load:"load",close:"close",error:"error",adClicked:"adClicked"};class gm{constructor(){this._callbacks={}}onLoad(t){this._addEventListener(Sa.load,t)}onClose(t){this._addEventListener(Sa.close,t)}onError(t){this._addEventListener(Sa.error,t)}offLoad(t){this._removeEventListener(Sa.load,t)}offClose(t){this._removeEventListener(Sa.close,t)}offError(t){this._removeEventListener(Sa.error,t)}_addEventListener(t,n){!Z.isFunction(n)||(this._callbacks[t]||(this._callbacks[t]=[]),this._callbacks[t].push(n))}_removeEventListener(t,n){let r=this._callbacks[t],l=r.indexOf(n);l>-1&&r.splice(l,1)}_dispatchEvent(t,n){this._callbacks[t].forEach(r=>{r(n||{})})}}class ap extends gm{constructor(t,n){super();this.preload=!0,this._isLoaded=!1,this._isLoading=!1,this._loadPromiseResolve=null,this._loadPromiseReject=null,this._showPromiseResolve=null,this._showPromiseReject=null,this.preload=n.preload!==void 0?n.preload:!1;let r=this._adInstance=t;r.onLoad(()=>{this._isLoaded=!0,this._isLoading=!1,this._loadPromiseResolve!=null&&(this._loadPromiseResolve(),this._loadPromiseResolve=null),this._showPromiseResolve!=null&&(this._showPromiseResolve(),this._showPromiseResolve=null,this._showAd()),this._dispatchEvent(Sa.load,{})}),r.onClose(l=>{this._isLoaded=!1,this._isLoading=!1,this._dispatchEvent(Sa.close,l),this.preload===!0&&this._loadAd()}),r.onError(l=>{this._isLoading=!1;let f={code:l.code,errMsg:l.message};this._dispatchEvent(Sa.error,f);let _=new Error(JSON.stringify(f));this._loadPromiseReject!=null&&(this._loadPromiseReject(_),this._loadPromiseReject=null),this._showPromiseReject!=null&&(this._showPromiseReject(_),this._showPromiseReject=null)}),r.onAdClicked&&r.onAdClicked(()=>{this._dispatchEvent(Sa.adClicked,{})})}getProvider(){return this._adInstance.getProvider()}load(){return new Promise((t,n)=>{this._loadPromiseResolve=t,this._loadPromiseReject=n,!this._isLoading&&(this._isLoaded?t(""):this._loadAd())})}show(){return new Promise((t,n)=>{this._showPromiseResolve=t,this._showPromiseReject=n,!this._isLoading&&(this._isLoaded?(this._showAd(),t("")):this._loadAd())})}destroy(){this._adInstance.destroy()}_loadAd(){this._isLoaded=!1,this._isLoading=!0,this._adInstance.load()}_showAd(){this._adInstance.show()}}class WN extends ap{constructor(t){super(a.ad.createRewardedVideoAd(t),t);this._loadAd()}}let GN=Ht(ZC,e=>new WN(e),QC,XC);class qN extends ap{constructor(t){super(a.ad.createFullScreenVideoAd(t),t);this.preload=!1}}let YN=Ht(eA,e=>new qN(e),nA,tA);class JN extends ap{constructor(t){super(a.ad.createInterstitialAd(t),t);this.preload=!1,this._loadAd()}}let KN=Ht(rA,e=>new JN(e),oA,iA),Fs={},Bc={};function ZN(e){let t=e.provider;if(Fs[t]||(Fs[t]={}),typeof Fs[t].plugin=="object"){e.success(Fs[t].plugin);return}if(Bc[t]||(Bc[t]=[]),Bc[t].push(e),Fs[t].status===!0){e.__plugin=Fs[t].plugin;return}Fs[t].status=!0;let n=Da(t);if(!n||!n.initSDK){Bc[t].forEach(r=>{r.fail({code:-1,message:"provider ["+t+"] invalid"})}),Bc[t].length=0,Fs[t].status=!1;return}Fs[t].plugin=n,e.__plugin=n,n.initSDK(r=>{let l=r.code===1||r.code==="1";l?Fs[t].plugin=n:Fs[t].status=!1,Bc[t].forEach(f=>{l?f.success(f.__plugin):f.fail(r)}),Bc[t].length=0})}class XN extends gm{constructor(t){super();this._adpid="",this._provider="",this._userData=null,this._isLoaded=!1,this._isLoading=!1,this._loadPromiseResolve=null,this._loadPromiseReject=null,this._showPromiseResolve=null,this._showPromiseReject=null,this._adInstance=null,this._adError="",this._adpid=t.adpid,this._provider=t.provider,this._userData=t.userData,O(()=>{this._init()})}_init(){this._adError="",ZN({provider:this._provider,success:t=>{this._adInstance=t,this._userData&&this.bindUserData(this._userData),this._loadAd()},fail:t=>{this._adError=t,this._loadPromiseReject!=null&&(this._loadPromiseReject(this._createError(t)),this._loadPromiseReject=null),this._dispatchEvent(Sa.error,t)}})}getProvider(){return this._provider}load(){return new Promise((t,n)=>{if(this._loadPromiseResolve=t,this._loadPromiseReject=n,!this._isLoading){if(this._adError){this._init();return}this._isLoaded?t(""):this._loadAd()}})}show(){return new Promise((t,n)=>{if(this._showPromiseResolve=t,this._showPromiseReject=n,!this._isLoading){if(this._adError){this._init();return}this._isLoaded?(this._showAd(),t("")):this._loadAd()}})}reportExposure(){this._adInstance!==null&&this._adInstance.reportExposure()}bindUserData(t){this._adInstance!==null&&this._adInstance.bindUserData(t)}destroy(){this._adInstance!==null&&this._adInstance.destroy&&this._adInstance.destroy({adpid:this._adpid})}_loadAd(){if(this._adInstance!==null){if(this._isLoading===!0)return;this._isLoading=!0,this._adInstance.loadData({adpid:this._adpid},t=>{this._isLoaded=!0,this._isLoading=!1,this._loadPromiseResolve!=null&&(this._loadPromiseResolve(),this._loadPromiseResolve=null),this._showPromiseResolve!=null&&(this._showPromiseResolve(),this._showPromiseResolve=null,this._showAd()),this._dispatchEvent(Sa.load,t)},t=>{this._isLoading=!1,this._showPromiseReject!=null&&(this._showPromiseReject(this._createError(t)),this._showPromiseReject=null),this._dispatchEvent(Sa.error,t)})}}_showAd(){this._adInstance!==null&&this._isLoaded===!0&&this._adInstance.show({adpid:this._adpid},()=>{this._isLoaded=!1},t=>{this._isLoaded=!1,this._showPromiseReject!=null&&(this._showPromiseReject(this._createError(t)),this._showPromiseReject=null),this._dispatchEvent(Sa.error,t)})}_createError(t){return new Error(JSON.stringify(t))}}let QN=Ht(aA,e=>new XN(e),lA,sA),mm=a.os.name==="Android"&&parseInt(a.os.version)<6,eI=mm?"slide-in-right":"pop-in",Uf=300,vm=mm?"slide-out-right":"pop-out",tI="_www/__uniappview.html",nI="webviewId",rI="uniMPNativeEvent";function iI(e,t,n){n&&t.isNVue&&(e.uniNView={path:n,defaultFontSize:k.defaultFontSize,viewport:k.viewport})}let oI=/^#[a-z0-9]{6}$/i;function aI(e){return e&&(oI.test(e)||e==="transparent")}function sI(e,t){let{backgroundColor:n}=t;!n||!aI(n)||(e.background?n=e.background:e.background=n,e.backgroundColorTop||(e.backgroundColorTop=n),e.backgroundColorBottom||(e.backgroundColorBottom=n),e.animationAlphaBGColor||(e.animationAlphaBGColor=n),typeof e.webviewBGTransparent=="undefined"&&(e.webviewBGTransparent=!0))}function lI(e,t){e.popGesture==="hide"&&delete e.popGesture,t.isQuit&&(e.popGesture=a.os.name==="iOS"?"appback":"none")}function cI(e,t){if(!t.enablePullDownRefresh)return;let n=Bl(Z.extend({},a.os.name==="Android"?fI:dI,t.pullToRefresh));e.pullToRefresh=uI(n,t)}function uI(e,t){let n=Na(e);if(!n)return e;let[r,l,f]=n;return(r||l||f)&&P.onLocaleChange(()=>{let _=a.webview.getWebviewById(t.id+"");if(!_)return;let w={support:!0};r&&(w.contentdown={caption:e.contentdown.caption}),l&&(w.contentover={caption:e.contentover.caption}),f&&(w.contentrefresh={caption:e.contentrefresh.caption}),_.setStyle({pullToRefresh:w})}),e}let fI={support:!0,style:"circle"},dI={support:!0,style:"default",height:"50px",range:"200px",contentdown:{caption:""},contentover:{caption:""},contentrefresh:{caption:""}};function pI(e,t){let{navigationBar:n}=t;if(n.style==="custom")return!1;let r=!0;t.isQuit&&(r=!1);let l={autoBackButton:r};Object.keys(n).forEach(f=>{let _=n[f];f==="titleImage"&&_?l.tags=gI(_):f==="buttons"&&Z.isArray(_)?l.buttons=_.map((w,D)=>(w.onclick=mI(D),w)):l[f]=_}),e.titleNView=hI(l,t)}function hI(e,t){let n=si(e);if(!n)return e;let[r,l]=n;return(r||l)&&P.onLocaleChange(()=>{let f=a.webview.getWebviewById(t.id+"");if(!f)return;let _={};r&&(_.titleText=e.titleText),l&&(_.searchInput={placeholder:e.searchInput.placeholder}),f.setStyle({titleNView:_})}),e}function gI(e){return[{tag:"img",src:e,position:{left:"auto",top:"auto",width:"auto",height:"26px"}}]}function mI(e){return function(n){n.index=e,rr(se.ON_NAVIGATION_BAR_BUTTON_TAP,n)}}function _m(e,t,n){let r={bounce:"vertical"};return Object.keys(t).forEach(l=>{vI.indexOf(l)===-1&&(r[l]=t[l])}),n.id!=="1"&&iI(r,t,e),lI(r,t),sI(r,t),pI(r,t),cI(r,t),r}let vI=["id","route","isNVue","isQuit","isEntry","isTabBar","tabBarIndex","windowTop","topWindow","leftWindow","rightWindow","maxWidth","usingComponents","disableScroll","enablePullDownRefresh","navigationBar","pullToRefresh","onReachBottomDistance","pageOrientation","backgroundColor"],bm=2;function ym(){return bm}function Em(){return bm++}function Sm(e){return e}function wm(e,t){let n=t?se.stringifyQuery(t,Sm):"";return{path:e.slice(1),query:n&&n.slice(1)}}function _I(e,t,n){let r=n?se.stringifyQuery(n,Sm):"";return{isTab:e,arguments:JSON.stringify({path:t.slice(1),query:r&&r.slice(1)})}}function bI({path:e,query:t,routeOptions:n,webviewExtras:r}){let l=()=>_m(e,$d(n.meta),{id:f+""}),f=Em(),_=l();_.uniPageUrl=wm(e,t),_.isTab=!!n.meta.isTabBar;let w=a.webview.create("",String(f),_,Z.extend({nvue:!0,__path__:e,__query__:JSON.stringify(t)},r));return eg(w,l),w}let uo;function Cm(e){return uo=e}function yI(){return uo}function EI(){return(!uo||uo.__uniapp_route)&&(uo=a.webview.create(tI,String(Em()),{contentAdjust:!1})),uo}function SI(e){let{popupSubNVueWebviews:t}=e;!t||e.addEventListener("close",()=>{Object.keys(t).forEach(n=>{t[n].close("none")})})}function Am(e){return k.realEntryPagePath&&Rt(e).route===k.entryPagePath}function Om(){k.entryPagePath=k.realEntryPagePath,delete k.realEntryPagePath,P.reLaunch({url:se.addLeadingSlash(k.entryPagePath)})}function wI(e){let t;e.addEventListener("popGesture",n=>{if(n.type==="start"){let r=At(),l=r[r.length-2];t=Ju;let f;l&&(f=Rt(l).statusBarStyle),f&&ul(f)}else if(n.type==="end"&&!n.result)ul(t);else if(n.type==="end"&&n.result){let r=Mr().length,l=Un();ln(),ul(),l&&r===1&&Am(l)?Om():rr(se.ON_SHOW)}})}function CI(e){if(e.nvue)return;let t=e.id,{subscribe:n,unsubscribe:r}=St,l=(f,_)=>{if(t!==_)return;r(Eu,l);let w=Ut(parseInt(_));w&&w.__page_container__.restore()};e.addEventListener("recovery",()=>{n(Eu,l)})}function AI(e){let{emit:t}=St,n=function({width:r,height:l}){let _={deviceOrientation:Math.abs(a.navigator.getOrientation())===90?"landscape":"portrait",size:{windowWidth:Math.ceil(r),windowHeight:Math.ceil(l)}};t(se.ON_RESIZE,_,parseInt(e.id))};e.addEventListener("resize",se.debounce(n,50,{setTimeout:O,clearTimeout:y}))}let Tm={pullToRefresh:se.ON_PULL_DOWN_REFRESH,titleNViewSearchInputChanged:se.ON_NAVIGATION_BAR_SEARCH_INPUT_CHANGED,titleNViewSearchInputConfirmed:se.ON_NAVIGATION_BAR_SEARCH_INPUT_CONFIRMED,titleNViewSearchInputClicked:se.ON_NAVIGATION_BAR_SEARCH_INPUT_CLICKED,titleNViewSearchInputFocusChanged:se.ON_NAVIGATION_BAR_SEARCH_INPUT_FOCUS_CHANGED};function OI(e){let t=parseInt(e.id);Object.keys(Tm).forEach(n=>{let r=Tm[n];e.addEventListener(n,l=>{r===se.ON_PULL_DOWN_REFRESH&&jd(e),rr(t,r,l)})}),SI(e),AI(e),a.os.name==="iOS"&&(CI(e),wI(e))}function TI(e,t,n,r){let l=()=>_m(t,$d(r),e),f=l();f.uniPageUrl=wm(t,n);let _=!!r.isTabBar;r.isNVue?f.isTab=_:f.debugRefresh=_I(_,t,n),f.locale=u.requireModule("plus").getLanguage(),eg(e,l),e.setStyle(f)}function PI(e,t,n){(n.subNVues||[]).forEach(l=>{if(!l.path)return;let f=Do(l.style||{}),_=l.type==="navigationBar",w=l.type==="popup";f.uniNView={path:l.path.replace(".nvue",".js"),defaultFontSize:k.defaultFontSize,viewport:k.viewport};let D={__uniapp_host:t,__uniapp_origin:f.uniNView.path.split("?")[0].replace(".js",""),__uniapp_origin_id:e.id,__uniapp_origin_type:e.__uniapp_type},I;_?(f.position="dock",f.dock="top",f.top="0",f.width="100%",f.height=String(se.NAVBAR_HEIGHT+zd()),delete f.left,delete f.right,delete f.bottom,delete f.margin):w&&(f.position="absolute",Yu(t)?I=Ri:I=e,D.__uniapp_mask=f.mask||"rgba(0,0,0,0.5)",D.__uniapp_mask_id=I.id),delete f.mask;let B=a.webview.create("",l.id,f,D);if(w){I.popupSubNVueWebviews||(I.popupSubNVueWebviews={}),I.popupSubNVueWebviews[B.id]=B;let ve=function(){I.setStyle({mask:"none"}),B.hide("auto")};I.addEventListener("maskClick",ve);let Ae=!1;B.addEventListener("show",()=>{Ae||(a.key.removeEventListener("backbutton",Ui),a.key.addEventListener("backbutton",ve),Ae=!0)}),B.addEventListener("hide",()=>{Ae&&(a.key.removeEventListener("backbutton",ve),a.key.addEventListener("backbutton",Ui),Ae=!1)}),B.addEventListener("close",()=>{delete I.popupSubNVueWebviews[B.id],Ae&&(a.key.removeEventListener("backbutton",ve),a.key.addEventListener("backbutton",Ui),Ae=!1)})}else e.append(B)})}function NI(e,t,n,r){(e.id==="1"||!r.isNVue)&&TI(e,t,n,r),PI(e,t,r),OI(e)}function Pm(e){return e.routeOptions.meta.isNVue?bI(e):ym()===2?a.webview.getLaunchWebview():yI()}function Nm(e,t){St.once(Eu+"."+e,t)}let Ds=!1;function Im(e,t,n){Ds={path:e,nvue:ia(e).isNVue,callback:t}}function km(e,t,n){Vn(e),Lc(e.$getAppWebview(),t,n)}function Vf(e,t,n=!1){if(!n&&Ds)return console.error(`Waiting to navigate to: ${Ds.path}, do not operate continuously: ${e}.`);if(k.renderer==="native")return Mr().length===0?Im(e,t,"waitForReady"):t();let r=!uo||uo&&uo.__uniapp_route,l=uo&&!uo.loaded;r||l?Im(e,t,r?"waitForCreate":"waitForReady"):t(),l&&Nm(uo.id,$f)}function $f(){if(!Ds)return;let{callback:e}=Ds;return Ds=!1,e()}function xm(){if(k.renderer==="native")return Ds&&Ds.nvue?$f():void 0;let e=EI();if(!!Ds){if(Ds.nvue)return $f();e.loaded?Ds.callback():Nm(e.id,$f)}}function Lc(e,t,n){e[e.__preload__?"hide":"close"](t,n)}function Hf(e,t,n,r,l){typeof l=="undefined"&&(l=e.nvue?0:100);let f=function(){f._called||(f._called=!0,r&&r(),xm())};f._called=!1,O(()=>{let _=O(()=>{f()},n+150);e.show(t,n,()=>{f._called||y(_),f()})},l)}function II(e,t){let n=e.children();if(!n||!n.length)return t();let r=n.find(l=>l.id.indexOf(nI)===0)||n[0];r.canBack(({canBack:l})=>{l?r.back():t()})}let kI=xe(dw,(e,{resolve:t,reject:n})=>{let r=Un();if(!r)return n("getCurrentPages is empty");if(rr(r,se.ON_BACK_PRESS,{from:e.from||"navigateBack"}))return t();if(P.hideToast(),P.hideLoading(),Rt(r).meta.isQuit)xI();else if(Am(r))Om();else{let{delta:l,animationType:f,animationDuration:_}=e;RI(l,f,_)}return t()},hw,Cw),jf=0;function xI(){fr(),jf?Date.now()-jf<2e3&&a.runtime.quit():(jf=Date.now(),a.nativeUI.toast(et().t("uni.app.quit")),O(()=>{jf=0},2e3))}function RI(e,t,n){let r=At(),l=r.length,f=r[l-1];e>1&&r.slice(l-e,l-1).reverse().forEach(D=>{Lc(a.webview.getWebviewById(`${Rt(D).id}`),"none",0)});let _=function(D){t?Lc(D,t,n||Uf):Rt(f).openType==="redirectTo"?Lc(D,vm,Uf):Lc(D,"auto"),r.slice(l-e,l).forEach(I=>Vn(I)),ul(),rr(se.ON_SHOW)},w=a.webview.getWebviewById(`${Rt(f).id}`);if(!f.__uniapp_webview)return _(w);II(w,()=>{_(w)})}let Rm=!1;function Mm(){if(Rm)return;Rm=!0;let e,t;if(u.requireModule("plus").getRedirectInfo){let{path:f,query:_,referrerInfo:w}=gn();f&&(e=f,t=_),k.referrerInfo=w}else{let f=a.runtime.arguments;if(!f)return;try{let _=JSON.parse(f);e=_.path||_.pathName,t=_.query?"?"+_.query:""}catch(_){}}if(!e||e===k.entryPagePath){t&&(k.entryPageQuery=t);return}let r=se.addLeadingSlash(e),l=Ti(r);!l||(l.meta.isTabBar||(k.realEntryPagePath=k.realEntryPagePath||k.entryPagePath),k.entryPagePath=e,k.entryPageQuery=t)}function zf(e,t){let n=JSON.parse(JSON.stringify(Ti(e)));return n.meta=yo(n.meta),t!=="preloadPage"&&!k.realEntryPagePath&&(t==="reLaunch"||Mr().length===0)?n.meta.isQuit=!0:n.meta.isTabBar||(n.meta.isQuit=!1),n}let Us={};function MI(e){let t=Object.keys(Us).find(n=>Us[n].id===e.id);t&&delete Us[t]}function BI({url:e}){let t=Us[e];return t&&(t.__page__&&At().find(n=>n===t.__page__)?t.__preload__=!1:t.close("none"),delete Us[e]),t}function LI({url:e,path:t,query:n}){if(!Us[e]){let r=zf(t,"preloadPage");Us[e]=Pm({path:t,routeOptions:r,query:n,webviewExtras:{__preload__:!0}})}return Us[e]}function of({url:e,path:t,query:n,openType:r,webview:l,nvuePageVm:f,eventChannel:_}){if(l&&Mm(),Us[e]){l=Us[e];let Ae=l;if(Ae.__page__)if(At().find(Re=>Re===Ae.__page__))l=void 0;else return _&&(Rt(Ae.__page__).eventChannel=_),r==="launch"?FI(e,t,n,Ae,f,_):vt(Ae.__page__),Ae}let w=zf(t,r);l?(l=a.webview.getWebviewById(l.id),l.nvue=w.meta.isNVue):l=Pm({path:t,routeOptions:w,query:n}),w.meta.id=parseInt(l.id),!!w.meta.isTabBar&&Ri.append(l),NI(l,t,n,w.meta);let I=t.slice(1);l.__uniapp_route=I;let B=ra(r,e,n,w.meta,_,k.darkmode?a.navigator.getUIStyle():"light"),ve=parseInt(l.id);return l.nvue?f?UI(ve,f,B):Bm(ve,l,B):mP(ve,I,n,B,DI(w)),l}function FI(e,t,n,r,l,f){let _=zf(t,"preloadPage");_.meta.id=parseInt(r.id);let w=ra("preloadPage",e,n,_.meta,f,k.darkmode?a.navigator.getUIStyle():"light");Me(l,w),r.__page__=l}function DI({meta:e}){let t=zd(),{platform:n,pixelRatio:r,windowWidth:l}=Xo();return{css:!0,route:e.route,version:1,locale:"",platform:n,pixelRatio:r,windowWidth:l,disableScroll:e.disableScroll===!0,onPageScroll:!1,onPageReachBottom:!1,onReachBottomDistance:Z.hasOwn(e,"onReachBottomDistance")?e.onReachBottomDistance:se.ON_REACH_BOTTOM_DISTANCE,statusbarHeight:t,windowTop:e.navigationBar.type==="float"?t+se.NAVBAR_HEIGHT:0,windowBottom:Ri.indexOf(e.route)>=0&&Ri.cover?Ri.height:0}}function UI(e,t,n){Me(t,n),vt(Vg(e,t,n)),e===1&&(k.splashscreen&&k.splashscreen.autoclose&&!k.splashscreen.alwaysShowBeforeRender&&a.navigator.closeSplashscreen(),k.onReady(function(){xm()}))}function Bm(e,t,n){let r={$:{},$getAppWebview(){return t},getOpenerEventChannel(){return n.eventChannel||(n.eventChannel=new se.EventChannel(e)),n.eventChannel},__setup(l,f){l.$getAppWebview=()=>t,l.getOpenerEventChannel=f.getOpenerEventChannel,Me(l,n),t.__preload__&&(t.__page__=l);let _=_n(),w=_.findIndex(D=>D===f);w>-1&&_.splice(w,1,l)}};Me(r,n),t.__preload__?(t.__page__=r,t.addEventListener("show",()=>{rr(t.__page__,se.ON_SHOW)}),t.addEventListener("hide",()=>{rr(t.__page__,se.ON_HIDE)})):vt(r)}let Lm=(e,{resolve:t,reject:n})=>{let{url:r,events:l,animationType:f,animationDuration:_}=e,{path:w,query:D}=se.parseUrl(r),[I,B]=HI(w,f,_);Vf(w,()=>{$I({url:r,path:w,query:D,events:l,aniType:I,aniDuration:B}).then(t).catch(n)},e.openType==="appLaunch")},VI=xe(Ld,Lm,pw,yw);function $I({url:e,path:t,query:n,events:r,aniType:l,aniDuration:f}){rr(se.ON_HIDE);let _=new se.EventChannel(ym()+1,r);return new Promise(w=>{Hf(of({url:e,path:t,query:n,openType:"navigateTo",eventChannel:_}),l,f,()=>{w({eventChannel:_})}),ul()})}function HI(e,t,n){let{globalStyle:r}=k,l=ia(e);return[t||l.animationType||r.animationType||eI,n||l.animationDuration||r.animationDuration||Uf]}let jI=xe(Fd,({url:e},{resolve:t,reject:n})=>{let{path:r,query:l}=se.parseUrl(e);Vf(r,()=>{zI({url:e,path:r,query:l}).then(t).catch(n)})},gw,Ew);function zI({url:e,path:t,query:n}){let r=Un();return r&&Vn(r),new Promise(l=>{Hf(of({url:e,path:t,query:n,openType:"redirectTo"}),"none",0,()=>{if(r){let f=r.$getAppWebview();f.__preload__&&MI(f),f.close("none")}l(void 0)}),ul()})}let WI=({url:e},{resolve:t,reject:n})=>{let{path:r,query:l}=se.parseUrl(e);Vf(r,()=>{GI({url:e,path:r,query:l}).then(t).catch(n)})};function GI({url:e,path:t,query:n}){return new Promise(r=>{let l=_n().slice(0);Oe.find(_=>_.path===t).meta.isTabBar&&Ri.switchTab(t.slice(1)),Hf(of({url:e,path:t,query:n,openType:"reLaunch"}),"none",0,()=>{l.forEach(_=>km(_,"none")),r(void 0)}),ul()})}let qI=xe($h,WI,mw,Sw),Fm=(e,{resolve:t,reject:n})=>{let{url:r}=e,{path:l,query:f}=se.parseUrl(r);Vf(l,()=>{JI({url:r,path:l,query:f}).then(t).catch(n)},e.openType==="appLaunch")},YI=xe(bf,Fm,vw,ww);function JI({url:e,path:t,query:n}){Ri.switchTab(t.slice(1));let r=At(),l=r.length,f=!1,_=!1,w;l>=1&&(w=r[l-1],w&&!w.$.__isTabBar?(_=!0,r.reverse().forEach(I=>{!I.$.__isTabBar&&I!==w&&km(I,"none")}),Vn(w),O(()=>{Rt(w).openType==="redirectTo"?Lc(w.$getAppWebview(),vm,Uf):Lc(w.$getAppWebview(),"auto")},100)):f=!0);let D;return _n().forEach(I=>{se.addLeadingSlash(I.route)===t?(I.$.__isActive||(_=!0),I.$.__isActive=!0,D=I):I.$.__isTabBar&&(I.$.__isActive=!1)}),w===D&&(f=!1),w&&f&&rr(w,se.ON_HIDE),new Promise(I=>{if(D){let B=D.$getAppWebview();B.show("none"),_&&!B.__preload__&&rr(D,se.ON_SHOW),ul(),I(void 0)}else Hf(of({url:e,path:t,query:n,openType:"switchTab"}),"none",0,()=>{ul(),I(void 0)},70)})}let KI=xe(Dd,({url:e},{resolve:t,reject:n})=>{let r=BI({url:e});if(r){t({id:r.id,url:e,errMsg:"unPreloadPage:ok"});return}n("not found")},bw,Ow),ZI=xe(yf,({url:e},{resolve:t})=>{if(Us[e])return;let n=e.split("?"),r=n[0],l=se.parseQuery(n[1]||""),f=LI({url:e,path:r,query:l}),_=zf(r,"preloadPage");_.meta.id=parseInt(f.id);let w=ra("preloadPage",e,l,_.meta,void 0,k.darkmode?a.navigator.getUIStyle():"light");Bm(parseInt(f.id),f,w),t({id:f.id,url:e,errMsg:"preloadPage:ok"})},_w,Aw);var XI={__proto__:null,$emit:qb,$off:Gb,$on:zb,$once:Wb,__log__:ON,addInterceptor:Rb,addPhoneContact:CO,arrayBufferToBase64:Zo,base64ToArrayBuffer:Oi,canIUse:IA,canvasGetImageData:Sy,canvasPutImageData:wy,canvasToTempFilePath:Cy,checkIsSoterEnrolledInDevice:IO,checkIsSupportSoterAuthentication:NO,chooseImage:XO,chooseLocation:SP,chooseVideo:QO,clearStorage:vA,clearStorageSync:mA,closeAuthView:Zg,closeBLEConnection:lO,closeBluetoothAdapter:tO,closePreviewImage:jO,closeSocket:mT,compressImage:JO,compressVideo:KO,configMTLS:uT,connectSocket:hT,createAnimation:jy,createBLEConnection:sO,createCanvasContext:Ey,createFullScreenVideoAd:YN,createInnerAudioContext:xT,createInteractiveAd:QN,createIntersectionObserver:Ny,createInterstitialAd:KN,createLivePusherContext:GT,createMapContext:oy,createMediaQueryObserver:ky,createPushMessage:gN,createRewardedVideoAd:GN,createSelectorQuery:Fy,createVideoContext:ry,downloadFile:oT,getAppAuthorizeSetting:Sg,getAppBaseInfo:sg,getBLEDeviceCharacteristics:uO,getBLEDeviceRSSI:gO,getBLEDeviceServices:cO,getBackgroundAudioManager:jT,getBeacons:_O,getBluetoothAdapterState:nO,getBluetoothDevices:oO,getChannelManager:mN,getCheckBoxState:Xg,getClipboardData:AO,getConnectedBluetoothDevices:aO,getDeviceInfo:ag,getEnterOptionsSync:f0,getFileInfo:bA,getImageInfo:VO,getLaunchOptionsSync:d0,getLocale:ju,getLocation:KT,getNetworkType:mg,getProvider:cN,getPushClientId:p0,getRecorderManager:GO,getSavedFileInfo:TA,getSavedFileList:OA,getScreenBrightness:BO,getSelectedTextRange:Qy,getStorage:pA,getStorageInfo:_A,getStorageInfoSync:Yh,getStorageSync:dA,getSubNVueById:oN,getSystemInfo:jA,getSystemInfoSync:lg,getSystemSetting:DO,getUniverifyManager:hN,getUserInfo:uN,getUserProfile:fN,getVideoInfo:$O,getWindowInfo:og,hideKeyboard:tT,hideLoading:VP,hideNavigationBarLoading:qP,hideTabBar:QP,hideTabBarRedDot:rN,hideToast:UP,initUTSClassName:pm,initUTSIndexClassName:$N,initUTSPackageName:VN,initUTSProxyClass:fm,initUTSProxyFunction:FN,interceptors:Bb,invokePushCallback:Md,loadFontFace:jP,login:qg,makePhoneCall:EO,navigateBack:kI,navigateTo:VI,navigateToMiniProgram:wN,notifyBLECharacteristicValueChange:fO,offAccelerometerChange:JA,offAppHide:u0,offAppShow:l0,offCompassChange:WA,offError:a0,offKeyboardHeightChange:rT,offLocationChange:kP,offLocationChangeError:RP,offNetworkStatusChange:PO,offPageNotFound:i0,offPushMessage:g0,offThemeChange:MO,offUnhandledRejection:n0,offWindowResize:Yy,onAccelerometerChange:YA,onAppHide:c0,onAppShow:s0,onBLECharacteristicValueChange:QA,onBLEConnectionStateChange:XA,onBeaconServiceChange:vO,onBeaconUpdate:mO,onBluetoothAdapterStateChange:ZA,onBluetoothDeviceFound:KA,onCompassChange:zA,onCreateVueApp:se.onCreateVueApp,onError:o0,onHostEventReceive:rm,onKeyboardHeightChange:nT,onLocaleChange:Ky,onLocationChange:IP,onLocationChangeError:xP,onNativeEventReceive:CN,onNetworkStatusChange:TO,onPageNotFound:r0,onPushMessage:h0,onSocketClose:yT,onSocketError:_T,onSocketMessage:bT,onSocketOpen:vT,onTabBarMidButtonTap:zy,onThemeChange:RO,onUnhandledRejection:t0,onWindowResize:qy,openAppAuthorizeSetting:UO,openBluetoothAdapter:eO,openDocument:NA,openLocation:TP,pageScrollTo:zP,preLogin:Jg,preloadPage:ZI,previewImage:HO,reLaunch:qI,readBLECharacteristicValue:dO,redirectTo:jI,registerRuntime:vN,registerUTSInterface:HN,registerUTSPlugin:jN,removeInterceptor:Mb,removeSavedFile:PA,removeStorage:gA,removeStorageSync:hA,removeTabBarBadge:nN,request:cT,requestPayment:SN,requireGlobal:sN,requireNativePlugin:Da,requireUTSPlugin:zN,restoreGlobal:aN,saveFile:wA,saveImageToPhotosAlbum:YO,saveVideoToPhotosAlbum:qO,scanCode:xO,sendHostEvent:tm,sendNativeEvent:pg,sendSocketMessage:gT,setBLEMTU:hO,setClipboardData:OO,setKeepScreenOn:FO,setLocale:Zy,setNavigationBarColor:JP,setNavigationBarTitle:WP,setPageMeta:Xy,setScreenBrightness:LO,setStorage:fA,setStorageSync:uA,setTabBarBadge:KP,setTabBarItem:ZP,setTabBarStyle:XP,share:yN,shareWithSystem:EN,showActionSheet:LP,showKeyboard:eT,showLoading:FP,showModal:MP,showNavigationBarLoading:GP,showTabBar:eN,showTabBarRedDot:tN,showToast:DP,startAccelerometer:fg,startBeaconDiscovery:bO,startBluetoothDevicesDiscovery:rO,startCompass:cg,startLocationUpdate:PP,startPullDownRefresh:$P,startSoterAuthentication:kO,stopAccelerometer:dg,stopBeaconDiscovery:yO,stopBluetoothDevicesDiscovery:iO,stopCompass:ug,stopLocationUpdate:NP,stopPullDownRefresh:HP,subscribeGetLocation:Bg,switchTab:YI,syncDataToGlobal:lN,unPreloadPage:KI,uploadFile:ST,upx2px:Tb,vibrateLong:qA,vibrateShort:GA,weexGetSystemInfoSync:Zu,writeBLECharacteristicValue:pO};let QI=Z.extend(Dl,{publishHandler:ek});function ek(e,t,n){t=JSON.stringify(t),Z.isArray(n)||(n=[n]);let r=`typeof UniViewJSBridge !== 'undefined' && UniViewJSBridge.subscribeHandler("${e}",${t},__PAGE_ID__)`;n.forEach(l=>{let f=String(l),_=a.webview.getWebviewById(f);_&&_.evalJS(r.replace("__PAGE_ID__",f))})}function tk(){let{tabBar:e}=k;if(!(e&&e.list&&e.list.length))return;let{entryPagePath:n}=k;e.selectedIndex=0;let r=e.list.findIndex(l=>l.pagePath===n);Ri.init(e,(l,f)=>{P.switchTab({url:se.addLeadingSlash(l.pagePath),openType:"switchTab",from:"tabBar",success(){rr(se.ON_TAB_ITEM_TAP,{index:f,text:l.text,pagePath:l.pagePath})}})}),r!==-1&&(e.selectedIndex=r,r!==0&&Ri.switchTab(n))}function nk(){let e=a.globalEvent,t=u.requireModule("globalEvent"),{emit:n,publishHandler:r}=St;u.config.preload?a.key.addEventListener(Ss,Ui):e.addEventListener("splashclosed",()=>{a.key.addEventListener(Ss,Ui)}),e.addEventListener("pause",()=>{n(se.ON_APP_ENTER_BACKGROUND)}),e.addEventListener("resume",()=>{let f=gn();f&&f.userAction&&$t(f),n(se.ON_APP_ENTER_FOREGROUND,Ge())}),t.addEventListener("uistylechange",function(f){let _={theme:f.uistyle};n(se.ON_THEME_CHANGE,_),r(se.ON_THEME_CHANGE,_,to()),MA()});let l=0;e.addEventListener("KeyboardHeightChange",function(f){l!==f.height&&(l=f.height,n(se.ON_KEYBOARD_HEIGHT_CHANGE,{height:l}))}),t.addEventListener(rI,function(f){f&&f.event&&AN(f.event,f.data)}),e.addEventListener("plusMessage",Dm),e.addEventListener("WebviewPostMessage",Dm)}function Dm({data:e}){e&&e.type&&St.subscribeHandler("plusMessage."+e.type,e.args)}function Um(e,t,n=!1){St.subscribe("plusMessage."+e,t,n)}function rk(e){e0(e.$);let{entryPagePath:t,entryPageQuery:n,referrerInfo:r}=k,l=It({path:t,query:n,referrerInfo:r});rr(e,se.ON_LAUNCH,l),rr(e,se.ON_SHOW,l);let f=u.requireModule("plus").getAppState;(f&&Number(f()))===2&&rr(e,se.ON_HIDE,l)}function Vm(e){return e=e.replace(/\/$/,""),e.indexOf("_")===0?a.io.convertLocalFileSystemURL(e):e}function ik(){let e=Vm(Ys),t=Vm(bi),n=t.split("/");n.pop();let r=n.join("/");a.io.resolveLocalFileSystemURL(a.io.convertAbsoluteFileSystem(r),l=>{l.createReader().readEntries(function(_){let w=_;w&&w.length&&w.forEach(function(D){D.isDirectory&&D.fullPath.indexOf(e)===0&&D.fullPath.indexOf(t)!==0&&D.removeRecursively()})})})}let $m=0,Su=0,Wf=null,Fc=null;function ok(e,t){if(Wf=null,Fc&&(y(Fc),Fc=null),e.type==="onFocus")if(Su>0)e.detail.height=Su;else{Fc=O(function(){e.detail.height=Su,t(e)},$m),Wf=function(){Fc&&(y(Fc),Fc=null),e.detail.height=Su,t(e)};return}t(e)}function ak(){$m=a.os.name.toLowerCase()==="android"?300:700,St.on(se.ON_KEYBOARD_HEIGHT_CHANGE,t=>{if(Su=t.height,Su>0){let n=Wf;Wf=null,n&&n()}})}function sk(e,t,n){let r=t.type;r==="onFocus"||r==="onBlur"?ok(t,l=>{n.fireEvent(e,l)}):n.fireEvent(e,t)}function lk(e,t){let n=Ut(parseInt(t));if(!n)return;let r=n.__page_container__;e.forEach(l=>{switch(l[0]){case se.ACTION_TYPE_EVENT:sk(l[1],l[2],r);break}})}let Hm={};function ck(e,t,n){let{adpid:r,width:l}=e,f=r+"-"+l,_=Hm[f];if(_&&_.length>0){t(_.splice(0,1)[0]);return}a.ad.getAds(e,w=>{let D=w.ads;t(D.splice(0,1)[0]),Hm[f]=_?_.concat(D):D},w=>{n({errCode:w.code,errMsg:w.message})})}function uk(){wo("getAdData",(e,t)=>{ck(e,n=>{t({code:0,data:n})},n=>{t({code:1,message:n})})})}let fk=["switchTab","reLaunch","redirectTo","navigateTo","navigateBack"];function dk(){fk.forEach(e=>{wo(e,t=>{P[e](Z.extend(t,{fail(n){console.error(n.errMsg)}}))})})}let jm=!1;function pk(e,t){let n=t==="1";if(!(n&&jm)){if(n?(jm=!0,Cm(a.webview.getLaunchWebview())):uo||Cm(a.webview.getWebviewById(t)),!uo.loaded){if(uo.id!==t)return console.error(`webviewReady[${uo.id}][${t}] not match`);uo.loaded=!0}St.emit(Eu+"."+t),n&&hk()}}function hk(){let{autoclose:e,alwaysShowBeforeRender:t}=k.splashscreen;e&&!t&&a.navigator.closeSplashscreen();let n=se.addLeadingSlash(k.entryPagePath),r=Ti(n);if(!r.meta.isNVue){let l={url:n+(k.entryPageQuery||""),openType:"appLaunch"},f={resolve(){},reject(){}};return r.meta.isTabBar?Fm(l,f):Lm(l,f)}}function gk(e,t){let n=Ut(parseInt(t));n&&(n.__uniapp_webview=!0)}function mk(e,t){let n=Ut(parseInt(t));n&&delete n.__uniapp_webview}let vk=({name:e,arg:t},n)=>{e==="postMessage"?_k(n[0],t):P[e](Z.extend(t,{fail(r){console.error(r.errMsg)}}))};function _k(e,t){let n=rP("web-view",parseInt(e));n&&n.dispatchEvent(se.createUniEvent({type:"onMessage",target:Object.create(null),currentTarget:Object.create(null),detail:{data:[t]}}))}function bk({nodeId:e,ownerId:t,method:n,args:r},l){let f=Fg(e,parseInt(l));if(!f)return;let _=yk(t,f.__vueParentComponent);!_||!_[n]||_[n](r)}function yk(e,t){if(!t)return null;if(t.uid===e)return t.proxy;let n=t.parent;for(;n;){if(n.uid===e)return n.proxy;n=n.parent}return t.proxy}function Ek(){let{subscribe:e,subscribeHandler:t,publishHandler:n}=St;if(Um("subscribeHandler",({type:r,data:l,pageId:f})=>{t(r,l,f)}),Um(se.WEB_INVOKE_APPSERVICE,({data:r,webviewIds:l})=>{vk(r,l)}),k.renderer!=="native"){e(Eu,pk),e(Lg,lk),So(),uk(),dk(),e(QT,gk),e(eP,mk),e(se.ON_WXS_INVOKE_CALL_METHOD,bk);let r=Ti(se.addLeadingSlash(k.entryPagePath));r&&!r.meta.isNVue&&n(Eu,{},1),Bg(),bP()}}let wu,sp={globalData:{}};function Sk({allowDefault:e=!1}={}){if(wu)return wu;if(e)return sp;console.error("[warn]: getApp() failed. Learn more: https://uniapp.dcloud.io/collocation/frame/window?id=getapp.")}function wk(e){if(P.Vuex&&e.$store){let{useStore:t}=P.Vuex;P.Vuex.useStore=n=>n?t(n):e.$store}Tt(e),wu=e,we(wu),Z.extend(wu,sp),Ee(wu,sp.globalData),ge(),Mm(),tk(),nk(),ak(),Ek(),rk(e),O(ik,1e4),k.ready=!0}var Ck={uni:XI,getApp:Sk,getCurrentPages:Rn,__definePage:ep,__registerApp:wk,__registerPage:of,UniServiceJSBridge:QI};return Ck}(gt,Ot,b);ue=ue.default||ue;let P=ue.uni,Nt=ue.getApp,Mr=ue.getCurrentPages,St=ue.UniServiceJSBridge;return ue}var Fv=sx(ux);function fx(u){return u.length===0?null:u.pop()}function dx(u){return u.length===0?null:u.shift()}function px(u,a){let p=u.findIndex(a);return p<0?null:u[p]}function hx(u,a){let p=u.findLastIndex(a);return p<0?null:u[p]}function gx(u,a){return a<-u.length||a>=u.length?null:u.at(a)}var Pp;(function(u){u.UTSJSONObject="UTSJSONObject",u.JSON="JSON",u.UTS="UTS",u.DEFINE_COMPONENT="defineComponent",u.VUE="vue",u.GLOBAL_THIS="globalThis",u.UTS_TYPE="UTSType",u.UTS_METADATA="$UTSMetadata$",u.TEMP_UTS_METADATA="$TempUTSMetadata$",u.JSON_FIELD="JSON_FIELD"})(Pp||(Pp={}));var fd;(function(u){u[u.CLASS=0]="CLASS",u[u.INTERFACE=1]="INTERFACE",u[u.TYPE=2]="TYPE"})(fd||(fd={}));function Dv(u){return Object.prototype.toString.call(u).slice(8,-1).toLowerCase()}function Uv(u){if(u==null||typeof u!="object")return!1;let a=Object.getPrototypeOf(u);return a===Object.prototype||a===null}var uf=class extends Error{constructor(a){super(a)}};function mx(u){return!!(u&&u.kind in fd&&u.interfaces)}function Vv(u){return!u||u===Object.prototype}var $v=Pp.UTS_METADATA;function vx(u){let a=$v in u?u[$v]:{},p=[];mx(a)?p=a.interfaces||[]:p=[];let b=Object.getPrototypeOf(u);return Vv(b)||p.push(b.constructor),p}function Hv(u,a,p=[]){return Vv(u)?!1:u===a?!0:(p.push(u),vx(u).some(O=>p.includes(O)?!1:Hv(O,a,p)))}function _x(u,a){if(a===UTSValueIterable)return u&&u[Symbol.iterator];let p=u instanceof a;if(p||typeof u!="object"||u===null)return p;let b=Object.getPrototypeOf(u).constructor;return Hv(b,a)}function jv(u){return u===Number||u===String||u===Boolean}function zv(u){return u==="Unknown"}function Wv(u){return u==="Any"}function Np(u){return u&&u.prototype&&u.prototype instanceof Ml}function Ip(u,a,p=!1){return u==null?null:jv(a)||zv(a)||Wv(a)?u:a===Array?new Array(...u):new a(u,void 0,p)}var Ml=class{static get$UTSMetadata$(...a){return{name:"",kind:fd.TYPE,interfaces:[],fields:{}}}get $UTSMetadata$(){return Ml.get$UTSMetadata$()}static withGenerics(a,p,b=!1){if(b){let O=p.find(y=>!(y===Array||jv(y)||zv(y)||Wv(y)||y===UTSJSONObject||y.prototype&&y.prototype instanceof Ml));if(O)throw new Error("Generic is not UTSType or Array or UTSJSONObject or base type, generic: "+O)}return a===Array?class extends Ml{constructor(y,h=!1){if(!Array.isArray(y))throw new uf(`Failed to contruct type, ${y} is not an array`);super();return y.map(v=>Ip(v,p[0],h))}}:a===Map||a===WeakMap?class extends Ml{constructor(y,h=!1){if(y==null||typeof y!="object")throw new uf(`Failed to contruct type, ${y} is not an object`);super();let v=new a;for(let k in y)v.set(Ip(k,p[0],h),Ip(y[k],p[1],h));return v}}:Np(a)?class Gv extends a{static get$UTSMetadata$(){return a.get$UTSMetadata$(...p)}constructor(y,h=Gv.get$UTSMetadata$(),v=!1){super(y,h,v)}}:a}constructor(){}static initProps(a,p,b=!1){let O={};if(!p.fields)return O;for(let y in p.fields){let{type:h,optional:v,jsonField:k}=p.fields[y],Oe=b&&k||y;if(a[Oe]==null)if(v){O[y]=null;continue}else throw new uf(`Failed to contruct type, missing required property: ${y}`);if(Np(h))O[y]=b?new h(a[Oe],void 0,b):a[Oe];else if(h===Array){if(!Array.isArray(a[Oe]))throw new uf(`Failed to contruct type, property ${y} is not an array`);O[y]=a[Oe]}else O[y]=a[Oe]}return O}},dd=JSON;function kp(u){let a=new UTSJSONObject({});for(let p in u){let b=u[p];Uv(b)?a[p]=kp(b):Dv(b)==="array"?a[p]=b.map(O=>Uv(O)?kp(O):O):a[p]=b}return a}function pd(u,a){let p=Dv(u);if(u===null||p!=="object"&&p!=="array")return u;if(a&&a!==UTSJSONObject)try{return new a(u,void 0,!0)}catch(b){return console.error(b),null}return p==="array"?u.map(b=>pd(b)):p==="object"?kp(u):u}var bx={parse:(u,a,p)=>{a&&(Np(a)||a===UTSJSONObject)&&(p=a,a=void 0);try{let b=dd.parse(u,a);return pd(b,p)}catch(b){return console.error(b),null}},parseArray(u,a){try{let p=dd.parse(u);return Array.isArray(p)?pd(p,a?Ml.withGenerics(Array,[a],!0):void 0):null}catch(p){return console.error(p),null}},parseObject(u,a){try{let p=dd.parse(u);return Array.isArray(p)?null:pd(p,a)}catch(p){return console.error(p),null}},stringify:u=>dd.stringify(u)};function yx(u,a){return u.has(a)?u.get(a):null}function Ex(u,a){return a<0||a>=u.length?null:u.codePointAt(a)}function Sx(u,a){return a<-u.length||a>=u.length?null:u.at(a)}function wx(u,a){return u.has(a)?u.get(a):null}var Cx={arrayAt:gx,arrayFind:px,arrayFindLast:hx,arrayPop:fx,arrayShift:dx,isInstanceOf:_x,UTSType:Ml,mapGet:yx,stringAt:Sx,stringCodePointAt:Ex,weakMapGet:wx,JSON:bx},qv=class extends Error{constructor(a,p,b){let O={};switch(Array.from(arguments).length){case 0:a="",b="",p=0;break;case 1:b=a,a="",p=0;break;case 2:b=a,O=p,p=O.errCode||0,a=O.errSubject||"";break}super(b);this.name="UniError",this.errSubject=a,this.errCode=p,this.errMsg=b,O.data&&(this.data=O.data),O.cause&&(this.cause=O.cause)}set errMsg(a){this.message=a}get errMsg(){return this.message}toString(){return this.errMsg}toJSON(){return{errSubject:this.errSubject,errCode:this.errCode,errMsg:this.errMsg,data:this.data,cause:this.cause&&typeof this.cause.toJSON=="function"?this.cause.toJSON():this.cause}}};function Ax(u){let a=["_resolveKeyPath","_getValue","toJSON","get","set","getAny","getString","getNumber","getBoolean","getJSON","getArray","toMap","forEach"],p={};for(let b=0;b<a.length;b++){let O=a[b];p[O]={enumerable:!1,value:u[O]}}Object.defineProperties(u,p)}var Ox=class{static keys(a){return Object.keys(a)}static assign(a,...p){for(let b=0;b<p.length;b++){let O=p[b];for(let y in O)a[y]=O[y]}return a}constructor(a={}){if(a instanceof Map)a.forEach((p,b)=>{this[b]=p});else for(let p in a)Object.prototype.hasOwnProperty.call(a,p)&&(this[p]=a[p]);Ax(this)}_resolveKeyPath(a){let p="",b=[],O=!1;for(let y=0;y<a.length;y++){let h=a[y];switch(h){case".":p.length>0&&(b.push(p),p="");break;case"[":{O=!0,p.length>0&&(b.push(p),p="");break}case"]":if(O){if(p.length>0){let v=p[0],k=p[p.length-1];if(v==='"'&&k==='"'||v==="'"&&k==="'"||v==="`"&&k==="`")if(p.length>2)p=p.slice(1,-1);else return[];else if(!/^\d+$/.test(p))return[];b.push(p),p=""}else return[];O=!1}else return[];break;default:p+=h;break}y===a.length-1&&p.length>0&&(b.push(p),p="")}return b}_getValue(a,p){let b=this._resolveKeyPath(a),O=p===void 0?null:p;if(b.length===0)return O;let y=this;for(let h=0;h<b.length;h++){let v=b[h];if(y instanceof Object)y=v in y?y[v]:O;else return O}return y}get(a){return this._getValue(a)}set(a,p){this[a]=p}getAny(a,p){return this._getValue(a,p)}getString(a,p){let b=this._getValue(a,p);return typeof b=="string"?b:null}getNumber(a,p){let b=this._getValue(a,p);return typeof b=="number"?b:null}getBoolean(a,p){let b=this._getValue(a,p);return typeof b=="boolean"?b:null}getJSON(a,p){let b=this._getValue(a,p);return b instanceof Object?b:null}getArray(a,p){let b=this._getValue(a,p);return b instanceof Array?b:null}toMap(){let a=new Map;for(let p in this)a.set(p,this[p]);return a}forEach(a){for(let p in this)a(this[p],p)}},Tx=class{};function Px(){if(typeof globalThis!="undefined")return globalThis;if(typeof self!="undefined")return self;if(typeof window!="undefined")return window;if(typeof global!="undefined")return global;function u(){return this}return typeof u()!="undefined"?u():function(){return new Function("return this")()}()}var hd=Px();hd.UTSJSONObject=Ox;hd.UniError=qv;hd.UTS=Cx;hd.UTSValueIterable=Tx;var gd;function Yv(u){gd=u.getLocation}function Jv(u){Nx(u)}function Nx(u){let a=u.getLocation;a!==gd&&(u.getLocation=function(p){if(p.type&&p.type==="gcj02")try{return a(p)}catch(b){return u.getLocation=gd,u.getLocation(p)}else return gd(p)})}function Kv(u){Yv(u)}function Zv(u){Jv(u)}var Xv=u=>{};var Qv=u=>{};var e_=u=>{};var t_=u=>{};var n_=u=>{let{registerUTSInterface:a,initUTSProxyClass:p,initUTSProxyFunction:b,initUTSPackageName:O,initUTSIndexClassName:y,initUTSClassName:h}=u,v="DCloudUniChooseMedia",k="uni-chooseMedia",Oe="built-in",gt="",Ot=!0,ue=O(v,Ot),P=y(v,Ot);u.chooseMedia=b(!1,{moduleName:k,moduleType:Oe,errMsg:gt,main:!0,package:ue,class:P,name:"chooseMediaByJs",keepAlive:!1,params:[{name:"options",type:"UTSSDKModulesDCloudUniChooseMediaChooseMediaOptionsJSONObject"}],return:""})};var r_=u=>{};var i_=u=>{let{registerUTSInterface:a,initUTSProxyClass:p,initUTSProxyFunction:b,initUTSPackageName:O,initUTSIndexClassName:y,initUTSClassName:h}=u,v="DCloudUniCreateRequestPermissionListener",k="uni-createRequestPermissionListener",Oe="built-in",gt="",Ot=!0,ue=O(v,Ot),P=y(v,Ot);a("RequestPermissionListenerOptions",Object.assign({moduleName:k,moduleType:Oe,errMsg:gt,package:ue,class:h(v,"RequestPermissionListenerByJsProxy",Ot)},{methods:{onRequestByJs:{async:!1,keepAlive:!1,params:[{name:"callback",type:"UTSCallback"}]},onConfirmByJs:{async:!1,keepAlive:!1,params:[{name:"callback",type:"UTSCallback"}]},onCompleteByJs:{async:!1,keepAlive:!1,params:[{name:"callback",type:"UTSCallback"}]},stopByJs:{async:!1,keepAlive:!1,params:[]}},props:[],setters:{}})),u.createRequestPermissionListener=b(!1,{moduleName:k,moduleType:Oe,errMsg:gt,main:!0,package:ue,class:P,name:"createRequestPermissionListenerByJs",keepAlive:!1,params:[],return:{type:"interface",options:"RequestPermissionListenerOptions"}})};var o_=u=>{};var a_=u=>{};var s_=u=>{};var l_=u=>{let{registerUTSInterface:a,initUTSProxyClass:p,initUTSProxyFunction:b,initUTSPackageName:O,initUTSIndexClassName:y,initUTSClassName:h}=u,v="DCloudUniExit",k="uni-exit",Oe="built-in",gt="",Ot=!0,ue=O(v,Ot),P=y(v,Ot);u.exit=b(!1,{moduleName:k,moduleType:Oe,errMsg:gt,main:!0,package:ue,class:P,name:"exitByJs",keepAlive:!1,params:[{name:"options",type:"UTSSDKModulesDCloudUniExitExitOptionsJSONObject",default:"UTSNull"}],return:""})};var c_=u=>{let{registerUTSInterface:a,initUTSProxyClass:p,initUTSProxyFunction:b,initUTSPackageName:O,initUTSIndexClassName:y,initUTSClassName:h}=u,v="DCloudUniFacialRecognitionVerify",k="FacialRecognitionVerify(\u5B9E\u4EBA\u8BA4\u8BC1)",Oe="built-in",gt="",Ot=!0,ue=O(v,Ot),P=y(v,Ot);u.startFacialRecognitionVerify=b(!1,{moduleName:k,moduleType:Oe,errMsg:gt,main:!0,package:ue,class:P,name:"startFacialRecognitionVerifyByJs",keepAlive:!1,params:[{name:"faceStyle",type:"UTSSDKModulesDCloudUniFacialRecognitionVerifyStartFacialRecognitionVerifyOptionsJSONObject"}],return:""}),u.getFacialRecognitionMetaInfo=b(!1,{moduleName:k,moduleType:Oe,errMsg:gt,main:!0,package:ue,class:P,name:"getFacialRecognitionMetaInfoByJs",keepAlive:!1,params:[],return:""})};var md=class extends UTS.UTSType{static get$UTSMetadata$(){return{kind:2,get fields(){return{data:{type:"Any",optional:!1}}}}}constructor(a,p=md.get$UTSMetadata$(),b=!1){super();this.__props__=UTS.UTSType.initProps(a,p,b),this.data=this.__props__.data,delete this.__props__}},pl=class extends UTS.UTSType{static get$UTSMetadata$(){return{kind:2,get fields(){return{errMsg:{type:String,optional:!1}}}}}constructor(a,p=pl.get$UTSMetadata$(),b=!1){super();this.__props__=UTS.UTSType.initProps(a,p,b),this.errMsg=this.__props__.errMsg,delete this.__props__}},vd=class extends UTS.UTSType{static get$UTSMetadata$(){return{kind:2,get fields(){return{files:{type:UTS.UTSType.withGenerics(Array,[String]),optional:!1},errMsg:{type:String,optional:!0}}}}}constructor(a,p=vd.get$UTSMetadata$(),b=!1){super();this.__props__=UTS.UTSType.initProps(a,p,b),this.files=this.__props__.files,this.errMsg=this.__props__.errMsg,delete this.__props__}},_d=class extends UTS.UTSType{static get$UTSMetadata$(){return{kind:2,get fields(){return{digest:{type:String,optional:!1},size:{type:Number,optional:!1},errMsg:{type:String,optional:!1}}}}}constructor(a,p=_d.get$UTSMetadata$(),b=!1){super();this.__props__=UTS.UTSType.initProps(a,p,b),this.digest=this.__props__.digest,this.size=this.__props__.size,this.errMsg=this.__props__.errMsg,delete this.__props__}},ff=class extends UTS.UTSType{static get$UTSMetadata$(){return{kind:2,get fields(){return{path:{type:String,optional:!1},stats:{type:"Unknown",optional:!1}}}}}constructor(a,p=ff.get$UTSMetadata$(),b=!1){super();this.__props__=UTS.UTSType.initProps(a,p,b),this.path=this.__props__.path,this.stats=this.__props__.stats,delete this.__props__}},bd=class extends UTS.UTSType{static get$UTSMetadata$(){return{kind:2,get fields(){return{errMsg:{type:String,optional:!1},stats:{type:UTS.UTSType.withGenerics(Array,[ff]),optional:!1}}}}}constructor(a,p=bd.get$UTSMetadata$(),b=!1){super();this.__props__=UTS.UTSType.initProps(a,p,b),this.errMsg=this.__props__.errMsg,this.stats=this.__props__.stats,delete this.__props__}},Ix="uni-fileSystemManager",kx=new Map([[1200002,"Type error. only support base64 / utf-8"],[1300002,"No such file or directory"],[1300013,"Permission denied"],[1300021,"Is a directory"],[1300022,"Invalid argument"],[1300066,"Directory not empty"],[1301003,"Illegal operation on a directory"],[1301005,"File already exists"],[1300201,"System error"],[1300202,"The maximum size of the file storage limit is exceeded"],[1301111,"Brotli decompress fail"],[1302003,"Invalid flag"],[1300009,"Bad file descriptor"],[1300010,"Try again"],[1300011,"Bad address"],[1300012,"Operation would block"],[1300014,"Network is unreachable"],[1300015,"Unknown error"],[1300016,"Not a directory"],[1300017,"Text file busy"],[1300018,"File too large"],[1300019,"Read-only file system"],[1300020,"File name too long"]]),Ua=class extends UniError{constructor(a){super();var p;this.errSubject=Ix,this.errCode=a,this.errMsg=(p=UTS.mapGet(kx,a))!=null?p:""}},u_=class{constructor(){this.mode=0,this.size=0,this.lastAccessedTime=0,this.lastModifiedTime=0,this.mIsFile=!1}isDirectory(){return!this.mIsFile}isFile(){return this.mIsFile}};function xx(u=null){let a=new u_;return a.mIsFile=u.isFile,a.mode=u.mode,a.size=u.size,a.lastAccessedTime=u.lastAccessedTime,a.lastModifiedTime=u.lastModifiedTime,new ff({path:u.path,stats:a})}function Rx(u=null){return u.map((a=null)=>xx(a))}var f_=class{stat(a){nativeFileManager.stat(a.path,a.recursive,function(p=null){var b,O,y=new bd({stats:Rx(p),errMsg:"stat:ok"});(b=a.success)==null||b.call(a,y),(O=a.complete)==null||O.call(a,y)},function(p=null){var b,O;let y=new Ua(p);(b=a.fail)==null||b.call(a,y),(O=a.complete)==null||O.call(a,y)})}getFileInfo(a){var p,b;if(a.digestAlgorithm==null||a.digestAlgorithm==null)a.digestAlgorithm="md5";else if(a.digestAlgorithm.toLowerCase()!="md5"&&a.digestAlgorithm.toLowerCase()!="sha1"){let O=new Ua(1300022);return(p=a.fail)==null||p.call(a,O),(b=a.complete)==null||b.call(a,O),null}nativeFileManager.getFileInfo(a.filePath,a.digestAlgorithm,function(O=null){var y,h,v=new _d({size:O.size,digest:O.digest,errMsg:"getFileInfo:ok"});(y=a.success)==null||y.call(a,v),(h=a.complete)==null||h.call(a,v)},function(O=null){var y,h;let v=new Ua(O);(y=a.fail)==null||y.call(a,v),(h=a.complete)==null||h.call(a,v)})}copyFile(a){nativeFileManager.copyFile(a.srcPath,a.destPath,function(p=null){var b,O,y=new pl({errMsg:"copyFile:ok"});(b=a.success)==null||b.call(a,y),(O=a.complete)==null||O.call(a,y)},function(p=null){var b,O;let y=new Ua(p);(b=a.fail)==null||b.call(a,y),(O=a.complete)==null||O.call(a,y)})}rename(a){nativeFileManager.rename(a.oldPath,a.newPath,function(p=null){var b,O,y=new pl({errMsg:"rename:ok"});(b=a.success)==null||b.call(a,y),(O=a.complete)==null||O.call(a,y)},function(p=null){var b,O;let y=new Ua(p);(b=a.fail)==null||b.call(a,y),(O=a.complete)==null||O.call(a,y)})}access(a){nativeFileManager.access(a.path,function(p=null){var b,O,y=new pl({errMsg:"access:ok"});(b=a.success)==null||b.call(a,y),(O=a.complete)==null||O.call(a,y)},function(p=null){var b,O;let y=new Ua(p);(b=a.fail)==null||b.call(a,y),(O=a.complete)==null||O.call(a,y)})}readdir(a){nativeFileManager.readdir(a.dirPath,function(p=null){var b,O,y=new vd(p);(b=a.success)==null||b.call(a,y),(O=a.complete)==null||O.call(a,y)},function(p=null){var b,O;let y=new Ua(p);(b=a.fail)==null||b.call(a,y),(O=a.complete)==null||O.call(a,y)})}rmdir(a){nativeFileManager.rmdir(a.dirPath,a.recursive,function(p=null){var b,O,y=new pl({errMsg:"rmdir:ok"});(b=a.success)==null||b.call(a,y),(O=a.complete)==null||O.call(a,y)},function(p=null){var b,O;let y=new Ua(p);(b=a.fail)==null||b.call(a,y),(O=a.complete)==null||O.call(a,y)})}mkdir(a){nativeFileManager.mkdir(a.dirPath,a.recursive,function(p=null){var b,O,y=new pl({errMsg:"mkdir:ok"});(b=a.success)==null||b.call(a,y),(O=a.complete)==null||O.call(a,y)},function(p=null){var b,O;let y=new Ua(p);(b=a.fail)==null||b.call(a,y),(O=a.complete)==null||O.call(a,y)})}unlink(a){nativeFileManager.unlink(a.filePath,function(p=null){var b,O,y=new pl({errMsg:"unlink:ok"});(b=a.success)==null||b.call(a,y),(O=a.complete)==null||O.call(a,y)},function(p=null){var b,O;let y=new Ua(p);(b=a.fail)==null||b.call(a,y),(O=a.complete)==null||O.call(a,y)})}readFile(a){nativeFileManager.readFile(a.encoding,a.filePath,function(p=null){var b,O,y=new md(p);(b=a.success)==null||b.call(a,y),(O=a.complete)==null||O.call(a,y)},function(p=null){var b,O;let y=new Ua(p);(b=a.fail)==null||b.call(a,y),(O=a.complete)==null||O.call(a,y)})}writeFile(a){nativeFileManager.writeFile(a.filePath,a.encoding,a.data,function(){var p,b,O=new pl({errMsg:"writeFile:ok"});(p=a.success)==null||p.call(a,O),(b=a.complete)==null||b.call(a,O)},function(p=null){var b,O;let y=new Ua(p);(b=a.fail)==null||b.call(a,y),(O=a.complete)==null||O.call(a,y)})}},d_=function(){return new f_};var p_=u=>{u.getFileSystemManager=d_};var h_=u=>{};var g_=u=>{};var m_=u=>{};var v_=u=>{};var __=u=>{};var b_=u=>{};var y_=u=>{};var E_=u=>{};var S_=u=>{};var w_=u=>{let{registerUTSInterface:a,initUTSProxyClass:p,initUTSProxyFunction:b,initUTSPackageName:O,initUTSIndexClassName:y,initUTSClassName:h}=u,v="DCloudUniGetLocationTencentUni1",k="uni-getLocation-tencent-uni1",Oe="built-in",gt="",Ot=!0,ue=O(v,Ot),P=y(v,Ot);u.getLocation=b(!1,{moduleName:k,moduleType:Oe,errMsg:gt,main:!0,package:ue,class:P,name:"getLocationByJs",keepAlive:!1,params:[{name:"options",type:"UTSSDKModulesDCloudUniGetLocationTencentUni1GetLocationOptionsJSONObject"}],return:""})};var C_=u=>{};var A_=u=>{};var O_=u=>{};var T_=u=>{};var P_=u=>{};var N_=u=>{let{registerUTSInterface:a,initUTSProxyClass:p,initUTSProxyFunction:b,initUTSPackageName:O,initUTSIndexClassName:y,initUTSClassName:h}=u,v="DCloudUniInstallApk",k="uni-installApk",Oe="built-in",gt="",Ot=!0,ue=O(v,Ot),P=y(v,Ot);u.installApk=b(!1,{moduleName:k,moduleType:Oe,errMsg:gt,main:!0,package:ue,class:P,name:"installApkByJs",keepAlive:!1,params:[{name:"options",type:"UTSSDKModulesDCloudUniInstallApkInstallApkOptionsJSONObject"}],return:""})};var I_=u=>{};var k_=u=>{};var x_=u=>{};var R_=u=>{};var M_=u=>{};var B_=u=>{};var L_=u=>{let{registerUTSInterface:a,initUTSProxyClass:p,initUTSProxyFunction:b,initUTSPackageName:O,initUTSIndexClassName:y,initUTSClassName:h}=u,v="DCloudUniPrivacy",k="uni-privacy",Oe="built-in",gt="",Ot=!0,ue=O(v,Ot),P=y(v,Ot);u.getPrivacySetting=b(!1,{moduleName:k,moduleType:Oe,errMsg:gt,main:!0,package:ue,class:P,name:"getPrivacySettingByJs",keepAlive:!1,params:[{name:"options",type:"UTSSDKModulesDCloudUniPrivacyGetPrivacySettingOptionsJSONObject"}],return:""}),u.resetPrivacyAuthorization=b(!1,{moduleName:k,moduleType:Oe,errMsg:gt,main:!0,package:ue,class:P,name:"resetPrivacyAuthorizationByJs",keepAlive:!1,params:[],return:""}),u.onPrivacyAuthorizationChange=b(!1,{moduleName:k,moduleType:Oe,errMsg:gt,main:!0,package:ue,class:P,name:"onPrivacyAuthorizationChangeByJs",keepAlive:!1,params:[{name:"callback",type:"UTSCallback"}],return:""}),u.offPrivacyAuthorizationChange=b(!1,{moduleName:k,moduleType:Oe,errMsg:gt,main:!0,package:ue,class:P,name:"offPrivacyAuthorizationChangeByJs",keepAlive:!1,params:[{name:"id",type:"number"}],return:""})};var F_=u=>{};var D_=u=>{};var U_=u=>{};var V_=u=>{};var $_=u=>{};var H_=u=>{};var j_=u=>{let{registerUTSInterface:a,initUTSProxyClass:p,initUTSProxyFunction:b,initUTSPackageName:O,initUTSIndexClassName:y,initUTSClassName:h}=u,v="DCloudUniTheme",k="uni-theme",Oe="built-in",gt="",Ot=!0,ue=O(v,Ot),P=y(v,Ot)};var z_=u=>{};var W_=u=>{};var G_=u=>{};var q_=u=>{};function Y_(u){Kv(u),Xv(u),Qv(u),e_(u),t_(u),n_(u),r_(u),i_(u),o_(u),a_(u),s_(u),l_(u),c_(u),p_(u),h_(u),g_(u),m_(u),v_(u),__(u),b_(u),y_(u),E_(u),S_(u),w_(u),C_(u),A_(u),O_(u),T_(u),P_(u),N_(u),I_(u),k_(u),x_(u),R_(u),M_(u),B_(u),L_(u),F_(u),D_(u),U_(u),V_(u),$_(u),H_(u),j_(u),z_(u),W_(u),G_(u),q_(u),Zv(u)}var xp,Rp,Mp,hl,Bp,Lp,Fp;function J_(){return hl?{__definePage:xp,__registerApp:Rp,__registerPage:Mp,uni:hl,wx:hl,getApp:Bp,getCurrentPages:Lp,UniServiceJSBridge:Fp}:{}}function K_(u){let{weex:a,plus:p,VueShared:b}=u;return hl||({__definePage:xp,__registerApp:Rp,__registerPage:Mp,uni:hl,getApp:Bp,getCurrentPages:Lp,UniServiceJSBridge:Fp}=Lv(a,p,u),hl.VueShared=b,Y_(hl),Zm(hl)),{__definePage:xp,__registerApp:Rp,__registerPage:Mp,plus:p,uni:hl,wx:hl,getApp:Bp,getCurrentPages:Lp,UniServiceJSBridge:Fp}}function Z_(u,a){let{__uniConfig:p}=a;if(!p)return;let b=a.weex;b.document.__$automator__=!!p.automator;let O=p.renderer!=="native"&&b.config.bundleUrl.indexOf("app-service.js")!==-1;if(fo(a,J_()),O?Fv(a):(tv(u,a),Nv(a.Vue.parseClassStyles)),fo(a,K_(a)),b.config.plus_web_id==="1"){let k=b.requireModule("plus");k.setDefaultFontSize&&k.setDefaultFontSize(Math.round(a.plus.screen.resolutionWidth/20))}let{scale:y,deviceWidth:h,platform:v}=global.WXEnvironment;if(v.toLowerCase()==="ios"){let k=Math.ceil(h/y);b.requireModule("meta").setViewport({width:k,roundOffDeviation:!1})}}var jc=class extends Hc{constructor(a){super();this.nodeType=8;this.type="comment";this.value="";this.value=a}toString(){return"<!-- "+this.value+" -->"}};function wa(u,a=[]){return{module:"dom",method:u,args:a}}var Nu=class{constructor(a,p){this.id=a,this.batched=!1,this.updates=[],Qn(p)?Object.defineProperty(this,"handler",{configurable:!0,enumerable:!0,writable:!0,value:p}):console.error("[JS Runtime] invalid parameter, handler must be a function")}createFinish(a){return this.handler([wa("createFinish")],a)}updateFinish(a){return this.handler([wa("updateFinish")],a)}refreshFinish(a){return this.handler([wa("refreshFinish")],a)}createBody(a){let p=a.toJSON(),b=p.children;delete p.children;let O=[wa("createBody",[p])];return b&&O.push.apply(O,b.map(y=>wa("addElement",[p.ref,y,-1]))),this.addActions(O)}addElement(a,p,b){return b>=0||(b=-1),this.addActions(wa("addElement",[p,a.toJSON(),b]))}removeElement(a){if(Yi(a)){let p=a.map(b=>wa("removeElement",[b]));return this.addActions(p)}return this.addActions(wa("removeElement",[a]))}moveElement(a,p,b){return this.addActions(wa("moveElement",[a,p,b]))}setAttr(a,p,b){return this.addActions(wa("updateAttrs",[a,{[p]:b}]))}setStyle(a,p,b){return this.addActions(wa("updateStyle",[a,{[p]:b}]))}setStyles(a,p){return this.addActions(wa("updateStyle",[a,p]))}addEvent(a,p){return this.addActions(wa("addEvent",[a,p]))}removeEvent(a,p){return this.addActions(wa("removeEvent",[a,p]))}handler(a,p){return p&&p()}addActions(a){let p=this.updates,b=this.handler;if(Yi(a)||(a=[a]),this.batched)p.push.apply(p,a);else return b(a)}};var Dp={createBody:"callCreateBody",addElement:"callAddElement",removeElement:"callRemoveElement",moveElement:"callMoveElement",updateAttrs:"callUpdateAttrs",updateStyle:"callUpdateStyle",addEvent:"callAddEvent",removeEvent:"callRemoveEvent"};function X_(u,a){let p=a||global.callNative;return Qn(p)||console.error("[JS Runtime] no default handler"),function(O){Yi(O)||(O=[O]);for(let y=0;y<O.length;y++){let h=Bx(u,O[y],p);if(h===-1)return h}}}function Mx(u,a){return u==="dom"&&Dp[a]&&Qn(global[Dp[a]])}function Bx(u,a,p){let{module:b,method:O,args:y}=a;return Mx(b,O)?global[Dp[O]](u,...y,"-1"):p(u,[a],"-1")}var yd=class extends ko{constructor(a){super();this.value=a,this.nodeType=3,this.type="text",this.value=""}toString(){return""+this.value}};var Q_={slider:{change:function(u){return{index:u.index,source:u.source}},scroll:function(u){return{offsetXRatio:u.offsetXRatio,offsetYRatio:u.offsetYRatio,drag:u.drag}}},"scroll-view":{scrollend:function(u){return{contentOffset:u.contentOffset}}}};function eb(u){let{attr:a,offsetLeft:p,offsetTop:b}=u,O={};return a&&Object.keys(a).forEach(y=>{y.indexOf("data-")===0&&(O[y.replace("data-","")]=a[y])}),{id:a&&a.id||"",dataset:O,offsetLeft:p||0,offsetTop:b||0}}var Lx=["a","div","list","cell","loading","refresh","recycle-list","scroller","indicator","waterfall","web","richtext"],Fx=["viewappear","viewdisappear"],Dx={markertap:["markerId"],controltap:["controlId"],regionchange:["causedBy"],end:["causedBy"],appear:["direction"],disappear:["direction"]};function tb(u,a){let p=u.type;if(Fx.indexOf(p)!==-1)return u;let b=u.currentTarget,O=b.type.replace("u-","");if(Lx.indexOf(O)!==-1)return u;let{timestamp:y,target:h}=u;if(!a){let Oe=Q_[O];Oe?Qn(Oe[p])?a=Oe[p](u):a=u.detail||{}:a=u.detail||{}}let v={type:p,timeStamp:y,target:eb(h),currentTarget:eb(b),detail:a,touches:p==="touchend"||p==="panend"?[]:u.changedTouches,changedTouches:u.changedTouches};u.componentId&&(v.componentId=u.componentId);let k=Dx[p];return k&&k.forEach(Oe=>{Dc(u,Oe)&&(v[Oe]=u[Oe])}),v}function Ux(u,a){let p=a.attrs||{};for(let O in p)u.setAttr(O,p[O],!0);let b=a.style||{};for(let O in b)u.setStyle(O,b[O],!0)}var Va=class{constructor(a,p="",b){a=a?a.toString():"",this.id=a,this.URL=p,pv(a,this),this.nodeMap={};let O=Va.Listener||Nu;this.listener=new O(a,b||X_(a,Va.handler)),this.taskCenter=new Pu(a,b?(y,h)=>b(h):Va.handler),this.createDocumentElement()}getRef(a){return this.nodeMap[a]}open(){this.listener.batched=!1}close(){this.listener.batched=!0}createDocumentElement(){if(!this.documentElement){let a=new ko("document");a.docId=this.id,a.ownerDocument=this,a.role="documentElement",a.ref="_documentElement",this.nodeMap._documentElement=a,this.documentElement=a,Object.defineProperty(a,"appendChild",{configurable:!0,enumerable:!0,writable:!0,value:p=>{hp(this,p)}}),Object.defineProperty(a,"insertBefore",{configurable:!0,enumerable:!0,writable:!0,value:(p,b)=>{hp(this,p,b)}}),hr("debug")&&po(`Create document element (id: "${a.docId}", ref: "${a.ref}")`)}return this.documentElement}createBody(a,p){if(!this.body){let b=new ko(a,p);gp(this,b),hr("debug")&&po(`[createBody](${this.id},${b.type},${b.ref}) (${JSON.stringify(b.toJSON(!0))}).`)}return this.body}createElement(a,p){let b=new ko(a,p);return hr("debug")&&po(`[createElement](${this.id},${b.type},${b.ref}) (${JSON.stringify(b.toJSON(!0))}).`),b}createComment(a){return new jc(a)}createText(a){return new yd(a)}fireEvent(a,p,b,O,y){if(!a)return;b=b||{},b.type=b.type||p,b.target=a,b.currentTarget=a,b.timestamp=Date.now(),O&&Ux(a,O);let h=!0,v=this.getRef("_root");if(v&&v.attr){let k=v.attr.bubble;h=k==="true"||k===!0||h&&k===void 0}return b=tb(b),a.fireEvent(p,b,h,y)}destroy(){hr("debug")&&po(`[destroy](${this.id},document) Destroy document (id: "${this.id}", URL: "${this.URL}")`),this.taskCenter.destroyCallback(),delete this.listener,delete this.nodeMap,delete this.taskCenter,hv(this.id)}};Va.handler=null;var nb={InputElementDiv:"<WhiteSpace>|<LineTerminator>|<ReservedWord>|<Identifier>|<NumericLiteral>|<Punctuator>|<StringLiteral>",InputElementRegExp:"<WhiteSpace>|<LineTerminator>|<ReservedWord>|<Identifier>|<NumericLiteral>|<Punctuator>|<StringLiteral>",ReservedWord:"<Keyword>|<NullLiteral>|<BooleanLiteral>",WhiteSpace:/[\t\v\f\u0020\u00A0\u1680\u180E\u2000-\u200A\u202F\u205f\u3000\uFEFF]/,LineTerminator:/[\n\r\u2028\u2029]/,Keyword:/new(?![_$a-zA-Z0-9])|void(?![_$a-zA-Z0-9])|delete(?![_$a-zA-Z0-9])|in(?![_$a-zA-Z0-9])|instanceof(?![_$a-zA-Z0-9])|typeof(?![_$a-zA-Z0-9])/,NullLiteral:/null(?![_$a-zA-Z0-9])/,BooleanLiteral:/(?:true|false)(?![_$a-zA-Z0-9])/,Identifier:/[_$a-zA-Z][_$a-zA-Z0-9]*/,Punctuator:/\/|=>|\*\*|>>>=|>>=|<<=|===|!==|>>>|<<|%=|\*=|-=|\+=|<=|>=|==|!=|\^=|\|=|\|\||&&|&=|>>|\+\+|--|\:|}|\*|&|\||\^|!|~|-|\+|\?|%|=|>|<|,|;|\.(?![0-9])|\]|\[|\)|\(|{/,DivPunctuator:/\/=|\//,NumericLiteral:/(?:0[xX][0-9a-fA-F]*|\.[0-9]+|(?:[1-9]+[0-9]*|0)(?:\.[0-9]*|\.)?)(?:[eE][+-]{0,1}[0-9]+)?(?![_$a-zA-Z0-9])/,StringLiteral:/"(?:[^"\n\\\r\u2028\u2029]|\\(?:['"\\bfnrtv\n\r\u2028\u2029]|\r\n)|\\x[0-9a-fA-F]{2}|\\u[0-9a-fA-F]{4}|\\[^0-9ux'"\\bfnrtv\n\\\r\u2028\u2029])*"|'(?:[^'\n\\\r\u2028\u2029]|\\(?:['"\\bfnrtv\n\r\u2028\u2029]|\r\n)|\\x[0-9a-fA-F]{2}|\\u[0-9a-fA-F]{4}|\\[^0-9ux'"\\bfnrtv\n\\\r\u2028\u2029])*'/,RegularExpressionLiteral:/\/(?:\[(?:\\[\s\S]|[^\]])*\]|[^*\/\\\n\r\u2028\u2029]|\\[^\n\r\u2028\u2029])(?:\[(?:\\[\s\S]|[^\]])*\]|[^\/\\\n\r\u2028\u2029]|\\[^\n\r\u2028\u2029])*\/[0-9a-zA-Z]*/};function rb(u,a,p){var b=[a];function O(h){var v=new RegExp;return v.compile(h.replace(/<([^>]+)>/g,function(k,Oe){return u[Oe]?(b.push(Oe),u[Oe]instanceof RegExp?"("+u[Oe].source+")":"("+O(u[Oe]).source+")"):""}),p),v}var y=O(u[a]);this.exec=function(h){var v=y.exec(h);if(v==null)return null;for(var k=new String(v[0]),Oe=0;Oe<b.length;Oe++)v[Oe]&&(k[b[Oe]]=v[Oe]);return k},Object.defineProperty(this,"lastIndex",{get:function(){return y.lastIndex},set:function(h){y.lastIndex=h}})}function Vx(){var u=new rb(nb,"InputElementDiv","g"),a=new rb(nb,"InputElementRegExp","g"),p;Object.defineProperty(this,"source",{get:function(){return p},set:function(b){p=b,u.lastIndex=0,a.lastIndex=0}}),this.reset=function(){u.lastIndex=0,a.lastIndex=0},this.getNextToken=function(b){var O=u.lastIndex,y;b?y=u:y=a;var h=y.exec(p);if(h&&y.lastIndex-O>h.length)throw new SyntaxError("Unexpected token ILLEGAL");return u.lastIndex=y.lastIndex,a.lastIndex=y.lastIndex,h}}var ib={IdentifierName:[["Identifier"]],Literal:[["NullLiteral"],["BooleanLiteral"],["NumericLiteral"],["StringLiteral"],["RegularExpressionLiteral"]],PrimaryExpression:[["Identifier"],["Literal"],["(","Expression",")"]],CallExpression:[["PrimaryExpression","Arguments"],["CallExpression","Arguments"]],Arguments:[["(",")"],["(","ArgumentList",")"]],ArgumentList:[["ConditionalExpression"],["ArgumentList",",","ConditionalExpression"]],LeftHandSideExpression:[["PrimaryExpression"],["CallExpression"]],UnaryExpression:[["LeftHandSideExpression"],["void","UnaryExpression"],["+","UnaryExpression"],["-","UnaryExpression"],["~","UnaryExpression"],["!","UnaryExpression"]],ExponentiationExpression:[["UnaryExpression"],["ExponentiationExpression","**","UnaryExpression"]],MultiplicativeExpression:[["MultiplicativeExpression","/","ExponentiationExpression"],["ExponentiationExpression"],["MultiplicativeExpression","*","ExponentiationExpression"],["MultiplicativeExpression","%","ExponentiationExpression"]],AdditiveExpression:[["MultiplicativeExpression"],["AdditiveExpression","+","MultiplicativeExpression"],["AdditiveExpression","-","MultiplicativeExpression"]],ShiftExpression:[["AdditiveExpression"],["ShiftExpression","<<","AdditiveExpression"],["ShiftExpression",">>","AdditiveExpression"],["ShiftExpression",">>>","AdditiveExpression"]],RelationalExpression:[["ShiftExpression"],["RelationalExpression","<","ShiftExpression"],["RelationalExpression",">","ShiftExpression"],["RelationalExpression","<=","ShiftExpression"],["RelationalExpression",">=","ShiftExpression"],["RelationalExpression","instanceof","ShiftExpression"],["RelationalExpression","in","ShiftExpression"]],EqualityExpression:[["RelationalExpression"],["EqualityExpression","==","RelationalExpression"],["EqualityExpression","!=","RelationalExpression"],["EqualityExpression","===","RelationalExpression"],["EqualityExpression","!==","RelationalExpression"]],BitwiseANDExpression:[["EqualityExpression"],["BitwiseANDExpression","&","EqualityExpression"]],BitwiseXORExpression:[["BitwiseANDExpression"],["BitwiseXORExpression","^","BitwiseANDExpression"]],BitwiseORExpression:[["BitwiseXORExpression"],["BitwiseORExpression","|","BitwiseXORExpression"]],LogicalANDExpression:[["BitwiseORExpression"],["LogicalANDExpression","&&","BitwiseORExpression"]],LogicalORExpression:[["LogicalANDExpression"],["LogicalORExpression","||","LogicalANDExpression"]],ConditionalExpression:[["LogicalORExpression"],["LogicalORExpression","?","LogicalORExpression",":","LogicalORExpression"]],Expression:[["ConditionalExpression"],["Expression",",","ConditionalExpression"]],Program:[["Expression"]]};function df(u,a){this.name=u,this.token=a,this.childNodes=[],this.toString=function(p){if(p||(p=""),this.childNodes.length==1)return this.childNodes[0].toString(p);for(var b=p+this.name+(this.token!=null&&this.name!=this.token?":"+this.token:"")+`
`,O=0;O<this.childNodes.length;O++)b+=this.childNodes[O].toString(p+"    ");return b}}function $x(){var u,a={Program:"$"},p={};function b(v){p[JSON.stringify(v)]=v;for(var k=Object.getOwnPropertyNames(v);k.length;){var Oe=k.shift();!ib[Oe]||ib[Oe].forEach(function(Ot){v[Ot[0]]||k.push(Ot[0]);var ue=v,P=null;Ot.forEach(function(Nt){ue[Nt]||(ue[Nt]={}),P=ue,ue=ue[Nt]}),v[Oe].$div&&(ue.$div=!0),ue.$reduce=Oe,ue.$count=Ot.length})}for(var gt in v)typeof v[gt]!="object"||gt.charAt(0)=="$"||v[gt].$closure||(p[JSON.stringify(v[gt])]?v[gt]=p[JSON.stringify(v[gt])]:b(v[gt]));v.$closure=!0}b(a);var O=[],y=[a],h=a;this.insertSymbol=function(k,Oe){for(;!h[k.name]&&h.$reduce;){for(var gt=h.$count,Ot=new df(h.$reduce);gt--;)Ot.childNodes.push(O.pop()),y.pop();h=y[y.length-1],this.insertSymbol(Ot)}if(h=h[k.name],O.push(k),y.push(h),!h)throw new Error;return h.$div},this.reset=function(){h=a,O=[],y=[a]},Object.defineProperty(this,"grammarTree",{get:function(){try{for(;h.$reduce;){for(var v=h.$count,k=new df(h.$reduce);v--;)k.childNodes.push(O.pop()),y.pop();h=y[y.length-1],this.insertSymbol(k)}if(O.length>0&&h[";"])return this.insertSymbol(new df(";",";")),this.grammarTree;if(O.length!=1||O[0].name!="Program")throw new Error}catch(Oe){throw new SyntaxError("Unexpected end of input")}return O[0]}})}function Hx(){this.lexicalParser=new Vx,this.syntacticalParser=new $x;var u=["NullLiteral","BooleanLiteral","NumericLiteral","StringLiteral","RegularExpressionLiteral","Identifier","**","=>","{","}","(",")","[","]",".",";",",","<",">","<=",">=","==","!=","===","!==","+","-","*","%","++","--","<<",">>",">>>","&","|","^","!","~","&&","||","?",":","=","+=","-=","*=","%=","<<=",">>=",">>>=","&=","|=","^=","/","/=","instanceof","typeof","new","void","debugger","this","delete","in"],a={};u.forEach(function(p){Object.defineProperty(a,p,{})}),this.reset=function(){this.lexicalParser.reset(),this.syntacticalParser.reset()},this.parse=function(p,b){var O,y=!1;this.lexicalParser.source=p;for(var h=!1;O=this.lexicalParser.getNextToken(h);){b&&b(O);try{if(Object.getOwnPropertyNames(O).some(v=>a.hasOwnProperty(v)?(h=this.syntacticalParser.insertSymbol(new df(v,O),y),y=!1,!0):!1))continue;(O.Keyword||O.Punctuator||O.DivPunctuator)&&a.hasOwnProperty(O.toString())&&(h=this.syntacticalParser.insertSymbol(new df(O.toString(),O),y))}catch(v){throw new SyntaxError("Unexpected token "+O)}}return this.syntacticalParser.grammarTree}}var ob=new Hx;function jx(u){ob.reset(),this.tree=ob.parse(u),this.paths=[];var a=Object.create(null),p=this,b=Object.create(null);this.isSimple,this.isConst,y(this.tree),O(this.tree),this.paths.length===0&&(this.isConst=!0),this.setter=function(k){for(var Oe=a,gt=0;gt<k.length-1;gt++)Oe[k[gt]]||(Oe[k[gt]]=Object.create(null)),Oe=Oe[k[gt]];return{isCompleted:function(){for(var Ot in b)if(!b[Ot])return!1;return!0},set:function(Ot){if(b[k.join(".")]||(b[k.join(".")]=!0),Oe[k[gt]]=Ot,this.isCompleted())return p.exec()}}},this.valueOf=this.exec=function(){try{return function(){return(0,eval)(u)}.call(a)}catch(k){}};function O(k){for(var Oe=k;Oe.childNodes.length<=1&&Oe.name!=="MemberExpression";)Oe=Oe.childNodes[0];Oe.name==="MemberExpression"?p.isSimple=!0:p.isSimple=!1}function y(k){if(k.name==="CallExpression"&&k.childNodes[k.childNodes.length-1].name!=="CallExpression"){var Oe=h(k.childNodes[1]);y(k.childNodes[0])}else if(k.name==="NewExpression"&&k.childNodes.length===1)var Oe=h(k.childNodes[0]);else if(k.name==="MemberExpression"&&k.childNodes.length===1)var Oe=h(k);else for(var gt=0;gt<k.childNodes.length;gt++)y(k.childNodes[gt])}function h(k){if(k.childNodes[0].name==="IdentifierName"){var Oe=h(k.childNodes[2]);return Oe&&(Oe=Oe.concat(k.childNodes[0].childNodes[0].token.toString())),v(Oe),Oe}else if(k.childNodes[0].name==="PrimaryExpression")if(k.childNodes[0].childNodes[0].name==="Identifier"){var Oe=[k.childNodes[0].childNodes[0].token.toString()];return v(Oe),Oe}else return null;else{if(k.childNodes[0].name==="]")return h(k.childNodes[3]),y(k.childNodes[1]),null;if(k.childNodes[0].name==="Arguments")return y(k.childNodes[0]),y(k.childNodes[1]),null;for(var gt=0;gt<k.childNodes.length;gt++)y(k.childNodes[gt])}}function v(k){for(var Oe=a,gt=0;gt<k.length-1;gt++)Oe[k[gt]]||(Oe[k[gt]]=Object.create(null)),Oe=Oe[k[gt]];p.paths.push(k),b[k.join(".")]=!1}}function zc(u){var a=u.childNodes.slice().reverse(),p=a.filter(k=>!k.token||!k.token.Punctuator);if(u.name==="UnaryExpression"&&a.length===2&&a[0].name==="-"&&p.length===1){var b=zc(p[0]);return b.value=-b.value,b}if(u.name==="Arguments"){for(var O=[],y=p[0];y;)y.childNodes.length===3&&(O.unshift(y.childNodes[0]),y=y.childNodes[2]),y.childNodes.length===1&&(O.unshift(y.childNodes[0]),y=null);return{type:"Arguments",children:O.map(k=>zc(k))}}if(p&&p.length===1){var b=zc(p[0]);return b}if(u.token&&["NullLiteral","BooleanLiteral","NumericLiteral","StringLiteral","Identifier"].some(k=>u.token[k])){var h=Object.keys(u.token).filter(k=>k.match(/Literal/)||k.match(/Identifier/))[0],v={NullLiteral:null,BooleanLiteral:Boolean(u.token),NumericLiteral:Number(u.token),StringLiteral:u.token,Identifier:u.token}[h];return{type:h,value:v}}return u.name==="CallExpression"?{type:"CallExpression",children:[zc(a[0]),zc(a[1])]}:{type:a.filter(k=>k.token&&k.token.Punctuator)[0].name,children:a.filter(k=>!k.token||!k.token.Punctuator).map(k=>zc(k))}}function ab(u){var a=new jx(u);return JSON.stringify(zc(a.tree),null)}function zx(u,a){return a==="bind"&&(u==="bindingx"||u==="binding")}function sb(u){if(!u)return;try{u=JSON.parse(u)}catch(p){}let a={};if(pi(u)?a.origin=u:u&&(a.origin=u.origin,a.transformed=u.transformed),!(!a.transformed&&!a.origin))return a.transformed=a.transformed||ab(a.origin),a}function Wx(u){return u&&(u.exitExpression=sb(u.exitExpression),u.props&&u.props.forEach(a=>{a.expression=sb(a.expression)}),u)}function Gx(u){return function(a={}){if(Qn(u))return u({state:a.state==="end"?"exit":a.state,t:a.t!==void 0?a.t:a.deltaT})}}function lb(u,a,p){return p&&(zx(u,a)?function(b,O=function(){}){if(!b)throw new Error("should pass options for binding");return Wx(b),p(b,b&&b.eventType==="timing"?Gx(O):O)}:p)}function qx(u,a){Object.defineProperty(u,"[[CurrentInstanceId]]",{value:a})}function cb(u){return u["[[CurrentInstanceId]]"]}function Yx(u,a,p){let b=ni(u);return!b||!Qn(b.send)?(console.error(`[JS Framework] Failed to find taskCenter (${u}).`),null):(...O)=>b.send("module",{module:a,method:p},O)}function Jx(u,a,p,b){let O=ni(u);return!O||!Qn(O.send)?(console.error(`[JS Framework] Failed to find taskCenter (${u}).`),null):Qn(b)?y=>O.send("module",{module:a,method:p},[y]):(console.error(`[JS Framework] ${a}.${p} must be assigned as a function.`),null)}var Ed=class{constructor(a,p){qx(this,String(a)),this.config=p||{},this.document=new Va(a,this.config.bundleUrl),this.requireModule=this.requireModule.bind(this),this.importScript=this.importScript.bind(this),this.isRegisteredModule=ld,this.isRegisteredComponent=Op}requireModule(a){let p=cb(this);if(!(p&&this.document&&this.document.taskCenter)){console.error(`[JS Framework] Failed to requireModule("${a}"), instance (${p}) doesn't exist anymore.`);return}if(!ld(a)){console.warn(`[JS Framework] \u5F53\u524D\u8FD0\u884C\u7684\u57FA\u5EA7\u4E0D\u5305\u542B\u539F\u751F\u63D2\u4EF6[${a}]\uFF0C\u8BF7\u5728manifest\u4E2D\u914D\u7F6E\u8BE5\u63D2\u4EF6\uFF0C\u91CD\u65B0\u5236\u4F5C\u5305\u62EC\u8BE5\u539F\u751F\u63D2\u4EF6\u7684\u81EA\u5B9A\u4E49\u8FD0\u884C\u57FA\u5EA7`);return}let b={},O=Mv(a);for(let y in O)Object.defineProperty(b,y,{enumerable:!0,configurable:!0,get:()=>lb(a,y,Yx(p,a,y)),set:h=>Jx(p,a,y,h)});return b}supports(a){if(!pi(a))return null;let p=a.match(/^@(\w+)\/([\w-]+)(\.(\w+))?$/i);if(p){let b=p[1],O=p[2],y=p[4];switch(b){case"module":return ld(O,y);case"component":return Op(O)}}return null}importScript(a,p={}){let b=cb(this),O=ni(b);return new Promise(function(y,h){if(!O||!Qn(O.send))return h(new Error(`[JS Framework] Failed to import script "${a}", no taskCenter (${b}) matched.`));try{O.send("module",{module:"script",method:"importScript"},[a,p],{callback:[v=>y(v),v=>h(v)]})}catch(v){h(v)}})}};function Kx(u,a){let p=Object.create(null);return p.service=Object.create(null),dc.forEach(({name:b,options:O})=>{let y=O.create;if(y)try{let h=y(u,a);fo(p.service,h),fo(p,h.instance)}catch(h){console.error(`[JS Runtime] Failed to create service ${b}.`)}}),delete p.service.instance,Vs(p.service),p}var Zx={uid:0},Xx=cv(sf),Qx=lv(sf);function ub(u,a,p){let b=new Ed(u,a),O="Vue",y=Kx(u,{weex:b,nvue:b,config:a,created:Date.now(),framework:O});Vs(y);let h=Object.create(null);return fo(h,aR(b)),fo(h,y,{SharedObject:Zx,weex:b,nvue:b,requireModule:v=>b.requireModule(v),__WEEX_CALL_JAVASCRIPT__:Cp,services:y}),h.plus=new h.WeexPlus(b),h.VueShared=sf,h.UniShared=Xx,h.VueReactivity=Qx,Z_(u,h),Vs(h),h}function eR(u,a,p={}){let b="Vue";p=dp(p),p.env=dp(global.WXEnvironment||{}),p.bundleType=b;let O=ub(u,p);tR(a,O)}function tR(u,a){let p=[],b=[];for(let h in a)p.push(h),b.push(a[h]);let y="(function (global) { "+`
global = (function () {
  var g
  // This works in non-strict mode
  g = (function () {
    return this
  })()
  try {
    // This works if eval is allowed (see CSP)
    g = g || new Function("return this")()
  } catch (e) {
    // This works if the window reference is available
    if (typeof window === "object") g = window
  }
  return g
})() || global;
`+u+" })(Object.create(this))";return new Function(...p,y)(...b)}function nR(u){let a=Rl(u);try{if(a&&a.body)return a.body.toJSON()}catch(p){console.error("[JS Framework] Failed to get the virtual dom tree.");return}}function rR(u){Qm(u),dc.forEach(a=>{let p=a.options.destroy;p&&p(u)})}function iR(u){ev(u),dc.forEach(a=>{let p=a.options.refresh;p&&p(u)})}var oR={createInstance:eR,createInstanceContext:ub,getRoot:nR,getDocument:Rl,registerService:cd,unregisterService:ud,callJS(u,a){return Cp(u,a)},registerComponents:Bv,registerModules:Rv,destroyInstance:rR,refreshInstance:iR};function Up(){return xv(),oR}function aR(u){if(global.setTimeout&&global.setInterval)return{setTimeout:global.setTimeout,setInterval:global.setInterval,clearTimeout:global.clearTimeout,clearInterval:global.clearInterval};let a=u.requireModule("timer");return{setTimeout:(...b)=>{let O=function(){b[0](...b.slice(2))};return a.setTimeout(O,b[1]),u.document.taskCenter.callbackManager.lastCallbackId.toString()},setInterval:(...b)=>{let O=function(){b[0](...b.slice(2))};return a.setInterval(O,b[1]),u.document.taskCenter.callbackManager.lastCallbackId.toString()},clearTimeout:b=>{a.clearTimeout(b)},clearInterval:b=>{a.clearInterval(b)}}}var fb={Document:Va,Element:ko,Comment:jc,Listener:Nu,TaskCenter:Pu,sendTasks(...u){return Qn(callNative)?callNative(...u):(global.callNative||(()=>{}))(...u)}};Va.handler=fb.sendTasks;var Wc=fb;function sR(){Vs(Wc.Comment),Vs(Wc.Listener),Vs(Wc.Document.prototype),Vs(Wc.Comment.prototype),Vs(Wc.Listener.prototype)}var Sd={service:{register:cd,unregister:ud,has:Tp},freezePrototype:sR,init:Up,config:Wc};var Vp=class{constructor(a,p={}){this.type=a||"message",this.data=p.data||null,this.origin=p.origin||"",this.source=p.source||null,this.ports=p.ports||[],this.target=null,this.timeStamp=Date.now()}};var pc={},pf={};function $p(){}$p.prototype.postMessage=function(u){if(this._closed)throw new Error(`BroadcastChannel "${this.name}" is closed.`);let a=pc[this.name];if(a&&a.length)for(let p=0;p<a.length;++p){let b=a[p];b._closed||b===this||Qn(b.onmessage)&&b.onmessage(new Vp("message",{data:u}))}};$p.prototype.close=function(){if(!this._closed&&(this._closed=!0,pc[this.name])){let u=pc[this.name].filter(a=>a!==this);u.length?pc[this.name]=u:delete pc[this.name]}};var db={create:u=>{if(pf[u]=[],Qn(global.BroadcastChannel))return{};let a={BroadcastChannel:function(p){Object.defineProperty(this,"name",{configurable:!1,enumerable:!0,writable:!1,value:String(p)}),this._closed=!1,this.onmessage=null,pc[this.name]||(pc[this.name]=[]),pc[this.name].push(this),pf[u].push(this)}};return a.BroadcastChannel.prototype=$p.prototype,{instance:a}},destroy:u=>{pf[u]&&(pf[u].forEach(a=>a.close()),delete pf[u])}};function Hp(){let{init:u}=Sd;Sd.service.register("BroadcastChannel",db),Sd.freezePrototype();let a=u();for(let p in a)global[p]=(...b)=>{let O=a[p](...b);return O instanceof Error&&console.error(O.toString()),O}}var XF=global.console;function pb(){if(fv(),global.WXEnvironment&&global.WXEnvironment.platform!=="Web")global.console={debug:(...u)=>{hr("debug")&&global.nativeLog(...hf(u),"__DEBUG")},log:(...u)=>{hr("log")&&global.nativeLog(...hf(u),"__LOG")},info:(...u)=>{hr("info")&&global.nativeLog(...hf(u),"__INFO")},warn:(...u)=>{hr("warn")&&global.nativeLog(...hf(u),"__WARN")},error:(...u)=>{hr("error")&&global.nativeLog(...hf(u),"__ERROR")}};else{let{debug:u,log:a,info:p,warn:b,error:O}=console;console.__ori__={debug:u,log:a,info:p,warn:b,error:O},console.debug=(...y)=>{hr("debug")&&console.__ori__.debug.apply(console,y)},console.log=(...y)=>{hr("log")&&console.__ori__.log.apply(console,y)},console.info=(...y)=>{hr("info")&&console.__ori__.info.apply(console,y)},console.warn=(...y)=>{hr("warn")&&console.__ori__.warn.apply(console,y)},console.error=(...y)=>{hr("error")&&console.__ori__.error.apply(console,y)}}}function hf(u){return u.map(a=>{if(dl(a).toLowerCase()==="[object object]")try{a=JSON.stringify(a)}catch(b){a="[object object]"}else a=String(a);return a})}pb();Hp();})();
/*! #__NO_SIDE_EFFECTS__ */
/**
* @dcloudio/uni-app-nvue v3.4.21
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**/
/**
* @dcloudio/uni-app-service-vue v3.4.21
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**/
/**
* @vue/reactivity v3.4.21
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**/
/**
* @vue/shared v3.4.21
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**/

